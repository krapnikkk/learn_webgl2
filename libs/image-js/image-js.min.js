!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).IJS={})}(this,(function(exports){"use strict";const bitMethods={getBit(t){return this.data[getSlot(t)]&1<<getShift(t)?1:0},setBit(t){this.data[getSlot(t)]|=1<<getShift(t)},clearBit(t){this.data[getSlot(t)]&=~(1<<getShift(t))},toggleBit(t){this.data[getSlot(t)]^=1<<getShift(t)},getBitXY(t,e){return t>=this.width||e>=this.height?0:this.getBit(e*this.width+t)},setBitXY(t,e){this.setBit(e*this.width+t)},clearBitXY(t,e){this.clearBit(e*this.width+t)},toggleBitXY(t,e){this.toggleBit(e*this.width+t)}};function getSlot(t){return t>>3}function getShift(t){return 7-(7&t)}function setBitMethods(t){for(const e in bitMethods)t.prototype[e]=bitMethods[e]}function checkProcessable(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{bitDepth:r,alpha:i,colorModel:n,components:s,channels:o}=e;if("string"!=typeof t||0===t.length)throw new TypeError("processName must be a string");if(r&&(Array.isArray(r)||(r=[r]),!r.includes(this.bitDepth)))throw new TypeError(`The process: ${t} can only be applied if bit depth is in: ${r}`);if(i&&(Array.isArray(i)||(i=[i]),!i.includes(this.alpha)))throw new TypeError(`The process: ${t} can only be applied if alpha is in: ${i}`);if(n&&(Array.isArray(n)||(n=[n]),!n.includes(this.colorModel)))throw new TypeError(`The process: ${t} can only be applied if color model is in: ${n}`);if(s&&(Array.isArray(s)||(s=[s]),!s.includes(this.components))){let e=`The process: ${t} can only be applied if the number of components is in: ${s}`;throw 1===s.length&&1===s[0]?new TypeError(`${e}.\rYou should transform your image using "image.grey()" before applying the algorithm.`):new TypeError(e)}if(o&&(Array.isArray(o)||(o=[o]),!o.includes(this.channels)))throw new TypeError(`The process: ${t} can only be applied if the number of channels is in: ${o}`)}function createBlob(t,e){t=t||[],"string"==typeof(e=e||{})&&(e={type:e});try{return new Blob(t,e)}catch(n){if("TypeError"!==n.name)throw n;for(var r=new("undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder),i=0;i<t.length;i+=1)r.append(t[i]);return r.getBlob(e.type)}}function dataURLToBlob(t){var e=t.match(/data:([^;]+)/)[1],r=t.replace(/^[^,]+,/,"");return createBlob([binaryStringToArrayBuffer(atob(r))],{type:e})}function canvasToBlob(t,e,r){return"function"==typeof t.toBlob?new Promise((function(i){t.toBlob(i,e,r)})):Promise.resolve(dataURLToBlob(t.toDataURL(e,r)))}function binaryStringToArrayBuffer(t){for(var e=t.length,r=new ArrayBuffer(e),i=new Uint8Array(r),n=-1;++n<e;)i[n]=t.charCodeAt(n);return r}var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function getAugmentedNamespace(t){if(t.__esModule)return t;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach((function(r){var i=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(e,r,i.get?i:{enumerable:!0,get:function(){return t[r]}})})),e}function commonjsRequire(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var src$6={};const decoder$1=new TextDecoder("utf-8");function decode$5(t){return decoder$1.decode(t)}const encoder$1=new TextEncoder;function encode$3(t){return encoder$1.encode(t)}const defaultByteLength$1=8192;class IOBuffer$4{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultByteLength$1,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=!1;"number"==typeof t?t=new ArrayBuffer(t):(r=!0,this.lastWrittenByte=t.byteLength);const i=e.offset?e.offset>>>0:0,n=t.byteLength-i;let s=i;(ArrayBuffer.isView(t)||t instanceof IOBuffer$4)&&(t.byteLength!==t.buffer.byteLength&&(s=t.byteOffset+i),t=t.buffer),this.lastWrittenByte=r?n:0,this.buffer=t,this.length=n,this.byteLength=n,this.byteOffset=s,this.offset=0,this.littleEndian=!0,this._data=new DataView(this.buffer,s,n),this._mark=0,this._marks=[]}available(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.offset+t<=this.length}isLittleEndian(){return this.littleEndian}setLittleEndian(){return this.littleEndian=!0,this}isBigEndian(){return!this.littleEndian}setBigEndian(){return this.littleEndian=!1,this}skip(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.offset+=t,this}seek(t){return this.offset=t,this}mark(){return this._mark=this.offset,this}reset(){return this.offset=this._mark,this}pushMark(){return this._marks.push(this.offset),this}popMark(){const t=this._marks.pop();if(void 0===t)throw new Error("Mark stack empty");return this.seek(t),this}rewind(){return this.offset=0,this}ensureAvailable(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;if(!this.available(t)){const e=2*(this.offset+t),r=new Uint8Array(e);r.set(new Uint8Array(this.buffer)),this.buffer=r.buffer,this.length=this.byteLength=e,this._data=new DataView(this.buffer)}return this}readBoolean(){return 0!==this.readUint8()}readInt8(){return this._data.getInt8(this.offset++)}readUint8(){return this._data.getUint8(this.offset++)}readByte(){return this.readUint8()}readBytes(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;const e=new Uint8Array(t);for(let r=0;r<t;r++)e[r]=this.readByte();return e}readInt16(){const t=this._data.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}readUint16(){const t=this._data.getUint16(this.offset,this.littleEndian);return this.offset+=2,t}readInt32(){const t=this._data.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}readUint32(){const t=this._data.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat32(){const t=this._data.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat64(){const t=this._data.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}readBigInt64(){const t=this._data.getBigInt64(this.offset,this.littleEndian);return this.offset+=8,t}readBigUint64(){const t=this._data.getBigUint64(this.offset,this.littleEndian);return this.offset+=8,t}readChar(){return String.fromCharCode(this.readInt8())}readChars(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e="";for(let r=0;r<t;r++)e+=this.readChar();return e}readUtf8(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return decode$5(this.readBytes(t))}writeBoolean(t){return this.writeUint8(t?255:0),this}writeInt8(t){return this.ensureAvailable(1),this._data.setInt8(this.offset++,t),this._updateLastWrittenByte(),this}writeUint8(t){return this.ensureAvailable(1),this._data.setUint8(this.offset++,t),this._updateLastWrittenByte(),this}writeByte(t){return this.writeUint8(t)}writeBytes(t){this.ensureAvailable(t.length);for(let e=0;e<t.length;e++)this._data.setUint8(this.offset++,t[e]);return this._updateLastWrittenByte(),this}writeInt16(t){return this.ensureAvailable(2),this._data.setInt16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeUint16(t){return this.ensureAvailable(2),this._data.setUint16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeInt32(t){return this.ensureAvailable(4),this._data.setInt32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeUint32(t){return this.ensureAvailable(4),this._data.setUint32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat32(t){return this.ensureAvailable(4),this._data.setFloat32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat64(t){return this.ensureAvailable(8),this._data.setFloat64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigInt64(t){return this.ensureAvailable(8),this._data.setBigInt64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigUint64(t){return this.ensureAvailable(8),this._data.setBigUint64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeChar(t){return this.writeUint8(t.charCodeAt(0))}writeChars(t){for(let e=0;e<t.length;e++)this.writeUint8(t.charCodeAt(e));return this}writeUtf8(t){return this.writeBytes(encode$3(t))}toArray(){return new Uint8Array(this.buffer,this.byteOffset,this.lastWrittenByte)}_updateLastWrittenByte(){this.offset>this.lastWrittenByte&&(this.lastWrittenByte=this.offset)}}var IOBuffer$5=Object.freeze({__proto__:null,IOBuffer:IOBuffer$4}),require$$0$3=getAugmentedNamespace(IOBuffer$5),constants$4={BITMAPV5HEADER:{LogicalColorSpace:{LCS_CALIBRATED_RGB:0,LCS_sRGB:1934772034,LCS_WINDOWS_COLOR_SPACE:1466527264},Compression:{BI_RGB:0,BI_RLE8:1,BI_RLE4:2,BI_BITFIELDS:3,BI_JPEG:4,BI_PNG:5,BI_CMYK:11,BI_CMYKRLE8:12,BI_CMYKRLE4:13},GamutMappingIntent:{LCS_GM_ABS_COLORIMETRIC:8,LCS_GM_BUSINESS:1,LCS_GM_GRAPHICS:2,LCS_GM_IMAGES:4}}};const{IOBuffer:IOBuffer$3}=require$$0$3,constants$3=constants$4,tableLeft=[];for(let t=0;t<=8;t++)tableLeft.push(255<<t);class BMPEncoder extends IOBuffer$3{constructor(t){if(1!==t.bitDepth)throw new Error("Only bitDepth of 1 is supported");if(!t.height||!t.width)throw new Error("ImageData width and height are required");super(t.data),this.width=t.width,this.height=t.height,this.bitDepth=t.bitDepth,this.channels=t.channels,this.components=t.components}encode(){this.encoded=new IOBuffer$3,this.encoded.skip(14),this.writeBitmapV5Header(),this.writeColorTable();const t=this.encoded.offset;this.writePixelArray(),this.encoded.rewind(),this.writeBitmapFileHeader(t);const e=this.encoded.toArray();return Buffer.from(e.buffer,e.byteOffset,e.byteLength)}writePixelArray(){let t=this.encoded;const e=4*Math.floor((this.bitDepth*this.width+31)/32),r=Math.ceil(this.bitDepth*this.width/8),i=e-r,n=this.bitDepth*this.width%8,s=0===n?0:8-n,o=e*this.height;let a,l,h=0,c=0,u=8;t.mark(),l=this.readUint8();for(let o=this.height-1;o>=0;o--){const f=0===o;t.reset(),t.skip(o*e);for(let e=0;e<r;e++){const o=e===r-1;c<=s&&o?(t.writeByte(l<<c),0!==s&&s!==c||f||(a=l,l=this.readByte())):0===c?(a=l,l=this.readUint8(),t.writeByte(a)):(a=l,l=this.readUint8(),t.writeByte(a<<c&tableLeft[c]|l>>u)),o&&(h+=n||0,t.skip(i),c=h%8,u=8-c)}}e>r&&(t.reset(),t.skip(o-1),t.writeUint8(0))}writeColorTable(){this.encoded.writeUint32(0).writeUint32(16777215)}writeBitmapFileHeader(t){this.encoded.writeChars("BM").writeInt32(this.encoded.lastWrittenByte).writeUint16(0).writeUint16(0).writeUint32(t)}writeBitmapV5Header(){const t=4*Math.floor((this.bitDepth*this.width+31)/32)*this.height;this.encoded.writeUint32(124).writeInt32(this.width).writeInt32(this.height).writeUint16(1).writeUint16(this.bitDepth).writeUint32(constants$3.BITMAPV5HEADER.Compression.BI_RGB).writeUint32(t).writeInt32(0).writeInt32(0).writeUint32(Math.pow(2,this.bitDepth)).writeUint32(Math.pow(2,this.bitDepth)).writeUint32(4278190080).writeUint32(16711680).writeUint32(65280).writeUint32(255).writeUint32(constants$3.BITMAPV5HEADER.LogicalColorSpace.LCS_sRGB).skip(36).skip(12).writeUint32(constants$3.BITMAPV5HEADER.GamutMappingIntent.LCS_GM_IMAGES).skip(12)}}var BMPEncoder_1=BMPEncoder;const Encoder=BMPEncoder_1;var encode$2=src$6.encode=function(t){return new Encoder(t).encode()};
/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */const Z_FIXED$1=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN$1=2;function zero$1(t){let e=t.length;for(;--e>=0;)t[e]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH$1=3,MAX_MATCH$1=258,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=new Array(2*(L_CODES$1+2));zero$1(static_ltree);const static_dtree=new Array(2*D_CODES$1);zero$1(static_dtree);const _dist_code=new Array(DIST_CODE_LEN);zero$1(_dist_code);const _length_code=new Array(MAX_MATCH$1-MIN_MATCH$1+1);zero$1(_length_code);const base_length=new Array(LENGTH_CODES$1);zero$1(base_length);const base_dist=new Array(D_CODES$1);function StaticTreeDesc(t,e,r,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}zero$1(base_dist);const d_code=t=>t<256?_dist_code[t]:_dist_code[256+(t>>>7)],put_short=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},send_bits=(t,e,r)=>{t.bi_valid>Buf_size-r?(t.bi_buf|=e<<t.bi_valid&65535,put_short(t,t.bi_buf),t.bi_buf=e>>Buf_size-t.bi_valid,t.bi_valid+=r-Buf_size):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)},send_code=(t,e,r)=>{send_bits(t,r[2*e],r[2*e+1])},bi_reverse=(t,e)=>{let r=0;do{r|=1&t,t>>>=1,r<<=1}while(--e>0);return r>>>1},bi_flush=t=>{16===t.bi_valid?(put_short(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)},gen_bitlen=(t,e)=>{const r=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,o=e.stat_desc.extra_bits,a=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,c,u,f,d,m,g=0;for(f=0;f<=MAX_BITS$1;f++)t.bl_count[f]=0;for(r[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<HEAP_SIZE$1;h++)c=t.heap[h],f=r[2*r[2*c+1]+1]+1,f>l&&(f=l,g++),r[2*c+1]=f,c>i||(t.bl_count[f]++,d=0,c>=a&&(d=o[c-a]),m=r[2*c],t.opt_len+=m*(f+d),s&&(t.static_len+=m*(n[2*c+1]+d)));if(0!==g){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,g-=2}while(g>0);for(f=l;0!==f;f--)for(c=t.bl_count[f];0!==c;)u=t.heap[--h],u>i||(r[2*u+1]!==f&&(t.opt_len+=(f-r[2*u+1])*r[2*u],r[2*u+1]=f),c--)}},gen_codes=(t,e,r)=>{const i=new Array(MAX_BITS$1+1);let n,s,o=0;for(n=1;n<=MAX_BITS$1;n++)i[n]=o=o+r[n-1]<<1;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=bi_reverse(i[e]++,e))}},tr_static_init=()=>{let t,e,r,i,n;const s=new Array(MAX_BITS$1+1);for(r=0,i=0;i<LENGTH_CODES$1-1;i++)for(base_length[i]=r,t=0;t<1<<extra_lbits[i];t++)_length_code[r++]=i;for(_length_code[r-1]=i,n=0,i=0;i<16;i++)for(base_dist[i]=n,t=0;t<1<<extra_dbits[i];t++)_dist_code[n++]=i;for(n>>=7;i<D_CODES$1;i++)for(base_dist[i]=n<<7,t=0;t<1<<extra_dbits[i]-7;t++)_dist_code[256+n++]=i;for(e=0;e<=MAX_BITS$1;e++)s[e]=0;for(t=0;t<=143;)static_ltree[2*t+1]=8,t++,s[8]++;for(;t<=255;)static_ltree[2*t+1]=9,t++,s[9]++;for(;t<=279;)static_ltree[2*t+1]=7,t++,s[7]++;for(;t<=287;)static_ltree[2*t+1]=8,t++,s[8]++;for(gen_codes(static_ltree,L_CODES$1+1,s),t=0;t<D_CODES$1;t++)static_dtree[2*t+1]=5,static_dtree[2*t]=bi_reverse(t,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS$1+1,L_CODES$1,MAX_BITS$1),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES$1,MAX_BITS$1),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES$1,MAX_BL_BITS)},init_block=t=>{let e;for(e=0;e<L_CODES$1;e++)t.dyn_ltree[2*e]=0;for(e=0;e<D_CODES$1;e++)t.dyn_dtree[2*e]=0;for(e=0;e<BL_CODES$1;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*END_BLOCK]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0},bi_windup=t=>{t.bi_valid>8?put_short(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},copy_block=(t,e,r,i)=>{bi_windup(t),i&&(put_short(t,r),put_short(t,~r)),t.pending_buf.set(t.window.subarray(e,e+r),t.pending),t.pending+=r},smaller=(t,e,r,i)=>{const n=2*e,s=2*r;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[r]},pqdownheap=(t,e,r)=>{const i=t.heap[r];let n=r<<1;for(;n<=t.heap_len&&(n<t.heap_len&&smaller(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!smaller(e,i,t.heap[n],t.depth));)t.heap[r]=t.heap[n],r=n,n<<=1;t.heap[r]=i},compress_block=(t,e,r)=>{let i,n,s,o,a=0;if(0!==t.last_lit)do{i=t.pending_buf[t.d_buf+2*a]<<8|t.pending_buf[t.d_buf+2*a+1],n=t.pending_buf[t.l_buf+a],a++,0===i?send_code(t,n,e):(s=_length_code[n],send_code(t,s+LITERALS$1+1,e),o=extra_lbits[s],0!==o&&(n-=base_length[s],send_bits(t,n,o)),i--,s=d_code(i),send_code(t,s,r),o=extra_dbits[s],0!==o&&(i-=base_dist[s],send_bits(t,i,o)))}while(a<t.last_lit);send_code(t,END_BLOCK,e)},build_tree=(t,e)=>{const r=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let o,a,l,h=-1;for(t.heap_len=0,t.heap_max=HEAP_SIZE$1,o=0;o<s;o++)0!==r[2*o]?(t.heap[++t.heap_len]=h=o,t.depth[o]=0):r[2*o+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,r[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,o=t.heap_len>>1;o>=1;o--)pqdownheap(t,r,o);l=s;do{o=t.heap[1],t.heap[1]=t.heap[t.heap_len--],pqdownheap(t,r,1),a=t.heap[1],t.heap[--t.heap_max]=o,t.heap[--t.heap_max]=a,r[2*l]=r[2*o]+r[2*a],t.depth[l]=(t.depth[o]>=t.depth[a]?t.depth[o]:t.depth[a])+1,r[2*o+1]=r[2*a+1]=l,t.heap[1]=l++,pqdownheap(t,r,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],gen_bitlen(t,e),gen_codes(r,h,t.bl_count)},scan_tree=(t,e,r)=>{let i,n,s=-1,o=e[1],a=0,l=7,h=4;for(0===o&&(l=138,h=3),e[2*(r+1)+1]=65535,i=0;i<=r;i++)n=o,o=e[2*(i+1)+1],++a<l&&n===o||(a<h?t.bl_tree[2*n]+=a:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[2*REP_3_6]++):a<=10?t.bl_tree[2*REPZ_3_10]++:t.bl_tree[2*REPZ_11_138]++,a=0,s=n,0===o?(l=138,h=3):n===o?(l=6,h=3):(l=7,h=4))},send_tree=(t,e,r)=>{let i,n,s=-1,o=e[1],a=0,l=7,h=4;for(0===o&&(l=138,h=3),i=0;i<=r;i++)if(n=o,o=e[2*(i+1)+1],!(++a<l&&n===o)){if(a<h)do{send_code(t,n,t.bl_tree)}while(0!=--a);else 0!==n?(n!==s&&(send_code(t,n,t.bl_tree),a--),send_code(t,REP_3_6,t.bl_tree),send_bits(t,a-3,2)):a<=10?(send_code(t,REPZ_3_10,t.bl_tree),send_bits(t,a-3,3)):(send_code(t,REPZ_11_138,t.bl_tree),send_bits(t,a-11,7));a=0,s=n,0===o?(l=138,h=3):n===o?(l=6,h=3):(l=7,h=4)}},build_bl_tree=t=>{let e;for(scan_tree(t,t.dyn_ltree,t.l_desc.max_code),scan_tree(t,t.dyn_dtree,t.d_desc.max_code),build_tree(t,t.bl_desc),e=BL_CODES$1-1;e>=3&&0===t.bl_tree[2*bl_order[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e},send_all_trees=(t,e,r,i)=>{let n;for(send_bits(t,e-257,5),send_bits(t,r-1,5),send_bits(t,i-4,4),n=0;n<i;n++)send_bits(t,t.bl_tree[2*bl_order[n]+1],3);send_tree(t,t.dyn_ltree,e-1),send_tree(t,t.dyn_dtree,r-1)},detect_data_type=t=>{let e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return Z_BINARY;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return Z_TEXT;for(e=32;e<LITERALS$1;e++)if(0!==t.dyn_ltree[2*e])return Z_TEXT;return Z_BINARY};let static_init_done=!1;const _tr_init$1=t=>{static_init_done||(tr_static_init(),static_init_done=!0),t.l_desc=new TreeDesc(t.dyn_ltree,static_l_desc),t.d_desc=new TreeDesc(t.dyn_dtree,static_d_desc),t.bl_desc=new TreeDesc(t.bl_tree,static_bl_desc),t.bi_buf=0,t.bi_valid=0,init_block(t)},_tr_stored_block$1=(t,e,r,i)=>{send_bits(t,(STORED_BLOCK<<1)+(i?1:0),3),copy_block(t,e,r,!0)},_tr_align$1=t=>{send_bits(t,STATIC_TREES<<1,3),send_code(t,END_BLOCK,static_ltree),bi_flush(t)},_tr_flush_block$1=(t,e,r,i)=>{let n,s,o=0;t.level>0?(t.strm.data_type===Z_UNKNOWN$1&&(t.strm.data_type=detect_data_type(t)),build_tree(t,t.l_desc),build_tree(t,t.d_desc),o=build_bl_tree(t),n=t.opt_len+3+7>>>3,s=t.static_len+3+7>>>3,s<=n&&(n=s)):n=s=r+5,r+4<=n&&-1!==e?_tr_stored_block$1(t,e,r,i):t.strategy===Z_FIXED$1||s===n?(send_bits(t,(STATIC_TREES<<1)+(i?1:0),3),compress_block(t,static_ltree,static_dtree)):(send_bits(t,(DYN_TREES<<1)+(i?1:0),3),send_all_trees(t,t.l_desc.max_code+1,t.d_desc.max_code+1,o+1),compress_block(t,t.dyn_ltree,t.dyn_dtree)),init_block(t),i&&bi_windup(t)},_tr_tally$1=(t,e,r)=>(t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(_length_code[r]+LITERALS$1+1)]++,t.dyn_dtree[2*d_code(e)]++),t.last_lit===t.lit_bufsize-1);var _tr_init_1=_tr_init$1,_tr_stored_block_1=_tr_stored_block$1,_tr_flush_block_1=_tr_flush_block$1,_tr_tally_1=_tr_tally$1,_tr_align_1=_tr_align$1,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(t,e,r,i)=>{let n=65535&t|0,s=t>>>16&65535|0,o=0;for(;0!==r;){o=r>2e3?2e3:r,r-=o;do{n=n+e[i++]|0,s=s+n|0}while(--o);n%=65521,s%=65521}return n|s<<16|0};var adler32_1=adler32;const makeTable=()=>{let t,e=[];for(var r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e},crcTable$1=new Uint32Array(makeTable()),crc32=(t,e,r,i)=>{const n=crcTable$1,s=i+r;t^=-1;for(let r=i;r<s;r++)t=t>>>8^n[255&(t^e[r])];return-1^t};var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants$2={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:_tr_init,_tr_stored_block:_tr_stored_block,_tr_flush_block:_tr_flush_block,_tr_tally:_tr_tally,_tr_align:_tr_align}=trees,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_PARTIAL_FLUSH:Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$3,Z_BLOCK:Z_BLOCK$1,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_FILTERED:Z_FILTERED,Z_HUFFMAN_ONLY:Z_HUFFMAN_ONLY,Z_RLE:Z_RLE,Z_FIXED:Z_FIXED,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_UNKNOWN:Z_UNKNOWN,Z_DEFLATED:Z_DEFLATED$2}=constants$2,MAX_MEM_LEVEL=9,MAX_WBITS$1=15,DEF_MEM_LEVEL=8,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,PRESET_DICT=32,INIT_STATE=42,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(t,e)=>(t.msg=messages[e],e),rank=t=>(t<<1)-(t>4?9:0),zero=t=>{let e=t.length;for(;--e>=0;)t[e]=0};let HASH_ZLIB=(t,e,r)=>(e<<t.hash_shift^r)&t.hash_mask,HASH=HASH_ZLIB;const flush_pending=t=>{const e=t.state;let r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+r),t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))},flush_block_only=(t,e)=>{_tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,flush_pending(t.strm)},put_byte=(t,e)=>{t.pending_buf[t.pending++]=e},putShortMSB=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},read_buf=(t,e,r,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),r),1===t.state.wrap?t.adler=adler32_1(t.adler,e,n,r):2===t.state.wrap&&(t.adler=crc32_1(t.adler,e,n,r)),t.next_in+=n,t.total_in+=n,n)},longest_match=(t,e)=>{let r,i,n=t.max_chain_length,s=t.strstart,o=t.prev_length,a=t.nice_match;const l=t.strstart>t.w_size-MIN_LOOKAHEAD?t.strstart-(t.w_size-MIN_LOOKAHEAD):0,h=t.window,c=t.w_mask,u=t.prev,f=t.strstart+MAX_MATCH;let d=h[s+o-1],m=h[s+o];t.prev_length>=t.good_match&&(n>>=2),a>t.lookahead&&(a=t.lookahead);do{if(r=e,h[r+o]===m&&h[r+o-1]===d&&h[r]===h[s]&&h[++r]===h[s+1]){s+=2,r++;do{}while(h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&h[++s]===h[++r]&&s<f);if(i=MAX_MATCH-(f-s),s=f-MAX_MATCH,i>o){if(t.match_start=e,o=i,i>=a)break;d=h[s+o-1],m=h[s+o]}}}while((e=u[e&c])>l&&0!=--n);return o<=t.lookahead?o:t.lookahead},fill_window=t=>{const e=t.w_size;let r,i,n,s,o;do{if(s=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-MIN_LOOKAHEAD)){t.window.set(t.window.subarray(e,e+e),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,i=t.hash_size,r=i;do{n=t.head[--r],t.head[r]=n>=e?n-e:0}while(--i);i=e,r=i;do{n=t.prev[--r],t.prev[r]=n>=e?n-e:0}while(--i);s+=e}if(0===t.strm.avail_in)break;if(i=read_buf(t.strm,t.window,t.strstart+t.lookahead,s),t.lookahead+=i,t.lookahead+t.insert>=MIN_MATCH)for(o=t.strstart-t.insert,t.ins_h=t.window[o],t.ins_h=HASH(t,t.ins_h,t.window[o+1]);t.insert&&(t.ins_h=HASH(t,t.ins_h,t.window[o+MIN_MATCH-1]),t.prev[o&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=o,o++,t.insert--,!(t.lookahead+t.insert<MIN_MATCH)););}while(t.lookahead<MIN_LOOKAHEAD&&0!==t.strm.avail_in)},deflate_stored=(t,e)=>{let r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(fill_window(t),0===t.lookahead&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;const i=t.block_start+r;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE;if(t.strstart-t.block_start>=t.w_size-MIN_LOOKAHEAD&&(flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE}return t.insert=0,e===Z_FINISH$3?(flush_block_only(t,!0),0===t.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):(t.strstart>t.block_start&&(flush_block_only(t,!1),t.strm.avail_out),BS_NEED_MORE)},deflate_fast=(t,e)=>{let r,i;for(;;){if(t.lookahead<MIN_LOOKAHEAD){if(fill_window(t),t.lookahead<MIN_LOOKAHEAD&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===t.lookahead)break}if(r=0,t.lookahead>=MIN_MATCH&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-MIN_LOOKAHEAD&&(t.match_length=longest_match(t,r)),t.match_length>=MIN_MATCH)if(i=_tr_tally(t,t.strstart-t.match_start,t.match_length-MIN_MATCH),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=MIN_MATCH){t.match_length--;do{t.strstart++,t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+1]);else i=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE}return t.insert=t.strstart<MIN_MATCH-1?t.strstart:MIN_MATCH-1,e===Z_FINISH$3?(flush_block_only(t,!0),0===t.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_slow=(t,e)=>{let r,i,n;for(;;){if(t.lookahead<MIN_LOOKAHEAD){if(fill_window(t),t.lookahead<MIN_LOOKAHEAD&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===t.lookahead)break}if(r=0,t.lookahead>=MIN_MATCH&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=MIN_MATCH-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-MIN_LOOKAHEAD&&(t.match_length=longest_match(t,r),t.match_length<=5&&(t.strategy===Z_FILTERED||t.match_length===MIN_MATCH&&t.strstart-t.match_start>4096)&&(t.match_length=MIN_MATCH-1)),t.prev_length>=MIN_MATCH&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-MIN_MATCH,i=_tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-MIN_MATCH),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=MIN_MATCH-1,t.strstart++,i&&(flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE}else if(t.match_available){if(i=_tr_tally(t,0,t.window[t.strstart-1]),i&&flush_block_only(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return BS_NEED_MORE}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=_tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<MIN_MATCH-1?t.strstart:MIN_MATCH-1,e===Z_FINISH$3?(flush_block_only(t,!0),0===t.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_rle=(t,e)=>{let r,i,n,s;const o=t.window;for(;;){if(t.lookahead<=MAX_MATCH){if(fill_window(t),t.lookahead<=MAX_MATCH&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=MIN_MATCH&&t.strstart>0&&(n=t.strstart-1,i=o[n],i===o[++n]&&i===o[++n]&&i===o[++n])){s=t.strstart+MAX_MATCH;do{}while(i===o[++n]&&i===o[++n]&&i===o[++n]&&i===o[++n]&&i===o[++n]&&i===o[++n]&&i===o[++n]&&i===o[++n]&&n<s);t.match_length=MAX_MATCH-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=MIN_MATCH?(r=_tr_tally(t,1,t.match_length-MIN_MATCH),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE}return t.insert=0,e===Z_FINISH$3?(flush_block_only(t,!0),0===t.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_huff=(t,e)=>{let r;for(;;){if(0===t.lookahead&&(fill_window(t),0===t.lookahead)){if(e===Z_NO_FLUSH$2)return BS_NEED_MORE;break}if(t.match_length=0,r=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(flush_block_only(t,!1),0===t.strm.avail_out))return BS_NEED_MORE}return t.insert=0,e===Z_FINISH$3?(flush_block_only(t,!0),0===t.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE};function Config(t,e,r,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=i,this.func=n}const configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)],lm_init=t=>{t.window_size=2*t.w_size,zero(t.head),t.max_lazy_match=configuration_table[t.level].max_lazy,t.good_match=configuration_table[t.level].good_length,t.nice_match=configuration_table[t.level].nice_length,t.max_chain_length=configuration_table[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=MIN_MATCH-1,t.match_available=0,t.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED$2,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*HEAP_SIZE),this.dyn_dtree=new Uint16Array(2*(2*D_CODES+1)),this.bl_tree=new Uint16Array(2*(2*BL_CODES+1)),zero(this.dyn_ltree),zero(this.dyn_dtree),zero(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS+1),this.heap=new Uint16Array(2*L_CODES+1),zero(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES+1),zero(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateResetKeep=t=>{if(!t||!t.state)return err(t,Z_STREAM_ERROR$2);t.total_in=t.total_out=0,t.data_type=Z_UNKNOWN;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?INIT_STATE:BUSY_STATE,t.adler=2===e.wrap?0:1,e.last_flush=Z_NO_FLUSH$2,_tr_init(e),Z_OK$3},deflateReset=t=>{const e=deflateResetKeep(t);return e===Z_OK$3&&lm_init(t.state),e},deflateSetHeader=(t,e)=>t&&t.state?2!==t.state.wrap?Z_STREAM_ERROR$2:(t.state.gzhead=e,Z_OK$3):Z_STREAM_ERROR$2,deflateInit2=(t,e,r,i,n,s)=>{if(!t)return Z_STREAM_ERROR$2;let o=1;if(e===Z_DEFAULT_COMPRESSION$1&&(e=6),i<0?(o=0,i=-i):i>15&&(o=2,i-=16),n<1||n>MAX_MEM_LEVEL||r!==Z_DEFLATED$2||i<8||i>15||e<0||e>9||s<0||s>Z_FIXED)return err(t,Z_STREAM_ERROR$2);8===i&&(i=9);const a=new DeflateState;return t.state=a,a.strm=t,a.wrap=o,a.gzhead=null,a.w_bits=i,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=n+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+MIN_MATCH-1)/MIN_MATCH),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<n+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.d_buf=1*a.lit_bufsize,a.l_buf=3*a.lit_bufsize,a.level=e,a.strategy=s,a.method=r,deflateReset(t)},deflateInit=(t,e)=>deflateInit2(t,e,Z_DEFLATED$2,MAX_WBITS$1,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY$1),deflate$2=(t,e)=>{let r,i;if(!t||!t.state||e>Z_BLOCK$1||e<0)return t?err(t,Z_STREAM_ERROR$2):Z_STREAM_ERROR$2;const n=t.state;if(!t.output||!t.input&&0!==t.avail_in||n.status===FINISH_STATE&&e!==Z_FINISH$3)return err(t,0===t.avail_out?Z_BUF_ERROR$1:Z_STREAM_ERROR$2);n.strm=t;const s=n.last_flush;if(n.last_flush=e,n.status===INIT_STATE)if(2===n.wrap)t.adler=0,put_byte(n,31),put_byte(n,139),put_byte(n,8),n.gzhead?(put_byte(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),put_byte(n,255&n.gzhead.time),put_byte(n,n.gzhead.time>>8&255),put_byte(n,n.gzhead.time>>16&255),put_byte(n,n.gzhead.time>>24&255),put_byte(n,9===n.level?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(put_byte(n,255&n.gzhead.extra.length),put_byte(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=EXTRA_STATE):(put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,9===n.level?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,OS_CODE),n.status=BUSY_STATE);else{let e=Z_DEFLATED$2+(n.w_bits-8<<4)<<8,r=-1;r=n.strategy>=Z_HUFFMAN_ONLY||n.level<2?0:n.level<6?1:6===n.level?2:3,e|=r<<6,0!==n.strstart&&(e|=PRESET_DICT),e+=31-e%31,n.status=BUSY_STATE,putShortMSB(n,e),0!==n.strstart&&(putShortMSB(n,t.adler>>>16),putShortMSB(n,65535&t.adler)),t.adler=1}if(n.status===EXTRA_STATE)if(n.gzhead.extra){for(r=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),flush_pending(t),r=n.pending,n.pending!==n.pending_buf_size));)put_byte(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=NAME_STATE)}else n.status=NAME_STATE;if(n.status===NAME_STATE)if(n.gzhead.name){r=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),flush_pending(t),r=n.pending,n.pending===n.pending_buf_size)){i=1;break}i=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,put_byte(n,i)}while(0!==i);n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),0===i&&(n.gzindex=0,n.status=COMMENT_STATE)}else n.status=COMMENT_STATE;if(n.status===COMMENT_STATE)if(n.gzhead.comment){r=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),flush_pending(t),r=n.pending,n.pending===n.pending_buf_size)){i=1;break}i=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,put_byte(n,i)}while(0!==i);n.gzhead.hcrc&&n.pending>r&&(t.adler=crc32_1(t.adler,n.pending_buf,n.pending-r,r)),0===i&&(n.status=HCRC_STATE)}else n.status=HCRC_STATE;if(n.status===HCRC_STATE&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&flush_pending(t),n.pending+2<=n.pending_buf_size&&(put_byte(n,255&t.adler),put_byte(n,t.adler>>8&255),t.adler=0,n.status=BUSY_STATE)):n.status=BUSY_STATE),0!==n.pending){if(flush_pending(t),0===t.avail_out)return n.last_flush=-1,Z_OK$3}else if(0===t.avail_in&&rank(e)<=rank(s)&&e!==Z_FINISH$3)return err(t,Z_BUF_ERROR$1);if(n.status===FINISH_STATE&&0!==t.avail_in)return err(t,Z_BUF_ERROR$1);if(0!==t.avail_in||0!==n.lookahead||e!==Z_NO_FLUSH$2&&n.status!==FINISH_STATE){let r=n.strategy===Z_HUFFMAN_ONLY?deflate_huff(n,e):n.strategy===Z_RLE?deflate_rle(n,e):configuration_table[n.level].func(n,e);if(r!==BS_FINISH_STARTED&&r!==BS_FINISH_DONE||(n.status=FINISH_STATE),r===BS_NEED_MORE||r===BS_FINISH_STARTED)return 0===t.avail_out&&(n.last_flush=-1),Z_OK$3;if(r===BS_BLOCK_DONE&&(e===Z_PARTIAL_FLUSH?_tr_align(n):e!==Z_BLOCK$1&&(_tr_stored_block(n,0,0,!1),e===Z_FULL_FLUSH$1&&(zero(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),flush_pending(t),0===t.avail_out))return n.last_flush=-1,Z_OK$3}return e!==Z_FINISH$3?Z_OK$3:n.wrap<=0?Z_STREAM_END$3:(2===n.wrap?(put_byte(n,255&t.adler),put_byte(n,t.adler>>8&255),put_byte(n,t.adler>>16&255),put_byte(n,t.adler>>24&255),put_byte(n,255&t.total_in),put_byte(n,t.total_in>>8&255),put_byte(n,t.total_in>>16&255),put_byte(n,t.total_in>>24&255)):(putShortMSB(n,t.adler>>>16),putShortMSB(n,65535&t.adler)),flush_pending(t),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?Z_OK$3:Z_STREAM_END$3)},deflateEnd=t=>{if(!t||!t.state)return Z_STREAM_ERROR$2;const e=t.state.status;return e!==INIT_STATE&&e!==EXTRA_STATE&&e!==NAME_STATE&&e!==COMMENT_STATE&&e!==HCRC_STATE&&e!==BUSY_STATE&&e!==FINISH_STATE?err(t,Z_STREAM_ERROR$2):(t.state=null,e===BUSY_STATE?err(t,Z_DATA_ERROR$2):Z_OK$3)},deflateSetDictionary=(t,e)=>{let r=e.length;if(!t||!t.state)return Z_STREAM_ERROR$2;const i=t.state,n=i.wrap;if(2===n||1===n&&i.status!==INIT_STATE||i.lookahead)return Z_STREAM_ERROR$2;if(1===n&&(t.adler=adler32_1(t.adler,e,r,0)),i.wrap=0,r>=i.w_size){0===n&&(zero(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(r-i.w_size,r),0),e=t,r=i.w_size}const s=t.avail_in,o=t.next_in,a=t.input;for(t.avail_in=r,t.next_in=0,t.input=e,fill_window(i);i.lookahead>=MIN_MATCH;){let t=i.strstart,e=i.lookahead-(MIN_MATCH-1);do{i.ins_h=HASH(i,i.ins_h,i.window[t+MIN_MATCH-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=MIN_MATCH-1,fill_window(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=MIN_MATCH-1,i.match_available=0,t.next_in=o,t.input=a,t.avail_in=s,i.wrap=n,Z_OK$3};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2$1=deflate$2,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1$2={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2$1,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo:deflateInfo};const _has=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var assign=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const r=e.shift();if(r){if("object"!=typeof r)throw new TypeError(r+"must be non-object");for(const e in r)_has(r,e)&&(t[e]=r[e])}}return t},flattenChunks=t=>{let e=0;for(let r=0,i=t.length;r<i;r++)e+=t[r].length;const r=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];r.set(n,i),i+=n.length}return r},common={assign:assign,flattenChunks:flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let t=0;t<256;t++)_utf8len[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=t=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,r,i,n,s,o=t.length,a=0;for(n=0;n<o;n++)r=t.charCodeAt(n),55296==(64512&r)&&n+1<o&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(r=65536+(r-55296<<10)+(i-56320),n++)),a+=r<128?1:r<2048?2:r<65536?3:4;for(e=new Uint8Array(a),s=0,n=0;s<a;n++)r=t.charCodeAt(n),55296==(64512&r)&&n+1<o&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(r=65536+(r-55296<<10)+(i-56320),n++)),r<128?e[s++]=r:r<2048?(e[s++]=192|r>>>6,e[s++]=128|63&r):r<65536?(e[s++]=224|r>>>12,e[s++]=128|r>>>6&63,e[s++]=128|63&r):(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63,e[s++]=128|r>>>6&63,e[s++]=128|63&r);return e};const buf2binstring=(t,e)=>{if(e<65534&&t.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let r="";for(let i=0;i<e;i++)r+=String.fromCharCode(t[i]);return r};var buf2string=(t,e)=>{const r=e||t.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*r);for(n=0,i=0;i<r;){let e=t[i++];if(e<128){s[n++]=e;continue}let o=_utf8len[e];if(o>4)s[n++]=65533,i+=o-1;else{for(e&=2===o?31:3===o?15:7;o>1&&i<r;)e=e<<6|63&t[i++],o--;o>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return buf2binstring(s,n)},utf8border=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let r=e-1;for(;r>=0&&128==(192&t[r]);)r--;return r<0||0===r?e:r+_utf8len[t[r]]>e?r:e},strings={string2buf:string2buf,buf2string:buf2string,utf8border:utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString$1$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH:Z_SYNC_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH,Z_FINISH:Z_FINISH$2,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY,Z_DEFLATED:Z_DEFLATED$1}=constants$2;function Deflate$1(t){this.options=common.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let r=deflate_1$2.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==Z_OK$2)throw new Error(messages[r]);if(e.header&&deflate_1$2.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t="string"==typeof e.dictionary?strings.string2buf(e.dictionary):"[object ArrayBuffer]"===toString$1$1.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,r=deflate_1$2.deflateSetDictionary(this.strm,t),r!==Z_OK$2)throw new Error(messages[r]);this._dict_set=!0}}function deflate$1(t,e){const r=new Deflate$1(e);if(r.push(t,!0),r.err)throw r.msg||messages[r.err];return r.result}function deflateRaw$1(t,e){return(e=e||{}).raw=!0,deflate$1(t,e)}function gzip$1(t,e){return(e=e||{}).gzip=!0,deflate$1(t,e)}Deflate$1.prototype.push=function(t,e){const r=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Z_FINISH$2:Z_NO_FLUSH$1,"string"==typeof t?r.input=strings.string2buf(t):"[object ArrayBuffer]"===toString$1$1.call(t)?r.input=new Uint8Array(t):r.input=t,r.next_in=0,r.avail_in=r.input.length;;)if(0===r.avail_out&&(r.output=new Uint8Array(i),r.next_out=0,r.avail_out=i),(s===Z_SYNC_FLUSH||s===Z_FULL_FLUSH)&&r.avail_out<=6)this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;else{if(n=deflate_1$2.deflate(r,s),n===Z_STREAM_END$2)return r.next_out>0&&this.onData(r.output.subarray(0,r.next_out)),n=deflate_1$2.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Z_OK$2;if(0!==r.avail_out){if(s>0&&r.next_out>0)this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;else if(0===r.avail_in)break}else this.onData(r.output)}return!0},Deflate$1.prototype.onData=function(t){this.chunks.push(t)},Deflate$1.prototype.onEnd=function(t){t===Z_OK$2&&(this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Deflate_1$1=Deflate$1,deflate_2=deflate$1,deflateRaw_1$1=deflateRaw$1,gzip_1$1=gzip$1,constants$1=constants$2,deflate_1$1={Deflate:Deflate_1$1,deflate:deflate_2,deflateRaw:deflateRaw_1$1,gzip:gzip_1$1,constants:constants$1};const BAD$1=30,TYPE$1=12;var inffast=function(t,e){let r,i,n,s,o,a,l,h,c,u,f,d,m,g,p,w,b,_,y,M,x,v,E,A;const k=t.state;r=t.next_in,E=t.input,i=r+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),o=n+(t.avail_out-257),a=k.dmax,l=k.wsize,h=k.whave,c=k.wnext,u=k.window,f=k.hold,d=k.bits,m=k.lencode,g=k.distcode,p=(1<<k.lenbits)-1,w=(1<<k.distbits)-1;t:do{d<15&&(f+=E[r++]<<d,d+=8,f+=E[r++]<<d,d+=8),b=m[f&p];e:for(;;){if(_=b>>>24,f>>>=_,d-=_,_=b>>>16&255,0===_)A[n++]=65535&b;else{if(!(16&_)){if(0==(64&_)){b=m[(65535&b)+(f&(1<<_)-1)];continue e}if(32&_){k.mode=TYPE$1;break t}t.msg="invalid literal/length code",k.mode=BAD$1;break t}y=65535&b,_&=15,_&&(d<_&&(f+=E[r++]<<d,d+=8),y+=f&(1<<_)-1,f>>>=_,d-=_),d<15&&(f+=E[r++]<<d,d+=8,f+=E[r++]<<d,d+=8),b=g[f&w];r:for(;;){if(_=b>>>24,f>>>=_,d-=_,_=b>>>16&255,!(16&_)){if(0==(64&_)){b=g[(65535&b)+(f&(1<<_)-1)];continue r}t.msg="invalid distance code",k.mode=BAD$1;break t}if(M=65535&b,_&=15,d<_&&(f+=E[r++]<<d,d+=8,d<_&&(f+=E[r++]<<d,d+=8)),M+=f&(1<<_)-1,M>a){t.msg="invalid distance too far back",k.mode=BAD$1;break t}if(f>>>=_,d-=_,_=n-s,M>_){if(_=M-_,_>h&&k.sane){t.msg="invalid distance too far back",k.mode=BAD$1;break t}if(x=0,v=u,0===c){if(x+=l-_,_<y){y-=_;do{A[n++]=u[x++]}while(--_);x=n-M,v=A}}else if(c<_){if(x+=l+c-_,_-=c,_<y){y-=_;do{A[n++]=u[x++]}while(--_);if(x=0,c<y){_=c,y-=_;do{A[n++]=u[x++]}while(--_);x=n-M,v=A}}}else if(x+=c-_,_<y){y-=_;do{A[n++]=u[x++]}while(--_);x=n-M,v=A}for(;y>2;)A[n++]=v[x++],A[n++]=v[x++],A[n++]=v[x++],y-=3;y&&(A[n++]=v[x++],y>1&&(A[n++]=v[x++]))}else{x=n-M;do{A[n++]=A[x++],A[n++]=A[x++],A[n++]=A[x++],y-=3}while(y>2);y&&(A[n++]=A[x++],y>1&&(A[n++]=A[x++]))}break}}break}}while(r<i&&n<o);y=d>>3,r-=y,d-=y<<3,f&=(1<<d)-1,t.next_in=r,t.next_out=n,t.avail_in=r<i?i-r+5:5-(r-i),t.avail_out=n<o?o-n+257:257-(n-o),k.hold=f,k.bits=d};const MAXBITS=15,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,CODES$1=0,LENS$1=1,DISTS$1=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(t,e,r,i,n,s,o,a)=>{const l=a.bits;let h,c,u,f,d,m,g=0,p=0,w=0,b=0,_=0,y=0,M=0,x=0,v=0,E=0,A=null,k=0;const S=new Uint16Array(MAXBITS+1),I=new Uint16Array(MAXBITS+1);let D,R,T,$=null,C=0;for(g=0;g<=MAXBITS;g++)S[g]=0;for(p=0;p<i;p++)S[e[r+p]]++;for(_=l,b=MAXBITS;b>=1&&0===S[b];b--);if(_>b&&(_=b),0===b)return n[s++]=20971520,n[s++]=20971520,a.bits=1,0;for(w=1;w<b&&0===S[w];w++);for(_<w&&(_=w),x=1,g=1;g<=MAXBITS;g++)if(x<<=1,x-=S[g],x<0)return-1;if(x>0&&(t===CODES$1||1!==b))return-1;for(I[1]=0,g=1;g<MAXBITS;g++)I[g+1]=I[g]+S[g];for(p=0;p<i;p++)0!==e[r+p]&&(o[I[e[r+p]]++]=p);if(t===CODES$1?(A=$=o,m=19):t===LENS$1?(A=lbase,k-=257,$=lext,C-=257,m=256):(A=dbase,$=dext,m=-1),E=0,p=0,g=w,d=s,y=_,M=0,u=-1,v=1<<_,f=v-1,t===LENS$1&&v>ENOUGH_LENS$1||t===DISTS$1&&v>ENOUGH_DISTS$1)return 1;for(;;){D=g-M,o[p]<m?(R=0,T=o[p]):o[p]>m?(R=$[C+o[p]],T=A[k+o[p]]):(R=96,T=0),h=1<<g-M,c=1<<y,w=c;do{c-=h,n[d+(E>>M)+c]=D<<24|R<<16|T|0}while(0!==c);for(h=1<<g-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,p++,0==--S[g]){if(g===b)break;g=e[r+o[p]]}if(g>_&&(E&f)!==u){for(0===M&&(M=_),d+=w,y=g-M,x=1<<y;y+M<b&&(x-=S[y+M],!(x<=0));)y++,x<<=1;if(v+=1<<y,t===LENS$1&&v>ENOUGH_LENS$1||t===DISTS$1&&v>ENOUGH_DISTS$1)return 1;u=E&f,n[u]=_<<24|y<<16|d-s|0}}return 0!==E&&(n[d+E]=g-M<<24|64<<16|0),a.bits=_,0};var inftrees=inflate_table;const CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH$1,Z_BLOCK:Z_BLOCK,Z_TREES:Z_TREES,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR$1,Z_BUF_ERROR:Z_BUF_ERROR,Z_DEFLATED:Z_DEFLATED}=constants$2,HEAD=1,FLAGS=2,TIME=3,OS=4,EXLEN=5,EXTRA=6,NAME=7,COMMENT=8,HCRC=9,DICTID=10,DICT=11,TYPE=12,TYPEDO=13,STORED=14,COPY_=15,COPY=16,TABLE=17,LENLENS=18,CODELENS=19,LEN_=20,LEN=21,LENEXT=22,DIST=23,DISTEXT=24,MATCH=25,LIT=26,CHECK=27,LENGTH=28,DONE=29,BAD=30,MEM=31,SYNC=32,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS,zswap32=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateResetKeep=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=HEAD,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(ENOUGH_LENS),e.distcode=e.distdyn=new Int32Array(ENOUGH_DISTS),e.sane=1,e.back=-1,Z_OK$1},inflateReset=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,inflateResetKeep(t)},inflateReset2=(t,e)=>{let r;if(!t||!t.state)return Z_STREAM_ERROR$1;const i=t.state;return e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?Z_STREAM_ERROR$1:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=r,i.wbits=e,inflateReset(t))},inflateInit2=(t,e)=>{if(!t)return Z_STREAM_ERROR$1;const r=new InflateState;t.state=r,r.window=null;const i=inflateReset2(t,e);return i!==Z_OK$1&&(t.state=null),i},inflateInit=t=>inflateInit2(t,DEF_WBITS);let virgin=!0,lenfix,distfix;const fixedtables=t=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(inftrees(LENS,t.lens,0,288,lenfix,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;inftrees(DISTS,t.lens,0,32,distfix,0,t.work,{bits:5}),virgin=!1}t.lencode=lenfix,t.lenbits=9,t.distcode=distfix,t.distbits=5},updatewindow=(t,e,r,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(r-s.wsize,r),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(r-i,r-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(r-i,r),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0},inflate$2=(t,e)=>{let r,i,n,s,o,a,l,h,c,u,f,d,m,g,p,w,b,_,y,M,x,v,E=0;const A=new Uint8Array(4);let k,S;const I=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return Z_STREAM_ERROR$1;r=t.state,r.mode===TYPE&&(r.mode=TYPEDO),o=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,a=t.avail_in,h=r.hold,c=r.bits,u=a,f=l,v=Z_OK$1;t:for(;;)switch(r.mode){case HEAD:if(0===r.wrap){r.mode=TYPEDO;break}for(;c<16;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(2&r.wrap&&35615===h){r.check=0,A[0]=255&h,A[1]=h>>>8&255,r.check=crc32_1(r.check,A,2,0),h=0,c=0,r.mode=FLAGS;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg="incorrect header check",r.mode=BAD;break}if((15&h)!==Z_DEFLATED){t.msg="unknown compression method",r.mode=BAD;break}if(h>>>=4,c-=4,x=8+(15&h),0===r.wbits)r.wbits=x;else if(x>r.wbits){t.msg="invalid window size",r.mode=BAD;break}r.dmax=1<<r.wbits,t.adler=r.check=1,r.mode=512&h?DICTID:TYPE,h=0,c=0;break;case FLAGS:for(;c<16;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(r.flags=h,(255&r.flags)!==Z_DEFLATED){t.msg="unknown compression method",r.mode=BAD;break}if(57344&r.flags){t.msg="unknown header flags set",r.mode=BAD;break}r.head&&(r.head.text=h>>8&1),512&r.flags&&(A[0]=255&h,A[1]=h>>>8&255,r.check=crc32_1(r.check,A,2,0)),h=0,c=0,r.mode=TIME;case TIME:for(;c<32;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.head&&(r.head.time=h),512&r.flags&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,r.check=crc32_1(r.check,A,4,0)),h=0,c=0,r.mode=OS;case OS:for(;c<16;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.head&&(r.head.xflags=255&h,r.head.os=h>>8),512&r.flags&&(A[0]=255&h,A[1]=h>>>8&255,r.check=crc32_1(r.check,A,2,0)),h=0,c=0,r.mode=EXLEN;case EXLEN:if(1024&r.flags){for(;c<16;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.length=h,r.head&&(r.head.extra_len=h),512&r.flags&&(A[0]=255&h,A[1]=h>>>8&255,r.check=crc32_1(r.check,A,2,0)),h=0,c=0}else r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(1024&r.flags&&(d=r.length,d>a&&(d=a),d&&(r.head&&(x=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Uint8Array(r.head.extra_len)),r.head.extra.set(i.subarray(s,s+d),x)),512&r.flags&&(r.check=crc32_1(r.check,i,d,s)),a-=d,s+=d,r.length-=d),r.length))break t;r.length=0,r.mode=NAME;case NAME:if(2048&r.flags){if(0===a)break t;d=0;do{x=i[s+d++],r.head&&x&&r.length<65536&&(r.head.name+=String.fromCharCode(x))}while(x&&d<a);if(512&r.flags&&(r.check=crc32_1(r.check,i,d,s)),a-=d,s+=d,x)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(4096&r.flags){if(0===a)break t;d=0;do{x=i[s+d++],r.head&&x&&r.length<65536&&(r.head.comment+=String.fromCharCode(x))}while(x&&d<a);if(512&r.flags&&(r.check=crc32_1(r.check,i,d,s)),a-=d,s+=d,x)break t}else r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(512&r.flags){for(;c<16;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(h!==(65535&r.check)){t.msg="header crc mismatch",r.mode=BAD;break}h=0,c=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=TYPE;break;case DICTID:for(;c<32;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}t.adler=r.check=zswap32(h),h=0,c=0,r.mode=DICT;case DICT:if(0===r.havedict)return t.next_out=o,t.avail_out=l,t.next_in=s,t.avail_in=a,r.hold=h,r.bits=c,Z_NEED_DICT$1;t.adler=r.check=1,r.mode=TYPE;case TYPE:if(e===Z_BLOCK||e===Z_TREES)break t;case TYPEDO:if(r.last){h>>>=7&c,c-=7&c,r.mode=CHECK;break}for(;c<3;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}switch(r.last=1&h,h>>>=1,c-=1,3&h){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,e===Z_TREES){h>>>=2,c-=2;break t}break;case 2:r.mode=TABLE;break;case 3:t.msg="invalid block type",r.mode=BAD}h>>>=2,c-=2;break;case STORED:for(h>>>=7&c,c-=7&c;c<32;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if((65535&h)!=(h>>>16^65535)){t.msg="invalid stored block lengths",r.mode=BAD;break}if(r.length=65535&h,h=0,c=0,r.mode=COPY_,e===Z_TREES)break t;case COPY_:r.mode=COPY;case COPY:if(d=r.length,d){if(d>a&&(d=a),d>l&&(d=l),0===d)break t;n.set(i.subarray(s,s+d),o),a-=d,s+=d,l-=d,o+=d,r.length-=d;break}r.mode=TYPE;break;case TABLE:for(;c<14;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(r.nlen=257+(31&h),h>>>=5,c-=5,r.ndist=1+(31&h),h>>>=5,c-=5,r.ncode=4+(15&h),h>>>=4,c-=4,r.nlen>286||r.ndist>30){t.msg="too many length or distance symbols",r.mode=BAD;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){for(;c<3;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.lens[I[r.have++]]=7&h,h>>>=3,c-=3}for(;r.have<19;)r.lens[I[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,k={bits:r.lenbits},v=inftrees(CODES,r.lens,0,19,r.lencode,0,r.work,k),r.lenbits=k.bits,v){t.msg="invalid code lengths set",r.mode=BAD;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;E=r.lencode[h&(1<<r.lenbits)-1],p=E>>>24,w=E>>>16&255,b=65535&E,!(p<=c);){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(b<16)h>>>=p,c-=p,r.lens[r.have++]=b;else{if(16===b){for(S=p+2;c<S;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(h>>>=p,c-=p,0===r.have){t.msg="invalid bit length repeat",r.mode=BAD;break}x=r.lens[r.have-1],d=3+(3&h),h>>>=2,c-=2}else if(17===b){for(S=p+3;c<S;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}h>>>=p,c-=p,x=0,d=3+(7&h),h>>>=3,c-=3}else{for(S=p+7;c<S;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}h>>>=p,c-=p,x=0,d=11+(127&h),h>>>=7,c-=7}if(r.have+d>r.nlen+r.ndist){t.msg="invalid bit length repeat",r.mode=BAD;break}for(;d--;)r.lens[r.have++]=x}}if(r.mode===BAD)break;if(0===r.lens[256]){t.msg="invalid code -- missing end-of-block",r.mode=BAD;break}if(r.lenbits=9,k={bits:r.lenbits},v=inftrees(LENS,r.lens,0,r.nlen,r.lencode,0,r.work,k),r.lenbits=k.bits,v){t.msg="invalid literal/lengths set",r.mode=BAD;break}if(r.distbits=6,r.distcode=r.distdyn,k={bits:r.distbits},v=inftrees(DISTS,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,k),r.distbits=k.bits,v){t.msg="invalid distances set",r.mode=BAD;break}if(r.mode=LEN_,e===Z_TREES)break t;case LEN_:r.mode=LEN;case LEN:if(a>=6&&l>=258){t.next_out=o,t.avail_out=l,t.next_in=s,t.avail_in=a,r.hold=h,r.bits=c,inffast(t,f),o=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,a=t.avail_in,h=r.hold,c=r.bits,r.mode===TYPE&&(r.back=-1);break}for(r.back=0;E=r.lencode[h&(1<<r.lenbits)-1],p=E>>>24,w=E>>>16&255,b=65535&E,!(p<=c);){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(w&&0==(240&w)){for(_=p,y=w,M=b;E=r.lencode[M+((h&(1<<_+y)-1)>>_)],p=E>>>24,w=E>>>16&255,b=65535&E,!(_+p<=c);){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}h>>>=_,c-=_,r.back+=_}if(h>>>=p,c-=p,r.back+=p,r.length=b,0===w){r.mode=LIT;break}if(32&w){r.back=-1,r.mode=TYPE;break}if(64&w){t.msg="invalid literal/length code",r.mode=BAD;break}r.extra=15&w,r.mode=LENEXT;case LENEXT:if(r.extra){for(S=r.extra;c<S;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.length+=h&(1<<r.extra)-1,h>>>=r.extra,c-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;E=r.distcode[h&(1<<r.distbits)-1],p=E>>>24,w=E>>>16&255,b=65535&E,!(p<=c);){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(0==(240&w)){for(_=p,y=w,M=b;E=r.distcode[M+((h&(1<<_+y)-1)>>_)],p=E>>>24,w=E>>>16&255,b=65535&E,!(_+p<=c);){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}h>>>=_,c-=_,r.back+=_}if(h>>>=p,c-=p,r.back+=p,64&w){t.msg="invalid distance code",r.mode=BAD;break}r.offset=b,r.extra=15&w,r.mode=DISTEXT;case DISTEXT:if(r.extra){for(S=r.extra;c<S;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}r.offset+=h&(1<<r.extra)-1,h>>>=r.extra,c-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg="invalid distance too far back",r.mode=BAD;break}r.mode=MATCH;case MATCH:if(0===l)break t;if(d=f-l,r.offset>d){if(d=r.offset-d,d>r.whave&&r.sane){t.msg="invalid distance too far back",r.mode=BAD;break}d>r.wnext?(d-=r.wnext,m=r.wsize-d):m=r.wnext-d,d>r.length&&(d=r.length),g=r.window}else g=n,m=o-r.offset,d=r.length;d>l&&(d=l),l-=d,r.length-=d;do{n[o++]=g[m++]}while(--d);0===r.length&&(r.mode=LEN);break;case LIT:if(0===l)break t;n[o++]=r.length,l--,r.mode=LEN;break;case CHECK:if(r.wrap){for(;c<32;){if(0===a)break t;a--,h|=i[s++]<<c,c+=8}if(f-=l,t.total_out+=f,r.total+=f,f&&(t.adler=r.check=r.flags?crc32_1(r.check,n,f,o-f):adler32_1(r.check,n,f,o-f)),f=l,(r.flags?h:zswap32(h))!==r.check){t.msg="incorrect data check",r.mode=BAD;break}h=0,c=0}r.mode=LENGTH;case LENGTH:if(r.wrap&&r.flags){for(;c<32;){if(0===a)break t;a--,h+=i[s++]<<c,c+=8}if(h!==(4294967295&r.total)){t.msg="incorrect length check",r.mode=BAD;break}h=0,c=0}r.mode=DONE;case DONE:v=Z_STREAM_END$1;break t;case BAD:v=Z_DATA_ERROR$1;break t;case MEM:return Z_MEM_ERROR$1;default:return Z_STREAM_ERROR$1}return t.next_out=o,t.avail_out=l,t.next_in=s,t.avail_in=a,r.hold=h,r.bits=c,(r.wsize||f!==t.avail_out&&r.mode<BAD&&(r.mode<CHECK||e!==Z_FINISH$1))&&updatewindow(t,t.output,t.next_out,f-t.avail_out),u-=t.avail_in,f-=t.avail_out,t.total_in+=u,t.total_out+=f,r.total+=f,r.wrap&&f&&(t.adler=r.check=r.flags?crc32_1(r.check,n,f,t.next_out-f):adler32_1(r.check,n,f,t.next_out-f)),t.data_type=r.bits+(r.last?64:0)+(r.mode===TYPE?128:0)+(r.mode===LEN_||r.mode===COPY_?256:0),(0===u&&0===f||e===Z_FINISH$1)&&v===Z_OK$1&&(v=Z_BUF_ERROR),v},inflateEnd=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;let e=t.state;return e.window&&(e.window=null),t.state=null,Z_OK$1},inflateGetHeader=(t,e)=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const r=t.state;return 0==(2&r.wrap)?Z_STREAM_ERROR$1:(r.head=e,e.done=!1,Z_OK$1)},inflateSetDictionary=(t,e)=>{const r=e.length;let i,n,s;return t&&t.state?(i=t.state,0!==i.wrap&&i.mode!==DICT?Z_STREAM_ERROR$1:i.mode===DICT&&(n=1,n=adler32_1(n,e,r,0),n!==i.check)?Z_DATA_ERROR$1:(s=updatewindow(t,e,r,r),s?(i.mode=MEM,Z_MEM_ERROR$1):(i.havedict=1,Z_OK$1))):Z_STREAM_ERROR$1};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2$1=inflate$2,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1$2={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2$1,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo:inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString$2=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH,Z_FINISH:Z_FINISH,Z_OK:Z_OK,Z_STREAM_END:Z_STREAM_END,Z_NEED_DICT:Z_NEED_DICT,Z_STREAM_ERROR:Z_STREAM_ERROR,Z_DATA_ERROR:Z_DATA_ERROR,Z_MEM_ERROR:Z_MEM_ERROR}=constants$2;function Inflate$1(t){this.options=common.assign({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let r=inflate_1$2.inflateInit2(this.strm,e.windowBits);if(r!==Z_OK)throw new Error(messages[r]);if(this.header=new gzheader,inflate_1$2.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=strings.string2buf(e.dictionary):"[object ArrayBuffer]"===toString$2.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(r=inflate_1$2.inflateSetDictionary(this.strm,e.dictionary),r!==Z_OK)))throw new Error(messages[r])}function inflate$1(t,e){const r=new Inflate$1(e);if(r.push(t),r.err)throw r.msg||messages[r.err];return r.result}function inflateRaw$1(t,e){return(e=e||{}).raw=!0,inflate$1(t,e)}Inflate$1.prototype.push=function(t,e){const r=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,o,a;if(this.ended)return!1;for(o=e===~~e?e:!0===e?Z_FINISH:Z_NO_FLUSH,"[object ArrayBuffer]"===toString$2.call(t)?r.input=new Uint8Array(t):r.input=t,r.next_in=0,r.avail_in=r.input.length;;){for(0===r.avail_out&&(r.output=new Uint8Array(i),r.next_out=0,r.avail_out=i),s=inflate_1$2.inflate(r,o),s===Z_NEED_DICT&&n&&(s=inflate_1$2.inflateSetDictionary(r,n),s===Z_OK?s=inflate_1$2.inflate(r,o):s===Z_DATA_ERROR&&(s=Z_NEED_DICT));r.avail_in>0&&s===Z_STREAM_END&&r.state.wrap>0&&0!==t[r.next_in];)inflate_1$2.inflateReset(r),s=inflate_1$2.inflate(r,o);switch(s){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(s),this.ended=!0,!1}if(a=r.avail_out,r.next_out&&(0===r.avail_out||s===Z_STREAM_END))if("string"===this.options.to){let t=strings.utf8border(r.output,r.next_out),e=r.next_out-t,n=strings.buf2string(r.output,t);r.next_out=e,r.avail_out=i-e,e&&r.output.set(r.output.subarray(t,t+e),0),this.onData(n)}else this.onData(r.output.length===r.next_out?r.output:r.output.subarray(0,r.next_out));if(s!==Z_OK||0!==a){if(s===Z_STREAM_END)return s=inflate_1$2.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===r.avail_in)break}}return!0},Inflate$1.prototype.onData=function(t){this.chunks.push(t)},Inflate$1.prototype.onEnd=function(t){t===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Inflate_1$1=Inflate$1,inflate_2=inflate$1,inflateRaw_1$1=inflateRaw$1,ungzip$1=inflate$1,constants=constants$2,inflate_1$1={Inflate:Inflate_1$1,inflate:inflate_2,inflateRaw:inflateRaw_1$1,ungzip:ungzip$1,constants:constants};const{Deflate:Deflate,deflate:deflate,deflateRaw:deflateRaw,gzip:gzip}=deflate_1$1,{Inflate:Inflate,inflate:inflate,inflateRaw:inflateRaw,ungzip:ungzip}=inflate_1$1;var deflate_1=deflate,Inflate_1=Inflate,inflate_1=inflate;const pngSignature=[137,80,78,71,13,10,26,10],crcTable=[];for(let t=0;t<256;t++){let e=t;for(let t=0;t<8;t++)1&e?e=3988292384^e>>>1:e>>>=1;crcTable[t]=e}const initialCrc=4294967295;function updateCrc(t,e,r){let i=t;for(let t=0;t<r;t++)i=crcTable[255&(i^e[t])]^i>>>8;return i}function crc(t,e){return(updateCrc(initialCrc,t,e)^initialCrc)>>>0}var ColorType,CompressionMethod,FilterMethod,InterlaceMethod;!function(t){t[t.UNKNOWN=-1]="UNKNOWN",t[t.GREYSCALE=0]="GREYSCALE",t[t.TRUECOLOUR=2]="TRUECOLOUR",t[t.INDEXED_COLOUR=3]="INDEXED_COLOUR",t[t.GREYSCALE_ALPHA=4]="GREYSCALE_ALPHA",t[t.TRUECOLOUR_ALPHA=6]="TRUECOLOUR_ALPHA"}(ColorType||(ColorType={})),function(t){t[t.UNKNOWN=-1]="UNKNOWN",t[t.DEFLATE=0]="DEFLATE"}(CompressionMethod||(CompressionMethod={})),function(t){t[t.UNKNOWN=-1]="UNKNOWN",t[t.ADAPTIVE=0]="ADAPTIVE"}(FilterMethod||(FilterMethod={})),function(t){t[t.UNKNOWN=-1]="UNKNOWN",t[t.NO_INTERLACE=0]="NO_INTERLACE",t[t.ADAM7=1]="ADAM7"}(InterlaceMethod||(InterlaceMethod={}));const empty=new Uint8Array(0),NULL="\0",uint16=new Uint16Array([255]),uint8=new Uint8Array(uint16.buffer),osIsLittleEndian=255===uint8[0];class PngDecoder extends IOBuffer$4{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(t);const{checkCrc:r=!1}=e;this._checkCrc=r,this._inflator=new Inflate_1,this._png={width:-1,height:-1,channels:-1,data:new Uint8Array(0),depth:1,text:{}},this._end=!1,this._hasPalette=!1,this._palette=[],this._compressionMethod=CompressionMethod.UNKNOWN,this._filterMethod=FilterMethod.UNKNOWN,this._interlaceMethod=InterlaceMethod.UNKNOWN,this._colorType=-1,this.setBigEndian()}decode(){for(this.decodeSignature();!this._end;)this.decodeChunk();return this.decodeImage(),this._png}decodeSignature(){for(let t=0;t<pngSignature.length;t++)if(this.readUint8()!==pngSignature[t])throw new Error(`wrong PNG signature. Byte at ${t} should be ${pngSignature[t]}.`)}decodeChunk(){const t=this.readUint32(),e=this.readChars(4),r=this.offset;switch(e){case"IHDR":this.decodeIHDR();break;case"PLTE":this.decodePLTE(t);break;case"IDAT":this.decodeIDAT(t);break;case"IEND":this._end=!0;break;case"tRNS":this.decodetRNS(t);break;case"iCCP":this.decodeiCCP(t);break;case"tEXt":this.decodetEXt(t);break;case"pHYs":this.decodepHYs();break;default:this.skip(t)}if(this.offset-r!==t)throw new Error(`Length mismatch while decoding chunk ${e}`);if(this._checkCrc){const r=this.readUint32(),i=t+4,n=crc(new Uint8Array(this.buffer,this.byteOffset+this.offset-i-4,i),i);if(n!==r)throw new Error(`CRC mismatch for chunk ${e}. Expected ${r}, found ${n}`)}else this.skip(4)}decodeIHDR(){const t=this._png;t.width=this.readUint32(),t.height=this.readUint32(),t.depth=checkBitDepth(this.readUint8());const e=this.readUint8();let r;switch(this._colorType=e,e){case ColorType.GREYSCALE:r=1;break;case ColorType.TRUECOLOUR:r=3;break;case ColorType.INDEXED_COLOUR:r=1;break;case ColorType.GREYSCALE_ALPHA:r=2;break;case ColorType.TRUECOLOUR_ALPHA:r=4;break;default:throw new Error(`Unknown color type: ${e}`)}if(this._png.channels=r,this._compressionMethod=this.readUint8(),this._compressionMethod!==CompressionMethod.DEFLATE)throw new Error(`Unsupported compression method: ${this._compressionMethod}`);this._filterMethod=this.readUint8(),this._interlaceMethod=this.readUint8()}decodePLTE(t){if(t%3!=0)throw new RangeError(`PLTE field length must be a multiple of 3. Got ${t}`);const e=t/3;this._hasPalette=!0;const r=[];this._palette=r;for(let t=0;t<e;t++)r.push([this.readUint8(),this.readUint8(),this.readUint8()])}decodeIDAT(t){this._inflator.push(new Uint8Array(this.buffer,this.offset+this.byteOffset,t)),this.skip(t)}decodetRNS(t){if(3===this._colorType){if(t>this._palette.length)throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${t} vs ${this._palette.length})`);let e=0;for(;e<t;e++){const t=this.readByte();this._palette[e].push(t)}for(;e<this._palette.length;e++)this._palette[e].push(255)}}decodeiCCP(t){let e,r="";for(;(e=this.readChar())!==NULL;)r+=e;const i=this.readUint8();if(i!==CompressionMethod.DEFLATE)throw new Error(`Unsupported iCCP compression method: ${i}`);const n=this.readBytes(t-r.length-2);this._png.iccEmbeddedProfile={name:r,profile:inflate_1(n)}}decodetEXt(t){let e,r="";for(;(e=this.readChar())!==NULL;)r+=e;this._png.text[r]=this.readChars(t-r.length-1)}decodepHYs(){const t=this.readUint32(),e=this.readUint32(),r=this.readByte();this._png.resolution={x:t,y:e,unit:r}}decodeImage(){if(this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);const t=this._inflator.result;if(this._filterMethod!==FilterMethod.ADAPTIVE)throw new Error(`Filter method ${this._filterMethod} not supported`);if(this._interlaceMethod!==InterlaceMethod.NO_INTERLACE)throw new Error(`Interlace method ${this._interlaceMethod} not supported`);this.decodeInterlaceNull(t)}decodeInterlaceNull(t){const e=this._png.height,r=this._png.channels*this._png.depth/8,i=this._png.width*r,n=new Uint8Array(this._png.height*i);let s,o,a=empty,l=0;for(let h=0;h<e;h++){switch(s=t.subarray(l+1,l+1+i),o=n.subarray(h*i,(h+1)*i),t[l]){case 0:unfilterNone(s,o,i);break;case 1:unfilterSub(s,o,i,r);break;case 2:unfilterUp(s,o,a,i);break;case 3:unfilterAverage(s,o,a,i,r);break;case 4:unfilterPaeth(s,o,a,i,r);break;default:throw new Error(`Unsupported filter: ${t[l]}`)}a=o,l+=i+1}if(this._hasPalette&&(this._png.palette=this._palette),16===this._png.depth){const t=new Uint16Array(n.buffer);if(osIsLittleEndian)for(let e=0;e<t.length;e++)t[e]=swap16(t[e]);this._png.data=t}else this._png.data=n}}function unfilterNone(t,e,r){for(let i=0;i<r;i++)e[i]=t[i]}function unfilterSub(t,e,r,i){let n=0;for(;n<i;n++)e[n]=t[n];for(;n<r;n++)e[n]=t[n]+e[n-i]&255}function unfilterUp(t,e,r,i){let n=0;if(0===r.length)for(;n<i;n++)e[n]=t[n];else for(;n<i;n++)e[n]=t[n]+r[n]&255}function unfilterAverage(t,e,r,i,n){let s=0;if(0===r.length){for(;s<n;s++)e[s]=t[s];for(;s<i;s++)e[s]=t[s]+(e[s-n]>>1)&255}else{for(;s<n;s++)e[s]=t[s]+(r[s]>>1)&255;for(;s<i;s++)e[s]=t[s]+(e[s-n]+r[s]>>1)&255}}function unfilterPaeth(t,e,r,i,n){let s=0;if(0===r.length){for(;s<n;s++)e[s]=t[s];for(;s<i;s++)e[s]=t[s]+e[s-n]&255}else{for(;s<n;s++)e[s]=t[s]+r[s]&255;for(;s<i;s++)e[s]=t[s]+paethPredictor(e[s-n],r[s],r[s-n])&255}}function paethPredictor(t,e,r){const i=t+e-r,n=Math.abs(i-t),s=Math.abs(i-e),o=Math.abs(i-r);return n<=s&&n<=o?t:s<=o?e:r}function swap16(t){return(255&t)<<8|t>>8&255}function checkBitDepth(t){if(1!==t&&2!==t&&4!==t&&8!==t&&16!==t)throw new Error(`invalid bit depth: ${t}`);return t}const defaultZlibOptions={level:3};class PngEncoder extends IOBuffer$4{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this._colorType=ColorType.UNKNOWN,this._zlibOptions=Object.assign({},defaultZlibOptions,e.zlib),this._png=this._checkData(t),this.setBigEndian()}encode(){return this.encodeSignature(),this.encodeIHDR(),this.encodeData(),this.encodeIEND(),this.toArray()}encodeSignature(){this.writeBytes(pngSignature)}encodeIHDR(){this.writeUint32(13),this.writeChars("IHDR"),this.writeUint32(this._png.width),this.writeUint32(this._png.height),this.writeByte(this._png.depth),this.writeByte(this._colorType),this.writeByte(CompressionMethod.DEFLATE),this.writeByte(FilterMethod.ADAPTIVE),this.writeByte(InterlaceMethod.NO_INTERLACE),this.writeCrc(17)}encodeIEND(){this.writeUint32(0),this.writeChars("IEND"),this.writeCrc(4)}encodeIDAT(t){this.writeUint32(t.length),this.writeChars("IDAT"),this.writeBytes(t),this.writeCrc(t.length+4)}encodeData(){const{width:t,height:e,channels:r,depth:i,data:n}=this._png,s=r*t,o=(new IOBuffer$4).setBigEndian();let a=0;for(let t=0;t<e;t++)if(o.writeByte(0),8===i)a=writeDataBytes(n,o,s,a);else{if(16!==i)throw new Error("unreachable");a=writeDataUint16(n,o,s,a)}const l=o.toArray(),h=deflate_1(l,this._zlibOptions);this.encodeIDAT(h)}_checkData(t){const{colorType:e,channels:r,depth:i}=getColorType(t),n={width:checkInteger(t.width,"width"),height:checkInteger(t.height,"height"),channels:r,data:t.data,depth:i,text:{}};this._colorType=e;const s=n.width*n.height*r;if(n.data.length!==s)throw new RangeError(`wrong data size. Found ${n.data.length}, expected ${s}`);return n}writeCrc(t){this.writeUint32(crc(new Uint8Array(this.buffer,this.byteOffset+this.offset-t,t),t))}}function checkInteger(t,e){if(Number.isInteger(t)&&t>0)return t;throw new TypeError(`${e} must be a positive integer`)}function getColorType(t){const{channels:e=4,depth:r=8}=t;if(4!==e&&3!==e&&2!==e&&1!==e)throw new RangeError(`unsupported number of channels: ${e}`);if(8!==r&&16!==r)throw new RangeError(`unsupported bit depth: ${r}`);const i={channels:e,depth:r,colorType:ColorType.UNKNOWN};switch(e){case 4:i.colorType=ColorType.TRUECOLOUR_ALPHA;break;case 3:i.colorType=ColorType.TRUECOLOUR;break;case 1:i.colorType=ColorType.GREYSCALE;break;case 2:i.colorType=ColorType.GREYSCALE_ALPHA;break;default:throw new Error("unsupported number of channels")}return i}function writeDataBytes(t,e,r,i){for(let n=0;n<r;n++)e.writeByte(t[i++]);return i}function writeDataUint16(t,e,r,i){for(let n=0;n<r;n++)e.writeUint16(t[i++]);return i}function decodePng(t,e){return new PngDecoder(t,e).decode()}function encodePng$1(t,e){return new PngEncoder(t,e).encode()}var encoder={exports:{}};!function(t){function e(t){var e,r,i,n,s,o=Math.floor,a=new Array(64),l=new Array(64),h=new Array(64),c=new Array(64),u=new Array(65535),f=new Array(65535),d=new Array(64),m=new Array(64),g=[],p=0,w=7,b=new Array(64),_=new Array(64),y=new Array(64),M=new Array(256),x=new Array(2048),v=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],E=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],A=[0,1,2,3,4,5,6,7,8,9,10,11],k=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],S=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],I=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],D=[0,1,2,3,4,5,6,7,8,9,10,11],R=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],T=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function $(t,e){for(var r=0,i=0,n=new Array,s=1;s<=16;s++){for(var o=1;o<=t[s];o++)n[e[i]]=[],n[e[i]][0]=r,n[e[i]][1]=s,i++,r++;r*=2}return n}function C(t){for(var e=t[0],r=t[1]-1;r>=0;)e&1<<r&&(p|=1<<w),r--,--w<0&&(255==p?(B(255),B(0)):B(p),w=7,p=0)}function B(t){g.push(t)}function P(t){B(t>>8&255),B(255&t)}function O(t,e,r,i,n){for(var s,o=n[0],a=n[240],l=function(t,e){var r,i,n,s,o,a,l,h,c,u,f=0;for(c=0;c<8;++c){r=t[f],i=t[f+1],n=t[f+2],s=t[f+3],o=t[f+4],a=t[f+5],l=t[f+6];var m=r+(h=t[f+7]),g=r-h,p=i+l,w=i-l,b=n+a,_=n-a,y=s+o,M=s-o,x=m+y,v=m-y,E=p+b,A=p-b;t[f]=x+E,t[f+4]=x-E;var k=.707106781*(A+v);t[f+2]=v+k,t[f+6]=v-k;var S=.382683433*((x=M+_)-(A=w+g)),I=.5411961*x+S,D=1.306562965*A+S,R=.707106781*(E=_+w),T=g+R,$=g-R;t[f+5]=$+I,t[f+3]=$-I,t[f+1]=T+D,t[f+7]=T-D,f+=8}for(f=0,c=0;c<8;++c){r=t[f],i=t[f+8],n=t[f+16],s=t[f+24],o=t[f+32],a=t[f+40],l=t[f+48];var C=r+(h=t[f+56]),B=r-h,P=i+l,O=i-l,N=n+a,L=n-a,F=s+o,U=s-o,Y=C+F,H=C-F,V=P+N,z=P-N;t[f]=Y+V,t[f+32]=Y-V;var X=.707106781*(z+H);t[f+16]=H+X,t[f+48]=H-X;var G=.382683433*((Y=U+L)-(z=O+B)),Z=.5411961*Y+G,K=1.306562965*z+G,q=.707106781*(V=L+O),j=B+q,W=B-q;t[f+40]=W+Z,t[f+24]=W-Z,t[f+8]=j+K,t[f+56]=j-K,f++}for(c=0;c<64;++c)u=t[c]*e[c],d[c]=u>0?u+.5|0:u-.5|0;return d}(t,e),h=0;h<64;++h)m[v[h]]=l[h];var c=m[0]-r;r=m[0],0==c?C(i[0]):(C(i[f[s=32767+c]]),C(u[s]));for(var g=63;g>0&&0==m[g];g--);if(0==g)return C(o),r;for(var p,w=1;w<=g;){for(var b=w;0==m[w]&&w<=g;++w);var _=w-b;if(_>=16){p=_>>4;for(var y=1;y<=p;++y)C(a);_&=15}s=32767+m[w],C(n[(_<<4)+f[s]]),C(u[s]),w++}return 63!=g&&C(o),r}function N(t){if(t<=0&&(t=1),t>100&&(t=100),s!=t){(function(t){for(var e=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],r=0;r<64;r++){var i=o((e[r]*t+50)/100);i<1?i=1:i>255&&(i=255),a[v[r]]=i}for(var n=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],s=0;s<64;s++){var u=o((n[s]*t+50)/100);u<1?u=1:u>255&&(u=255),l[v[s]]=u}for(var f=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],d=0,m=0;m<8;m++)for(var g=0;g<8;g++)h[d]=1/(a[v[d]]*f[m]*f[g]*8),c[d]=1/(l[v[d]]*f[m]*f[g]*8),d++})(t<50?Math.floor(5e3/t):Math.floor(200-2*t)),s=t}}this.encode=function(t,s){var o;(new Date).getTime(),s&&N(s),g=new Array,p=0,w=7,P(65496),P(65504),P(16),B(74),B(70),B(73),B(70),B(0),B(1),B(1),B(0),P(1),P(1),B(0),B(0),void 0!==(o=t.comments)&&o.constructor===Array&&o.forEach((t=>{if("string"==typeof t){P(65534);var e,r=t.length;for(P(r+2),e=0;e<r;e++)B(t.charCodeAt(e))}})),function(t){if(t){P(65505),69===t[0]&&120===t[1]&&105===t[2]&&102===t[3]?P(t.length+2):(P(t.length+5+2),B(69),B(120),B(105),B(102),B(0));for(var e=0;e<t.length;e++)B(t[e])}}(t.exifBuffer),function(){P(65499),P(132),B(0);for(var t=0;t<64;t++)B(a[t]);B(1);for(var e=0;e<64;e++)B(l[e])}(),function(t,e){P(65472),P(17),B(8),P(e),P(t),B(3),B(1),B(17),B(0),B(2),B(17),B(1),B(3),B(17),B(1)}(t.width,t.height),function(){P(65476),P(418),B(0);for(var t=0;t<16;t++)B(E[t+1]);for(var e=0;e<=11;e++)B(A[e]);B(16);for(var r=0;r<16;r++)B(k[r+1]);for(var i=0;i<=161;i++)B(S[i]);B(1);for(var n=0;n<16;n++)B(I[n+1]);for(var s=0;s<=11;s++)B(D[s]);B(17);for(var o=0;o<16;o++)B(R[o+1]);for(var a=0;a<=161;a++)B(T[a])}(),P(65498),P(12),B(3),B(1),B(0),B(2),B(17),B(3),B(17),B(0),B(63),B(0);var u=0,f=0,d=0;p=0,w=7,this.encode.displayName="_encode_";for(var m,M,v,$,L,F,U,Y,H,V=t.data,z=t.width,X=t.height,G=4*z,Z=0;Z<X;){for(m=0;m<G;){for(F=L=G*Z+m,U=-1,Y=0,H=0;H<64;H++)F=L+(Y=H>>3)*G+(U=4*(7&H)),Z+Y>=X&&(F-=G*(Z+1+Y-X)),m+U>=G&&(F-=m+U-G+4),M=V[F++],v=V[F++],$=V[F++],b[H]=(x[M]+x[v+256>>0]+x[$+512>>0]>>16)-128,_[H]=(x[M+768>>0]+x[v+1024>>0]+x[$+1280>>0]>>16)-128,y[H]=(x[M+1280>>0]+x[v+1536>>0]+x[$+1792>>0]>>16)-128;u=O(b,h,u,e,i),f=O(_,c,f,r,n),d=O(y,c,d,r,n),m+=32}Z+=8}if(w>=0){var K=[];K[1]=w+1,K[0]=(1<<w+1)-1,C(K)}return P(65497),Buffer.from(g)},(new Date).getTime(),t||(t=50),function(){for(var t=String.fromCharCode,e=0;e<256;e++)M[e]=t(e)}(),e=$(E,A),r=$(I,D),i=$(k,S),n=$(R,T),function(){for(var t=1,e=2,r=1;r<=15;r++){for(var i=t;i<e;i++)f[32767+i]=r,u[32767+i]=[],u[32767+i][1]=r,u[32767+i][0]=i;for(var n=-(e-1);n<=-t;n++)f[32767+n]=r,u[32767+n]=[],u[32767+n][1]=r,u[32767+n][0]=e-1+n;t<<=1,e<<=1}}(),function(){for(var t=0;t<256;t++)x[t]=19595*t,x[t+256>>0]=38470*t,x[t+512>>0]=7471*t+32768,x[t+768>>0]=-11059*t,x[t+1024>>0]=-21709*t,x[t+1280>>0]=32768*t+8421375,x[t+1536>>0]=-27439*t,x[t+1792>>0]=-5329*t}(),N(t),(new Date).getTime()}t.exports=function(t,r){void 0===r&&(r=50);return{data:new e(r).encode(t,r),width:t.width,height:t.height}}}(encoder);var decoder={exports:{}};!function(t){var e=function(){var t=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),e=4017,r=799,i=3406,n=2276,s=1567,o=3784,a=5793,l=2896;function h(){}function c(t,e){for(var r,i,n=0,s=[],o=16;o>0&&!t[o-1];)o--;s.push({children:[],index:0});var a,l=s[0];for(r=0;r<o;r++){for(i=0;i<t[r];i++){for((l=s.pop()).children[l.index]=e[n];l.index>0;){if(0===s.length)throw new Error("Could not recreate Huffman Table");l=s.pop()}for(l.index++,s.push(l);s.length<=r;)s.push(a={children:[],index:0}),l.children[l.index]=a.children,l=a;n++}r+1<o&&(s.push(a={children:[],index:0}),l.children[l.index]=a.children,l=a)}return s[0].children}function u(e,r,i,n,s,o,a,l,h,c){i.precision,i.samplesPerLine,i.scanLines;var u=i.mcusPerLine,f=i.progressive;i.maxH,i.maxV;var d=r,m=0,g=0;function p(){if(g>0)return g--,m>>g&1;if(255==(m=e[r++])){var t=e[r++];if(t)throw new Error("unexpected marker: "+(m<<8|t).toString(16))}return g=7,m>>>7}function w(t){for(var e,r=t;null!==(e=p());){if("number"==typeof(r=r[e]))return r;if("object"!=typeof r)throw new Error("invalid huffman sequence")}return null}function b(t){for(var e=0;t>0;){var r=p();if(null===r)return;e=e<<1|r,t--}return e}function _(t){var e=b(t);return e>=1<<t-1?e:e+(-1<<t)+1}var y=0;var M,x=0;function v(t,e,r,i,n){var s=r%u,o=(r/u|0)*t.v+i,a=s*t.h+n;void 0===t.blocks[o]&&c.tolerantDecoding||e(t,t.blocks[o][a])}function E(t,e,r){var i=r/t.blocksPerLine|0,n=r%t.blocksPerLine;void 0===t.blocks[i]&&c.tolerantDecoding||e(t,t.blocks[i][n])}var A,k,S,I,D,R,T=n.length;R=f?0===o?0===l?function(t,e){var r=w(t.huffmanTableDC),i=0===r?0:_(r)<<h;e[0]=t.pred+=i}:function(t,e){e[0]|=p()<<h}:0===l?function(e,r){if(y>0)y--;else for(var i=o,n=a;i<=n;){var s=w(e.huffmanTableAC),l=15&s,c=s>>4;if(0!==l)r[t[i+=c]]=_(l)*(1<<h),i++;else{if(c<15){y=b(c)+(1<<c)-1;break}i+=16}}}:function(e,r){for(var i=o,n=a,s=0;i<=n;){var l=t[i],c=r[l]<0?-1:1;switch(x){case 0:var u=w(e.huffmanTableAC),f=15&u;if(s=u>>4,0===f)s<15?(y=b(s)+(1<<s),x=4):(s=16,x=1);else{if(1!==f)throw new Error("invalid ACn encoding");M=_(f),x=s?2:3}continue;case 1:case 2:r[l]?r[l]+=(p()<<h)*c:0==--s&&(x=2==x?3:0);break;case 3:r[l]?r[l]+=(p()<<h)*c:(r[l]=M<<h,x=0);break;case 4:r[l]&&(r[l]+=(p()<<h)*c)}i++}4===x&&0==--y&&(x=0)}:function(e,r){var i=w(e.huffmanTableDC),n=0===i?0:_(i);r[0]=e.pred+=n;for(var s=1;s<64;){var o=w(e.huffmanTableAC),a=15&o,l=o>>4;if(0!==a)r[t[s+=l]]=_(a),s++;else{if(l<15)break;s+=16}}};var $,C,B,P,O=0;for(C=1==T?n[0].blocksPerLine*n[0].blocksPerColumn:u*i.mcusPerColumn,s||(s=C);O<C;){for(k=0;k<T;k++)n[k].pred=0;if(y=0,1==T)for(A=n[0],D=0;D<s;D++)E(A,R,O),O++;else for(D=0;D<s;D++){for(k=0;k<T;k++)for(B=(A=n[k]).h,P=A.v,S=0;S<P;S++)for(I=0;I<B;I++)v(A,R,O,S,I);if(++O===C)break}if(O===C)do{if(255===e[r]&&0!==e[r+1])break;r+=1}while(r<e.length-2);if(g=0,($=e[r]<<8|e[r+1])<65280)throw new Error("marker was not found");if(!($>=65488&&$<=65495))break;r+=2}return r-d}function f(t,h){var c,u,f=[],d=h.blocksPerLine,m=h.blocksPerColumn,g=d<<3,w=new Int32Array(64),b=new Uint8Array(64);function _(t,c,u){var f,d,m,g,p,w,b,_,y,M,x=h.quantizationTable,v=u;for(M=0;M<64;M++)v[M]=t[M]*x[M];for(M=0;M<8;++M){var E=8*M;0!=v[1+E]||0!=v[2+E]||0!=v[3+E]||0!=v[4+E]||0!=v[5+E]||0!=v[6+E]||0!=v[7+E]?(f=a*v[0+E]+128>>8,d=a*v[4+E]+128>>8,m=v[2+E],g=v[6+E],p=l*(v[1+E]-v[7+E])+128>>8,_=l*(v[1+E]+v[7+E])+128>>8,w=v[3+E]<<4,b=v[5+E]<<4,y=f-d+1>>1,f=f+d+1>>1,d=y,y=m*o+g*s+128>>8,m=m*s-g*o+128>>8,g=y,y=p-b+1>>1,p=p+b+1>>1,b=y,y=_+w+1>>1,w=_-w+1>>1,_=y,y=f-g+1>>1,f=f+g+1>>1,g=y,y=d-m+1>>1,d=d+m+1>>1,m=y,y=p*n+_*i+2048>>12,p=p*i-_*n+2048>>12,_=y,y=w*r+b*e+2048>>12,w=w*e-b*r+2048>>12,b=y,v[0+E]=f+_,v[7+E]=f-_,v[1+E]=d+b,v[6+E]=d-b,v[2+E]=m+w,v[5+E]=m-w,v[3+E]=g+p,v[4+E]=g-p):(y=a*v[0+E]+512>>10,v[0+E]=y,v[1+E]=y,v[2+E]=y,v[3+E]=y,v[4+E]=y,v[5+E]=y,v[6+E]=y,v[7+E]=y)}for(M=0;M<8;++M){var A=M;0!=v[8+A]||0!=v[16+A]||0!=v[24+A]||0!=v[32+A]||0!=v[40+A]||0!=v[48+A]||0!=v[56+A]?(f=a*v[0+A]+2048>>12,d=a*v[32+A]+2048>>12,m=v[16+A],g=v[48+A],p=l*(v[8+A]-v[56+A])+2048>>12,_=l*(v[8+A]+v[56+A])+2048>>12,w=v[24+A],b=v[40+A],y=f-d+1>>1,f=f+d+1>>1,d=y,y=m*o+g*s+2048>>12,m=m*s-g*o+2048>>12,g=y,y=p-b+1>>1,p=p+b+1>>1,b=y,y=_+w+1>>1,w=_-w+1>>1,_=y,y=f-g+1>>1,f=f+g+1>>1,g=y,y=d-m+1>>1,d=d+m+1>>1,m=y,y=p*n+_*i+2048>>12,p=p*i-_*n+2048>>12,_=y,y=w*r+b*e+2048>>12,w=w*e-b*r+2048>>12,b=y,v[0+A]=f+_,v[56+A]=f-_,v[8+A]=d+b,v[48+A]=d-b,v[16+A]=m+w,v[40+A]=m-w,v[24+A]=g+p,v[32+A]=g-p):(y=a*u[M+0]+8192>>14,v[0+A]=y,v[8+A]=y,v[16+A]=y,v[24+A]=y,v[32+A]=y,v[40+A]=y,v[48+A]=y,v[56+A]=y)}for(M=0;M<64;++M){var k=128+(v[M]+8>>4);c[M]=k<0?0:k>255?255:k}}p(g*m*8);for(var y=0;y<m;y++){var M=y<<3;for(c=0;c<8;c++)f.push(new Uint8Array(g));for(var x=0;x<d;x++){_(h.blocks[y][x],b,w);var v=0,E=x<<3;for(u=0;u<8;u++){var A=f[M+u];for(c=0;c<8;c++)A[E+c]=b[v++]}}}return f}function d(t){return t<0?0:t>255?255:t}h.prototype={load:function(t){var e=new XMLHttpRequest;e.open("GET",t,!0),e.responseType="arraybuffer",e.onload=function(){var t=new Uint8Array(e.response||e.mozResponseArrayBuffer);this.parse(t),this.onload&&this.onload()}.bind(this),e.send(null)},parse:function(e){var r=1e3*this.opts.maxResolutionInMP*1e3,i=0;function n(){var t=e[i]<<8|e[i+1];return i+=2,t}function s(t){var e,r,i=1,n=1;for(r in t.components)t.components.hasOwnProperty(r)&&(i<(e=t.components[r]).h&&(i=e.h),n<e.v&&(n=e.v));var s=Math.ceil(t.samplesPerLine/8/i),o=Math.ceil(t.scanLines/8/n);for(r in t.components)if(t.components.hasOwnProperty(r)){e=t.components[r];var a=Math.ceil(Math.ceil(t.samplesPerLine/8)*e.h/i),l=Math.ceil(Math.ceil(t.scanLines/8)*e.v/n),h=s*e.h,c=o*e.v,u=[];p(256*(c*h));for(var f=0;f<c;f++){for(var d=[],m=0;m<h;m++)d.push(new Int32Array(64));u.push(d)}e.blocksPerLine=a,e.blocksPerColumn=l,e.blocks=u}t.maxH=i,t.maxV=n,t.mcusPerLine=s,t.mcusPerColumn=o}e.length;var o,a,l,h,d=null,m=null,g=[],w=[],b=[],_=[],y=n(),M=-1;if(this.comments=[],65496!=y)throw new Error("SOI not found");for(y=n();65497!=y;){switch(y){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var x=(l=void 0,h=void 0,l=n(),h=e.subarray(i,i+l-2),i+=h.length,h);if(65534===y){var v=String.fromCharCode.apply(null,x);this.comments.push(v)}65504===y&&74===x[0]&&70===x[1]&&73===x[2]&&70===x[3]&&0===x[4]&&(d={version:{major:x[5],minor:x[6]},densityUnits:x[7],xDensity:x[8]<<8|x[9],yDensity:x[10]<<8|x[11],thumbWidth:x[12],thumbHeight:x[13],thumbData:x.subarray(14,14+3*x[12]*x[13])}),65505===y&&69===x[0]&&120===x[1]&&105===x[2]&&102===x[3]&&0===x[4]&&(this.exifBuffer=x.subarray(5,x.length)),65518===y&&65===x[0]&&100===x[1]&&111===x[2]&&98===x[3]&&101===x[4]&&0===x[5]&&(m={version:x[6],flags0:x[7]<<8|x[8],flags1:x[9]<<8|x[10],transformCode:x[11]});break;case 65499:for(var E=n()+i-2;i<E;){var A=e[i++];p(256);var k=new Int32Array(64);if(A>>4==0)for(K=0;K<64;K++){k[t[K]]=e[i++]}else{if(A>>4!=1)throw new Error("DQT: invalid table spec");for(K=0;K<64;K++){k[t[K]]=n()}}g[15&A]=k}break;case 65472:case 65473:case 65474:n(),(o={}).extended=65473===y,o.progressive=65474===y,o.precision=e[i++],o.scanLines=n(),o.samplesPerLine=n(),o.components={},o.componentsOrder=[];var S=o.scanLines*o.samplesPerLine;if(S>r){var I=Math.ceil((S-r)/1e6);throw new Error(`maxResolutionInMP limit exceeded by ${I}MP`)}var D,R=e[i++];for(G=0;G<R;G++){D=e[i];var T=e[i+1]>>4,$=15&e[i+1],C=e[i+2];if(T<=0||$<=0)throw new Error("Invalid sampling factor, expected values above 0");o.componentsOrder.push(D),o.components[D]={h:T,v:$,quantizationIdx:C},i+=3}s(o),w.push(o);break;case 65476:var B=n();for(G=2;G<B;){var P=e[i++],O=new Uint8Array(16),N=0;for(K=0;K<16;K++,i++)N+=O[K]=e[i];p(16+N);var L=new Uint8Array(N);for(K=0;K<N;K++,i++)L[K]=e[i];G+=17+N,(P>>4==0?_:b)[15&P]=c(O,L)}break;case 65501:n(),a=n();break;case 65500:n(),n();break;case 65498:n();var F=e[i++],U=[];for(G=0;G<F;G++){q=o.components[e[i++]];var Y=e[i++];q.huffmanTableDC=_[Y>>4],q.huffmanTableAC=b[15&Y],U.push(q)}var H=e[i++],V=e[i++],z=e[i++],X=u(e,i,o,U,a,H,V,z>>4,15&z,this.opts);i+=X;break;case 65535:255!==e[i]&&i--;break;default:if(255==e[i-3]&&e[i-2]>=192&&e[i-2]<=254){i-=3;break}if(224===y||225==y){if(-1!==M)throw new Error(`first unknown JPEG marker at offset ${M.toString(16)}, second unknown JPEG marker ${y.toString(16)} at offset ${(i-1).toString(16)}`);M=i-1;const t=n();if(255===e[i+t-2]){i+=t-2;break}}throw new Error("unknown JPEG marker "+y.toString(16))}y=n()}if(1!=w.length)throw new Error("only single frame JPEGs supported");for(var G=0;G<w.length;G++){var Z=w[G].components;for(var K in Z)Z[K].quantizationTable=g[Z[K].quantizationIdx],delete Z[K].quantizationIdx}this.width=o.samplesPerLine,this.height=o.scanLines,this.jfif=d,this.adobe=m,this.components=[];for(G=0;G<o.componentsOrder.length;G++){var q=o.components[o.componentsOrder[G]];this.components.push({lines:f(0,q),scaleX:q.h/o.maxH,scaleY:q.v/o.maxV})}},getData:function(t,e){var r,i,n,s,o,a,l,h,c,u,f,m,g,w,b,_,y,M,x,v,E,A=this.width/t,k=this.height/e,S=0,I=t*e*this.components.length;p(I);var D=new Uint8Array(I);switch(this.components.length){case 1:for(r=this.components[0],u=0;u<e;u++)for(o=r.lines[0|u*r.scaleY*k],c=0;c<t;c++)f=o[0|c*r.scaleX*A],D[S++]=f;break;case 2:for(r=this.components[0],i=this.components[1],u=0;u<e;u++)for(o=r.lines[0|u*r.scaleY*k],a=i.lines[0|u*i.scaleY*k],c=0;c<t;c++)f=o[0|c*r.scaleX*A],D[S++]=f,f=a[0|c*i.scaleX*A],D[S++]=f;break;case 3:for(E=!0,this.adobe&&this.adobe.transformCode?E=!0:void 0!==this.opts.colorTransform&&(E=!!this.opts.colorTransform),r=this.components[0],i=this.components[1],n=this.components[2],u=0;u<e;u++)for(o=r.lines[0|u*r.scaleY*k],a=i.lines[0|u*i.scaleY*k],l=n.lines[0|u*n.scaleY*k],c=0;c<t;c++)E?(f=o[0|c*r.scaleX*A],m=a[0|c*i.scaleX*A],M=d(f+1.402*((g=l[0|c*n.scaleX*A])-128)),x=d(f-.3441363*(m-128)-.71413636*(g-128)),v=d(f+1.772*(m-128))):(M=o[0|c*r.scaleX*A],x=a[0|c*i.scaleX*A],v=l[0|c*n.scaleX*A]),D[S++]=M,D[S++]=x,D[S++]=v;break;case 4:if(!this.adobe)throw new Error("Unsupported color mode (4 components)");for(E=!1,this.adobe&&this.adobe.transformCode?E=!0:void 0!==this.opts.colorTransform&&(E=!!this.opts.colorTransform),r=this.components[0],i=this.components[1],n=this.components[2],s=this.components[3],u=0;u<e;u++)for(o=r.lines[0|u*r.scaleY*k],a=i.lines[0|u*i.scaleY*k],l=n.lines[0|u*n.scaleY*k],h=s.lines[0|u*s.scaleY*k],c=0;c<t;c++)E?(f=o[0|c*r.scaleX*A],m=a[0|c*i.scaleX*A],g=l[0|c*n.scaleX*A],w=h[0|c*s.scaleX*A],b=255-d(f+1.402*(g-128)),_=255-d(f-.3441363*(m-128)-.71413636*(g-128)),y=255-d(f+1.772*(m-128))):(b=o[0|c*r.scaleX*A],_=a[0|c*i.scaleX*A],y=l[0|c*n.scaleX*A],w=h[0|c*s.scaleX*A]),D[S++]=255-b,D[S++]=255-_,D[S++]=255-y,D[S++]=255-w;break;default:throw new Error("Unsupported color mode")}return D},copyToImageData:function(t,e){var r,i,n,s,o,a,l,h,c,u=t.width,f=t.height,m=t.data,g=this.getData(u,f),p=0,w=0;switch(this.components.length){case 1:for(i=0;i<f;i++)for(r=0;r<u;r++)n=g[p++],m[w++]=n,m[w++]=n,m[w++]=n,e&&(m[w++]=255);break;case 3:for(i=0;i<f;i++)for(r=0;r<u;r++)l=g[p++],h=g[p++],c=g[p++],m[w++]=l,m[w++]=h,m[w++]=c,e&&(m[w++]=255);break;case 4:for(i=0;i<f;i++)for(r=0;r<u;r++)o=g[p++],a=g[p++],n=g[p++],l=255-d(o*(1-(s=g[p++])/255)+s),h=255-d(a*(1-s/255)+s),c=255-d(n*(1-s/255)+s),m[w++]=l,m[w++]=h,m[w++]=c,e&&(m[w++]=255);break;default:throw new Error("Unsupported color mode")}}};var m=0,g=0;function p(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;var e=m+t;if(e>g){var r=Math.ceil((e-g)/1024/1024);throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${r}MB`)}m=e}return h.resetMaxMemoryUsage=function(t){m=0,g=t},h.getBytesAllocated=function(){return m},h.requestMemoryAllocation=p,h}();t.exports=function(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var i={colorTransform:void 0,useTArray:!1,formatAsRGBA:!0,tolerantDecoding:!0,maxResolutionInMP:100,maxMemoryUsageInMB:512,...r},n=new Uint8Array(t),s=new e;s.opts=i,e.resetMaxMemoryUsage(1024*i.maxMemoryUsageInMB*1024),s.parse(n);var o=i.formatAsRGBA?4:3,a=s.width*s.height*o;try{e.requestMemoryAllocation(a);var l={width:s.width,height:s.height,exifBuffer:s.exifBuffer,data:i.useTArray?new Uint8Array(a):Buffer.alloc(a)};s.comments.length>0&&(l.comments=s.comments)}catch(t){if(t instanceof RangeError)throw new Error("Could not allocate enough memory for the image. Required: "+a);if(t instanceof ReferenceError&&"Buffer is not defined"===t.message)throw new Error("Buffer is not globally defined in this environment. Consider setting useTArray to true");throw t}return s.copyToImageData(l,i.formatAsRGBA),l}}(decoder);var encode$1=encoder.exports,decode$4=decoder.exports,jpegJs={encode:encode$1,decode:decode$4};let chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",lookup=new Uint8Array(256);for(let t=0;t<chars.length;t++)lookup[chars.charCodeAt(t)]=t;function encode(t){let e,r=t.length,i="";for(e=0;e<r;e+=3)i+=chars[t[e]>>2],i+=chars[(3&t[e])<<4|t[e+1]>>4],i+=chars[(15&t[e+1])<<2|t[e+2]>>6],i+=chars[63&t[e+2]];return r%3==2?i=`${i.substring(0,i.length-1)}=`:r%3==1&&(i=`${i.substring(0,i.length-2)}==`),i}function decode$3(t){let e,r,i,n,s=.75*t.length,o=t.length,a=0;"="===t[t.length-1]&&(s--,"="===t[t.length-2]&&s--);const l=new Uint8Array(s);for(let s=0;s<o;s+=4)e=lookup[t.charCodeAt(s)],r=lookup[t.charCodeAt(s+1)],i=lookup[t.charCodeAt(s+2)],n=lookup[t.charCodeAt(s+3)],l[a++]=e<<2|r>>4,l[a++]=(15&r)<<4|i>>2,l[a++]=(3&i)<<6|63&n;return l}function toBase64URL(t,e){return`data:${e};base64,${encode(t)}`}const ImageData=self.ImageData,DOMImage=self.Image;function createCanvas(t,e){let r=self.document.createElement("canvas");return r.width=t,r.height=e,r}function fetchBinary(t){let{withCredentials:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise((function(r,i){let n=new self.XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.withCredentials=e,n.onload=function(t){200!==this.status?i(t):r(this.response)},n.onerror=i,n.send()}))}function createWriteStream(){throw new Error("createWriteStream does not exist in the browser")}function writeFile(){throw new Error("writeFile does not exist in the browser")}function getType(t){return t.includes("/")||(t=`image/${t}`),t}function encodeJpeg(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r={width:t.width,height:t.height,data:t.getRGBAData()};return jpegJs.encode(r,e.quality).data}function encodePng(t,e){const r={width:t.width,height:t.height,channels:t.channels,depth:t.bitDepth,data:t.data};return 1!==r.depth&&32!==r.depth||(r.depth=8,r.channels=4,r.data=t.getRGBAData()),encodePng$1(r,e)}const exportMethods={save(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{useCanvas:r=!1,encoder:i}=e;let{format:n}=e;if(!n){const e=/\.(?<format>[a-zA-Z]+)$/.exec(t);e&&(n=e.groups.format.toLowerCase())}if(!n)throw new Error("file format not provided");return new Promise(((t,e)=>{let s,o;switch(n.toLowerCase()){case"png":r?s=this.getCanvas().pngStream():o=encodePng(this,i);break;case"jpg":case"jpeg":r?s=this.getCanvas().jpegStream():o=encodeJpeg(this,i);break;case"bmp":o=encode$2(this,i);break;default:throw new RangeError(`invalid output format: ${n}`)}if(s){let r=createWriteStream();r.on("finish",t),r.on("error",e),s.pipe(r)}else o&&writeFile()}))},toDataURL(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"image/png",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};"object"==typeof t&&(e=t,t="image/png");const{useCanvas:r=!1,encoder:i}=e;function n(e,r){return toBase64URL(e(r,i),t)}return t=getType(t),"image/bmp"===t?n(encode$2,this):"image/png"!==t||r?"image/jpeg"!==t||r?this.getCanvas().toDataURL(t):n(encodeJpeg,this):n(encodePng,this)},toBuffer(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{format:e="png",encoder:r}=t;switch(e.toLowerCase()){case"png":return encodePng(this,r);case"jpeg":case"jpg":return encodeJpeg(this,r);case"bmp":return encode$2(this,r);default:throw new RangeError(`invalid output format: ${e}`)}},toBase64(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"image/png",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e.async)return this.toDataURL(t,e).then((function(t){return t.substring(t.indexOf(",")+1)}));{const r=this.toDataURL(t,e);return r.substring(r.indexOf(",")+1)}},toBlob(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"image/png",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.8;return canvasToBlob(this.getCanvas(),t,e)},getCanvas(){const t=new ImageData(this.getRGBAData({clamped:!0}),this.width,this.height);let e=createCanvas(this.width,this.height);return e.getContext("2d").putImageData(t,0,0),e}};function setExportMethods(t){for(const e in exportMethods)t.prototype[e]=exportMethods[e]}var hasOwn$1={exports:{}},name="has-own",version="1.0.1",description="A safer .hasOwnProperty() - hasOwn(name, obj)",main="index.js",scripts={test:"make test"},author="Aaron Heckmann <aaron.heckmann+github@gmail.com>",license="MIT",repository={type:"git",url:"git://github.com/aheckmann/has-own.git"},homepage="https://github.com/aheckmann/has-own/",devDependencies={mocha:"^6.2.2"},require$$0$2={name:name,version:version,description:description,main:main,scripts:scripts,author:author,license:license,repository:repository,homepage:homepage,devDependencies:devDependencies};!function(t,e){var r=Object.prototype.hasOwnProperty;t.exports=e=function(t,e){return r.call(e,t)},e.version=require$$0$2.version}(hasOwn$1,hasOwn$1.exports);var hasOwn=hasOwn$1.exports;let computedPropertyDescriptor$1={configurable:!0,enumerable:!1,get:void 0};function extendMethod(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{inPlace:i=!1,returnThis:n=!0,partialArgs:s=[]}=r;return Image.prototype[t]=i?function(){this.computed=null;for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];let o=e.apply(this,[...s,...r]);return n?this:o}:function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return e.apply(this,[...s,...r])},Image}function extendProperty(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{partialArgs:i=[]}=r;return computedPropertyDescriptor$1.get=function(){if(null===this.computed)this.computed={};else if(hasOwn(t,this.computed))return this.computed[t];let r=e.apply(this,i);return this.computed[t]=r,r},Object.defineProperty(Image.prototype,t,computedPropertyDescriptor$1),Image}const GREY$1="GREY",RGB$1="RGB",HSL="HSL",HSV="HSV",CMYK$1="CMYK";var ColorModel=Object.freeze({__proto__:null,GREY:GREY$1,RGB:RGB$1,HSL:HSL,HSV:HSV,CMYK:CMYK$1});function getRGBAData(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{clamped:e}=t;this.checkProcessable("getRGBAData",{components:[1,3],bitDepth:[1,8,16,32]});const r=this.width*this.height*4;let i=e?new Uint8ClampedArray(r):new Uint8Array(r);return 1===this.bitDepth?fillDataFromBinary(this,i):32===this.bitDepth?(this.checkProcessable("getRGBAData",{alpha:0}),1===this.components?fillDataFromGrey32(this,i):3===this.components&&(this.checkProcessable("getRGBAData",{colorModel:[RGB$1]}),fillDataFromRGB32(this,i))):1===this.components?fillDataFromGrey(this,i):3===this.components&&(this.checkProcessable("getRGBAData",{colorModel:[RGB$1]}),fillDataFromRGB(this,i)),1===this.alpha?(this.checkProcessable("getRGBAData",{bitDepth:[8,16]}),copyAlpha(this,i)):fillAlpha(this,i),i}function fillDataFromBinary(t,e){for(let r=0;r<t.size;r++){const i=t.getBit(r);e[4*r]=255*i,e[4*r+1]=255*i,e[4*r+2]=255*i}}function fillDataFromGrey32(t,e){const r=t.min[0],i=t.max[0]-r;for(let n=0;n<t.size;n++){const s=Math.floor(255*(t.data[n]-r)/i);e[4*n]=s,e[4*n+1]=s,e[4*n+2]=s}}function fillDataFromRGB32(t,e){const r=Math.min(...t.min),i=Math.max(...t.max)-r;for(let n=0;n<t.size;n++){const s=Math.floor(255*(t.data[3*n]-r)/i),o=Math.floor(255*(t.data[3*n+1]-r)/i),a=Math.floor(255*(t.data[3*n+2]-r)/i);e[4*n]=s,e[4*n+1]=o,e[4*n+2]=a}}function fillDataFromGrey(t,e){for(let r=0;r<t.size;r++)e[4*r]=t.data[r*t.channels]>>>t.bitDepth-8,e[4*r+1]=t.data[r*t.channels]>>>t.bitDepth-8,e[4*r+2]=t.data[r*t.channels]>>>t.bitDepth-8}function fillDataFromRGB(t,e){for(let r=0;r<t.size;r++)e[4*r]=t.data[r*t.channels]>>>t.bitDepth-8,e[4*r+1]=t.data[r*t.channels+1]>>>t.bitDepth-8,e[4*r+2]=t.data[r*t.channels+2]>>>t.bitDepth-8}function copyAlpha(t,e){for(let r=0;r<t.size;r++)e[4*r+3]=t.data[r*t.channels+t.components]>>t.bitDepth-8}function fillAlpha(t,e){for(let r=0;r<t.size;r++)e[4*r+3]=255}const BINARY="BINARY",GREY="GREY",GREYA="GREYA",RGB="RGB",RGBA="RGBA",CMYK="CMYK",CMYKA="CMYKA",kinds={};function getKind(t){const e=kinds[t];if(!e)throw new RangeError(`invalid image kind: ${t}`);return e}kinds[BINARY]={components:1,alpha:0,bitDepth:1,colorModel:GREY$1},kinds[GREYA]={components:1,alpha:1,bitDepth:8,colorModel:GREY$1},kinds[GREY]={components:1,alpha:0,bitDepth:8,colorModel:GREY$1},kinds[RGBA]={components:3,alpha:1,bitDepth:8,colorModel:RGB$1},kinds[RGB]={components:3,alpha:0,bitDepth:8,colorModel:RGB$1},kinds[CMYK]={components:4,alpha:0,bitDepth:8,colorModel:CMYK$1},kinds[CMYKA]={components:4,alpha:1,bitDepth:8,colorModel:CMYK$1};const validBitDepth=[1,8,16,32];function verifyKindDefinition(t){const{components:e,alpha:r,bitDepth:i,colorModel:n}=t;if(!Number.isInteger(e)||e<=0)throw new RangeError(`invalid components: ${e}. Must be a positive integer`);if(0!==r&&1!==r&&"boolean"!=typeof r)throw new TypeError(`invalid alpha: ${r}: must be a boolean, 0 or 1`);if(!validBitDepth.includes(i))throw new RangeError(`invalid bitDepth: ${i}. Must be one of ${validBitDepth.join(", ")}`);if(!ColorModel[n])throw new RangeError(`invalid colorModel: ${n}. Must be one of ${Object.keys(ColorModel).join(", ")}`)}function getTheoreticalPixelArraySize(t,e,r){let i=e*t;return 1===r&&(i=Math.ceil(i/8)),i}function createPixelArray(t,e,r,i,n,s){const o=i*t;let a;switch(n){case 1:a=new Uint8Array(Math.ceil(o/8));break;case 8:a=new Uint8Array(o);break;case 16:a=new Uint16Array(o);break;case 32:a=new Float32Array(o);break;default:throw new Error(`Cannot create pixel array for bit depth ${n}`)}if(r)for(let t=e;t<a.length;t+=i)a[t]=s;return a}var src$5={};const defaultByteLength=8192,charArray=[];class IOBuffer$2{constructor(t,e){e=e||{},void 0===t&&(t=defaultByteLength),"number"==typeof t&&(t=new ArrayBuffer(t));let r=t.byteLength;const i=e.offset?e.offset>>>0:0;t.buffer&&(r=t.byteLength-i,t=t.byteLength!==t.buffer.byteLength?t.buffer.slice(t.byteOffset+i,t.byteOffset+t.byteLength):i?t.buffer.slice(i):t.buffer),this.buffer=t,this.length=r,this.byteLength=r,this.byteOffset=0,this.offset=0,this.littleEndian=!0,this._data=new DataView(this.buffer),this._increment=r||defaultByteLength,this._mark=0}available(t){return void 0===t&&(t=1),this.offset+t<=this.length}isLittleEndian(){return this.littleEndian}setLittleEndian(){this.littleEndian=!0}isBigEndian(){return!this.littleEndian}setBigEndian(){this.littleEndian=!1}skip(t){void 0===t&&(t=1),this.offset+=t}seek(t){this.offset=t}mark(){this._mark=this.offset}reset(){this.offset=this._mark}rewind(){this.offset=0}ensureAvailable(t){if(void 0===t&&(t=1),!this.available(t)){const t=this._increment+this._increment;this._increment=t;const e=this.length+t,r=new Uint8Array(e);r.set(new Uint8Array(this.buffer)),this.buffer=r.buffer,this.length=e,this._data=new DataView(this.buffer)}}readBoolean(){return 0!==this.readUint8()}readInt8(){return this._data.getInt8(this.offset++)}readUint8(){return this._data.getUint8(this.offset++)}readByte(){return this.readUint8()}readBytes(t){void 0===t&&(t=1);for(var e=new Uint8Array(t),r=0;r<t;r++)e[r]=this.readByte();return e}readInt16(){var t=this._data.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}readUint16(){var t=this._data.getUint16(this.offset,this.littleEndian);return this.offset+=2,t}readInt32(){var t=this._data.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}readUint32(){var t=this._data.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat32(){var t=this._data.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat64(){var t=this._data.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}readChar(){return String.fromCharCode(this.readInt8())}readChars(t){void 0===t&&(t=1),charArray.length=t;for(var e=0;e<t;e++)charArray[e]=this.readChar();return charArray.join("")}writeBoolean(t){this.writeUint8(t?255:0)}writeInt8(t){this.ensureAvailable(1),this._data.setInt8(this.offset++,t)}writeUint8(t){this.ensureAvailable(1),this._data.setUint8(this.offset++,t)}writeByte(t){this.writeUint8(t)}writeBytes(t){this.ensureAvailable(t.length);for(var e=0;e<t.length;e++)this._data.setUint8(this.offset++,t[e])}writeInt16(t){this.ensureAvailable(2),this._data.setInt16(this.offset,t,this.littleEndian),this.offset+=2}writeUint16(t){this.ensureAvailable(2),this._data.setUint16(this.offset,t,this.littleEndian),this.offset+=2}writeInt32(t){this.ensureAvailable(4),this._data.setInt32(this.offset,t,this.littleEndian),this.offset+=4}writeUint32(t){this.ensureAvailable(4),this._data.setUint32(this.offset,t,this.littleEndian),this.offset+=4}writeFloat32(t){this.ensureAvailable(4),this._data.setFloat32(this.offset,t,this.littleEndian),this.offset+=4}writeFloat64(t){this.ensureAvailable(8),this._data.setFloat64(this.offset,t,this.littleEndian),this.offset+=8}writeChar(t){this.writeUint8(t.charCodeAt(0))}writeChars(t){for(var e=0;e<t.length;e++)this.writeUint8(t.charCodeAt(e))}toArray(){return new Uint8Array(this.buffer,0,this.offset)}}var IOBuffer_1=IOBuffer$2,src$4={};const tagsById$5={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Threshholding",264:"CellWidth",265:"CellLength",266:"FillOrder",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",296:"ResolutionUnit",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",320:"ColorMap",338:"ExtraSamples",33432:"Copyright",269:"DocumentName",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",293:"T6Options",297:"PageNumber",301:"TransferFunction",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFDs",332:"InkSet",333:"InkNames",334:"NumberOfInks",336:"DotRange",337:"TargetPrinter",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"XMP",32781:"ImageID",34732:"ImageLayer",32932:"WangAnnotatio",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"ModelPixelScaleTag",33723:"IPTC",33918:"INGRPacketDataTag",33919:"INGRFlagRegisters",33920:"IrasBTransformationMatrix",33922:"ModelTiepointTag",34264:"ModelTransformationTag",34377:"Photoshop",34665:"ExifIFD",34675:"ICCProfile",34735:"GeoKeyDirectoryTag",34736:"GeoDoubleParamsTag",34737:"GeoAsciiParamsTag",34853:"GPSIFD",34908:"HylaFAXFaxRecvParams",34909:"HylaFAXFaxSubAddress",34910:"HylaFAXFaxRecvTime",37724:"ImageSourceData",40965:"InteroperabilityIFD",42112:"GDAL_METADATA",42113:"GDAL_NODATA",50215:"OceScanjobDescription",50216:"OceApplicationSelector",50217:"OceIdentificationNumber",50218:"OceImageLogicCharacteristics",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50784:"AliasLayerMetadata"},tagsByName$5={};for(var i$2 in tagsById$5)tagsByName$5[tagsById$5[i$2]]=i$2;var standard$1={tagsById:tagsById$5,tagsByName:tagsByName$5};const tagsById$4={33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBiasValue",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37396:"SubjectArea",37500:"MakerNote",37510:"UserComment",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",40964:"RelatedSoundFile",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"CameraOwnerName",42033:"BodySerialNumber",42034:"LensSpecification",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42240:"Gamma"},tagsByName$4={};for(var i$1 in tagsById$4)tagsByName$4[tagsById$4[i$1]]=i$1;var exif$1={tagsById:tagsById$4,tagsByName:tagsByName$4};const tagsById$3={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"},tagsByName$3={};for(var i in tagsById$3)tagsByName$3[tagsById$3[i]]=i;var gps$1={tagsById:tagsById$3,tagsByName:tagsByName$3};const tags$1={standard:standard$1,exif:exif$1,gps:gps$1};class IFD$2{constructor(t){if(!t)throw new Error("missing kind");this.data=null,this.fields=new Map,this.kind=t,this._map=null}get(t){if("number"==typeof t)return this.fields.get(t);if("string"==typeof t)return this.fields.get(tags$1[this.kind].tagsByName[t]);throw new Error("expected a number or string")}get map(){if(!this._map){this._map={};const e=tags$1[this.kind].tagsById;for(var t of this.fields.keys())e[t]&&(this._map[e[t]]=this.fields.get(t))}return this._map}}var ifd=IFD$2;const Ifd=ifd,dateTimeRegex$1=/^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})$/;class TiffIfd$1 extends Ifd{constructor(){super("standard")}get size(){return this.width*this.height}get width(){return this.imageWidth}get height(){return this.imageLength}get components(){return this.samplesPerPixel}get date(){var t=new Date,e=dateTimeRegex$1.exec(this.dateTime);return t.setFullYear(e[1],e[2]-1,e[3]),t.setHours(e[4],e[5],e[6]),t}get newSubfileType(){return this.get(254)}get imageWidth(){return this.get(256)}get imageLength(){return this.get(257)}get bitsPerSample(){return this.get(258)}get compression(){return this.get(259)||1}get type(){return this.get(262)}get fillOrder(){return this.get(266)||1}get documentName(){return this.get(269)}get imageDescription(){return this.get(270)}get stripOffsets(){return alwaysArray$1(this.get(273))}get orientation(){return this.get(274)}get samplesPerPixel(){return this.get(277)}get rowsPerStrip(){return this.get(278)}get stripByteCounts(){return alwaysArray$1(this.get(279))}get minSampleValue(){return this.get(280)||0}get maxSampleValue(){return this.get(281)||Math.pow(2,this.bitsPerSample)-1}get xResolution(){return this.get(282)}get yResolution(){return this.get(283)}get planarConfiguration(){return this.get(284)||1}get resolutionUnit(){return this.get(296)||2}get dateTime(){return this.get(306)}get predictor(){return this.get(317)||1}get sampleFormat(){return this.get(339)||1}get sMinSampleValue(){return this.get(340)||this.minSampleValue}get sMaxSampleValue(){return this.get(341)||this.maxSampleValue}}function alwaysArray$1(t){return"number"==typeof t?[t]:t}var tiffIfd=TiffIfd$1,ifdValue={},types$1=new Map([[1,[1,readByte$1]],[2,[1,readASCII$1]],[3,[2,readShort$1]],[4,[4,readLong$1]],[5,[8,readRational$1]],[6,[1,readSByte$1]],[7,[1,readByte$1]],[8,[2,readSShort$1]],[9,[4,readSLong$1]],[10,[8,readSRational$1]],[11,[4,readFloat$1]],[12,[8,readDouble$1]]]);function readByte$1(t,e){if(1===e)return t.readUint8();for(var r=new Uint8Array(e),i=0;i<e;i++)r[i]=t.readUint8();return r}function readASCII$1(t,e){for(var r=[],i="",n=0;n<e;n++){var s=String.fromCharCode(t.readUint8());"\0"===s?(r.push(i),i=""):i+=s}return 1===r.length?r[0]:r}function readShort$1(t,e){if(1===e)return t.readUint16();for(var r=new Uint16Array(e),i=0;i<e;i++)r[i]=t.readUint16();return r}function readLong$1(t,e){if(1===e)return t.readUint32();for(var r=new Uint32Array(e),i=0;i<e;i++)r[i]=t.readUint32();return r}function readRational$1(t,e){if(1===e)return t.readUint32()/t.readUint32();for(var r=new Array(e),i=0;i<e;i++)r[i]=t.readUint32()/t.readUint32();return r}function readSByte$1(t,e){if(1===e)return t.readInt8();for(var r=new Int8Array(e),i=0;i<e;i++)r[i]=t.readInt8();return r}function readSShort$1(t,e){if(1===e)return t.readInt16();for(var r=new Int16Array(e),i=0;i<e;i++)r[i]=t.readInt16();return r}function readSLong$1(t,e){if(1===e)return t.readInt32();for(var r=new Int32Array(e),i=0;i<e;i++)r[i]=t.readInt32();return r}function readSRational$1(t,e){if(1===e)return t.readInt32()/t.readInt32();for(var r=new Array(e),i=0;i<e;i++)r[i]=t.readInt32()/t.readInt32();return r}function readFloat$1(t,e){if(1===e)return t.readFloat32();for(var r=new Float32Array(e),i=0;i<e;i++)r[i]=t.readFloat32();return r}function readDouble$1(t,e){if(1===e)return t.readFloat64();for(var r=new Float64Array(e),i=0;i<e;i++)r[i]=t.readFloat64();return r}ifdValue.getByteLength=function(t,e){return types$1.get(t)[0]*e},ifdValue.readData=function(t,e,r){return types$1.get(e)[1](t,r)};const IOBuffer$1=IOBuffer_1,IFD$1=ifd,TiffIFD=tiffIfd,IFDValue=ifdValue,defaultOptions$d={ignoreImageData:!1,onlyFirst:!1};class TIFFDecoder$2 extends IOBuffer$1{constructor(t,e){super(t,e),this._nextIFD=0}decode(t){t=Object.assign({},defaultOptions$d,t);const e=[];for(this.decodeHeader();this._nextIFD;)if(e.push(this.decodeIFD(t)),t.onlyFirst)return e[0];return e}decodeHeader(){let t=this.readUint16();if(18761===t)this.setLittleEndian();else{if(19789!==t)throw new Error("invalid byte order: 0x"+t.toString(16));this.setBigEndian()}if(t=this.readUint16(),42!==t)throw new Error("not a TIFF file");this._nextIFD=this.readUint32()}decodeIFD(t){var e;this.seek(this._nextIFD),e=t.kind?new IFD$1(t.kind):new TiffIFD;const r=this.readUint16();for(var i=0;i<r;i++)this.decodeIFDEntry(e);return t.ignoreImageData||this.decodeImageData(e),this._nextIFD=this.readUint32(),e}decodeIFDEntry(t){const e=this.offset,r=this.readUint16(),i=this.readUint16(),n=this.readUint32();if(i<1||i>12)return void this.skip(4);IFDValue.getByteLength(i,n)>4&&this.seek(this.readUint32());const s=IFDValue.readData(this,i,n);if(t.fields.set(r,s),34665===r||34853===r){let e,i=this.offset;34665===r?e="exif":34853===r&&(e="gps"),this._nextIFD=s,t[e]=this.decodeIFD({kind:e,ignoreImageData:!0}),this.offset=i}this.seek(e),this.skip(12)}decodeImageData(t){const e=t.orientation;switch(e&&1!==e&&unsupported$1("orientation",e),t.type){case 1:case 2:this.readStripData(t);break;default:unsupported$1("image type",t.type)}}readStripData(t){const e=t.width,r=t.height,i=validateBitDepth(t.bitsPerSample),n=t.sampleFormat;let s=e*r;const o=getDataArray$1(s,1,i,n),a=t.compression,l=t.rowsPerStrip*e,h=t.stripOffsets,c=t.stripByteCounts;for(var u=0,f=0;f<h.length;f++){var d=this.getStripData(a,h[f],c[f]),m=s>l?l:s;s-=m,8===i?u=fill8bit$1(o,d,u,m):16===i?u=fill16bit$1(o,d,u,m,this.isLittleEndian()):32===i&&3===n?u=fillFloat32$1(o,d,u,m,this.isLittleEndian()):unsupported$1("bitDepth",i)}t.data=o}getStripData(t,e,r){switch(t){case 1:return new DataView(this.buffer,e,r);case 2:case 32773:return unsupported$1("Compression",t);default:throw new Error("invalid compression: "+t)}}}var tiffDecoder=TIFFDecoder$2;function getDataArray$1(t,e,r,i){return 8===r?new Uint8Array(t*e):16===r?new Uint16Array(t*e):32===r&&3===i?new Float32Array(t*e):unsupported$1("bit depth / sample format",r+" / "+i)}function fill8bit$1(t,e,r,i){for(var n=0;n<i;n++)t[r++]=e.getUint8(n);return r}function fill16bit$1(t,e,r,i,n){for(var s=0;s<2*i;s+=2)t[r++]=e.getUint16(s,n);return r}function fillFloat32$1(t,e,r,i,n){for(var s=0;s<4*i;s+=4)t[r++]=e.getFloat32(s,n);return r}function unsupported$1(t,e){throw new Error("Unsupported "+t+": "+e)}function validateBitDepth(t){if(t.length){const r=t;t=r[0];for(var e=0;e<r.length;e++)r[e]!==t&&unsupported$1("bit depth",r)}return t}const TIFFDecoder$1=tiffDecoder;var decode$2=function(t,e){return new TIFFDecoder$1(t,e).decode(e)};src$4.decode=decode$2;const IOBuffer=IOBuffer_1,tiff=src$4;function decode$1(t){const e=new IOBuffer(t),r={};e.setBigEndian();if(65496!==e.readUint16())throw new Error("SOI marker not found. Not a valid JPEG file");if(65505===e.readUint16()){e.readUint16();const t=e.readBytes(6);if(69===t[0]&&120===t[1]&&105===t[2]&&102===t[3]&&0===t[4]&&0===t[5]){const t=tiff.decode(e,{onlyFirst:!0,ignoreImageData:!0,offset:e.offset});r.exif=t}}return r}var decode_1=decode$1,decode=src$5.decode=decode_1,imageType$2={exports:{}},fileType$1={exports:{}};(function(module){const toBytes=t=>[...t].map((t=>t.charCodeAt(0))),xpiZipFilename=toBytes("META-INF/mozilla.rsa"),oxmlContentTypes=toBytes("[Content_Types].xml"),oxmlRels=toBytes("_rels/.rels");function readUInt64LE(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=t[e],i=1,n=0;for(;++n<8;)i*=256,r+=t[e+n]*i;return r}const fileType=t=>{if(!(t instanceof Uint8Array||t instanceof ArrayBuffer||Buffer.isBuffer(t)))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof t}\``);const e=t instanceof Uint8Array?t:new Uint8Array(t);if(!(e&&e.length>1))return null;const r=(t,r)=>{r=Object.assign({offset:0},r);for(let i=0;i<t.length;i++)if(r.mask){if(t[i]!==(r.mask[i]&e[i+r.offset]))return!1}else if(t[i]!==e[i+r.offset])return!1;return!0},i=(t,e)=>r(toBytes(t),e);if(r([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(r([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(r([71,73,70]))return{ext:"gif",mime:"image/gif"};if(r([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(r([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((r([73,73,42,0])||r([77,77,0,42]))&&r([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(r([73,73,42,0])||r([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(r([66,77]))return{ext:"bmp",mime:"image/bmp"};if(r([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(r([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(r([80,75,3,4])){if(r([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(r(xpiZipFilename,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(i("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(i("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(i("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};const t=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t.findIndex(((t,r,i)=>r>=e&&80===i[r]&&75===i[r+1]&&3===i[r+2]&&4===i[r+3]))};let n=0,s=!1,o=null;do{const a=n+30;if(s||(s=r(oxmlContentTypes,{offset:a})||r(oxmlRels,{offset:a})),o||(i("word/",{offset:a})?o={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:i("ppt/",{offset:a})?o={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:i("xl/",{offset:a})&&(o={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),s&&o)return o;n=t(e,a)}while(n>=0);if(o)return o}if(r([80,75])&&(3===e[2]||5===e[2]||7===e[2])&&(4===e[3]||6===e[3]||8===e[3]))return{ext:"zip",mime:"application/zip"};if(r([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(r([82,97,114,33,26,7])&&(0===e[6]||1===e[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(r([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(r([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(r([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(r([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(r([51,103,112,53])||r([0,0,0])&&r([102,116,121,112],{offset:4})&&(r([109,112,52,49],{offset:8})||r([109,112,52,50],{offset:8})||r([105,115,111,109],{offset:8})||r([105,115,111,50],{offset:8})||r([109,109,112,52],{offset:8})||r([77,52,86],{offset:8})||r([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(r([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(r([26,69,223,163])){const t=e.subarray(4,4100),r=t.findIndex(((t,e,r)=>66===r[e]&&130===r[e+1]));if(-1!==r){const e=r+3,i=r=>[...r].every(((r,i)=>t[e+i]===r.charCodeAt(0)));if(i("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(i("webm"))return{ext:"webm",mime:"video/webm"}}}if(r([0,0,0,20,102,116,121,112,113,116,32,32])||r([102,114,101,101],{offset:4})||r([102,116,121,112,113,116,32,32],{offset:4})||r([109,100,97,116],{offset:4})||r([109,111,111,118],{offset:4})||r([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(r([82,73,70,70])){if(r([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(r([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(r([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(r([48,38,178,117,142,102,207,17,166,217])){let t=30;do{const i=readUInt64LE(e,t+16);if(r([145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101],{offset:t})){if(r([64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43],{offset:t+24}))return{ext:"wma",mime:"audio/x-ms-wma"};if(r([192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43],{offset:t+24}))return{ext:"wmv",mime:"video/x-ms-asf"};break}t+=i}while(t+24<=e.length);return{ext:"asf",mime:"application/vnd.ms-asf"}}if(r([0,0,1,186])||r([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(r([102,116,121,112,51,103],{offset:4}))return{ext:"3gp",mime:"video/3gpp"};for(let t=0;t<2&&t<e.length-16;t++){if(r([73,68,51],{offset:t})||r([255,226],{offset:t,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(r([255,228],{offset:t,mask:[255,228]}))return{ext:"mp2",mime:"audio/mpeg"};if(r([255,248],{offset:t,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(r([255,240],{offset:t,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(r([102,116,121,112,77,52,65],{offset:4}))return{ext:"m4a",mime:"audio/mp4"};if(r([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(r([79,103,103,83]))return r([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:r([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:r([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:r([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:r([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(r([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(r([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(r([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(r([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(r([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(r([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((67===e[0]||70===e[0])&&r([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(r([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(r([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(r([119,79,70,70])&&(r([0,1,0,0],{offset:4})||r([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(r([119,79,70,50])&&(r([0,1,0,0],{offset:4})||r([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(r([76,80],{offset:34})&&(r([0,0,1],{offset:8})||r([1,0,2],{offset:8})||r([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(r([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(r([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(r([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(r([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(r([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(r([37,33]))return{ext:"ps",mime:"application/postscript"};if(r([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(r([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(r([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(r([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(r([77,83,67,70])||r([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(r([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(r([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(r([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(r([31,160])||r([31,157]))return{ext:"Z",mime:"application/x-compress"};if(r([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(r([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(r([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(r([71],{offset:4})&&(r([71],{offset:192})||r([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(r([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(r([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(r([0,0,0,12,106,80,32,32,13,10,135,10])){if(r([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(r([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(r([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(r([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}if(r([70,79,82,77]))return{ext:"aif",mime:"audio/aiff"};if(i("<?xml "))return{ext:"xml",mime:"application/xml"};if(r([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(r([102,116,121,112],{offset:4})){if(r([109,105,102,49],{offset:8}))return{ext:"heic",mime:"image/heif"};if(r([109,115,102,49],{offset:8}))return{ext:"heic",mime:"image/heif-sequence"};if(r([104,101,105,99],{offset:8})||r([104,101,105,120],{offset:8}))return{ext:"heic",mime:"image/heic"};if(r([104,101,118,99],{offset:8})||r([104,101,118,120],{offset:8}))return{ext:"heic",mime:"image/heic-sequence"}}return r([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:r([68,73,67,77],{offset:128})?{ext:"dcm",mime:"application/dicom"}:r([77,80,43])||r([77,80,67,75])?{ext:"mpc",mime:"audio/x-musepack"}:r([66,69,71,73,78,58])?{ext:"ics",mime:"text/calendar"}:r([103,108,84,70,2,0,0,0])?{ext:"glb",mime:"model/gltf-binary"}:r([212,195,178,161])||r([161,178,195,212])?{ext:"pcap",mime:"application/vnd.tcpdump.pcap"}:null};module.exports=fileType,module.exports.default=fileType,Object.defineProperty(fileType,"minimumBytes",{value:4100}),module.exports.stream=readableStream=>new Promise(((resolve,reject)=>{const stream=eval("require")("stream");readableStream.once("readable",(()=>{const t=new stream.PassThrough,e=readableStream.read(module.exports.minimumBytes)||readableStream.read();try{t.fileType=fileType(e)}catch(t){reject(t)}readableStream.unshift(e),stream.pipeline?resolve(stream.pipeline(readableStream,t,(()=>{}))):resolve(readableStream.pipe(t))}))}))})(fileType$1);const fileType=fileType$1.exports,imageExts=new Set(["jpg","png","gif","webp","flif","cr2","tif","bmp","jxr","psd","ico","bpg","jp2","jpm","jpx","heic","cur","dcm"]),imageType=t=>{const e=fileType(t);return imageExts.has(e&&e.ext)?e:null};imageType$2.exports=imageType,imageType$2.exports.default=imageType,Object.defineProperty(imageType,"minimumBytes",{value:fileType.minimumBytes});var imageType$1=imageType$2.exports;function guessStripByteCounts(t){if(1!==t.compression)throw new Error("missing mandatory StripByteCounts field in compressed image");const e=t.rowsPerStrip*t.width*t.samplesPerPixel*(t.bitsPerSample/8);return new Array(t.stripOffsets.length).fill(e)}function applyHorizontalDifferencing8Bit(t,e,r){let i=0;for(;i<t.length;){for(let n=r;n<e*r;n+=r)for(let e=0;e<r;e++)t[i+n+e]=t[i+n+e]+t[i+n-(r-e)]&255;i+=e*r}}function applyHorizontalDifferencing16Bit(t,e,r){let i=0;for(;i<t.length;){for(let n=r;n<e*r;n+=r)for(let e=0;e<r;e++)t[i+n+e]=t[i+n+e]+t[i+n-(r-e)]&65535;i+=e*r}}const tagsById$2={33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBiasValue",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37396:"SubjectArea",37500:"MakerNote",37510:"UserComment",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",40964:"RelatedSoundFile",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"CameraOwnerName",42033:"BodySerialNumber",42034:"LensSpecification",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42240:"Gamma"},tagsByName$2={};for(let t in tagsById$2)tagsByName$2[tagsById$2[t]]=Number(t);var exif=Object.freeze({__proto__:null,tagsById:tagsById$2,tagsByName:tagsByName$2});const tagsById$1={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"},tagsByName$1={};for(let t in tagsById$1)tagsByName$1[tagsById$1[t]]=Number(t);var gps=Object.freeze({__proto__:null,tagsById:tagsById$1,tagsByName:tagsByName$1});const tagsById={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Threshholding",264:"CellWidth",265:"CellLength",266:"FillOrder",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",296:"ResolutionUnit",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",320:"ColorMap",338:"ExtraSamples",33432:"Copyright",269:"DocumentName",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",293:"T6Options",297:"PageNumber",301:"TransferFunction",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFDs",332:"InkSet",333:"InkNames",334:"NumberOfInks",336:"DotRange",337:"TargetPrinter",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"XMP",32781:"ImageID",34732:"ImageLayer",32932:"WangAnnotatio",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"ModelPixelScaleTag",33723:"IPTC",33918:"INGRPacketDataTag",33919:"INGRFlagRegisters",33920:"IrasBTransformationMatrix",33922:"ModelTiepointTag",34264:"ModelTransformationTag",34377:"Photoshop",34665:"ExifIFD",34675:"ICCProfile",34735:"GeoKeyDirectoryTag",34736:"GeoDoubleParamsTag",34737:"GeoAsciiParamsTag",34853:"GPSIFD",34908:"HylaFAXFaxRecvParams",34909:"HylaFAXFaxSubAddress",34910:"HylaFAXFaxRecvTime",37724:"ImageSourceData",40965:"InteroperabilityIFD",42112:"GDAL_METADATA",42113:"GDAL_NODATA",50215:"OceScanjobDescription",50216:"OceApplicationSelector",50217:"OceIdentificationNumber",50218:"OceImageLogicCharacteristics",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50784:"AliasLayerMetadata"},tagsByName={};for(let t in tagsById)tagsByName[tagsById[t]]=Number(t);var standard=Object.freeze({__proto__:null,tagsById:tagsById,tagsByName:tagsByName});const tags={standard:standard,exif:exif,gps:gps};class IFD{constructor(t){if(!t)throw new Error("missing kind");this.data=new Uint8Array,this.fields=new Map,this.kind=t,this._hasMap=!1,this._map={}}get(t){if("number"==typeof t)return this.fields.get(t);if("string"==typeof t)return this.fields.get(tags[this.kind].tagsByName[t]);throw new Error("expected a number or string")}get map(){if(!this._hasMap){const t=tags[this.kind].tagsById;for(let e of this.fields.keys())t[e]&&(this._map[t[e]]=this.fields.get(e));this._hasMap=!0}return this._map}}let types=new Map([[1,[1,readByte]],[2,[1,readASCII]],[3,[2,readShort]],[4,[4,readLong]],[5,[8,readRational]],[6,[1,readSByte]],[7,[1,readByte]],[8,[2,readSShort]],[9,[4,readSLong]],[10,[8,readSRational]],[11,[4,readFloat]],[12,[8,readDouble]]]);function getByteLength(t,e){const r=types.get(t);if(!r)throw new Error(`type not found: ${t}`);return r[0]*e}function readData(t,e,r){const i=types.get(e);if(!i)throw new Error(`type not found: ${e}`);return i[1](t,r)}function readByte(t,e){if(1===e)return t.readUint8();let r=new Uint8Array(e);for(let i=0;i<e;i++)r[i]=t.readUint8();return r}function readASCII(t,e){let r=[],i="";for(let n=0;n<e;n++){let e=String.fromCharCode(t.readUint8());"\0"===e?(r.push(i),i=""):i+=e}return 1===r.length?r[0]:r}function readShort(t,e){if(1===e)return t.readUint16();let r=new Uint16Array(e);for(let i=0;i<e;i++)r[i]=t.readUint16();return r}function readLong(t,e){if(1===e)return t.readUint32();let r=new Uint32Array(e);for(let i=0;i<e;i++)r[i]=t.readUint32();return r}function readRational(t,e){if(1===e)return t.readUint32()/t.readUint32();let r=new Array(e);for(let i=0;i<e;i++)r[i]=t.readUint32()/t.readUint32();return r}function readSByte(t,e){if(1===e)return t.readInt8();let r=new Int8Array(e);for(let i=0;i<e;i++)r[i]=t.readInt8();return r}function readSShort(t,e){if(1===e)return t.readInt16();let r=new Int16Array(e);for(let i=0;i<e;i++)r[i]=t.readInt16();return r}function readSLong(t,e){if(1===e)return t.readInt32();let r=new Int32Array(e);for(let i=0;i<e;i++)r[i]=t.readInt32();return r}function readSRational(t,e){if(1===e)return t.readInt32()/t.readInt32();let r=new Array(e);for(let i=0;i<e;i++)r[i]=t.readInt32()/t.readInt32();return r}function readFloat(t,e){if(1===e)return t.readFloat32();let r=new Float32Array(e);for(let i=0;i<e;i++)r[i]=t.readFloat32();return r}function readDouble(t,e){if(1===e)return t.readFloat64();let r=new Float64Array(e);for(let i=0;i<e;i++)r[i]=t.readFloat64();return r}const CLEAR_CODE=256,EOI_CODE=257,TABLE_START=258,MIN_BIT_LENGTH=9;let stringTable=[];function initializeStringTable(){if(0===stringTable.length){for(let t=0;t<256;t++)stringTable.push([t]);const t=[];for(let e=256;e<4096;e++)stringTable.push(t)}}const andTable=[511,1023,2047,4095],bitJumps=[0,0,0,0,0,0,0,0,0,511,1023,2047,4095];class LzwDecoder{constructor(t){this.nextData=0,this.nextBits=0,this.bytePointer=0,this.tableLength=TABLE_START,this.currentBitLength=MIN_BIT_LENGTH,this.stripArray=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),this.outData=new IOBuffer$4(t.byteLength),this.initializeTable()}decode(){let t=0,e=0;for(;(t=this.getNextCode())!==EOI_CODE;)if(t===CLEAR_CODE){if(this.initializeTable(),t=this.getNextCode(),t===EOI_CODE)break;this.writeString(this.stringFromCode(t)),e=t}else if(this.isInTable(t))this.writeString(this.stringFromCode(t)),this.addStringToTable(this.stringFromCode(e).concat(this.stringFromCode(t)[0])),e=t;else{const r=this.stringFromCode(e).concat(this.stringFromCode(e)[0]);this.writeString(r),this.addStringToTable(r),e=t}const r=this.outData.toArray();return new DataView(r.buffer,r.byteOffset,r.byteLength)}initializeTable(){initializeStringTable(),this.tableLength=TABLE_START,this.currentBitLength=MIN_BIT_LENGTH}writeString(t){this.outData.writeBytes(t)}stringFromCode(t){return stringTable[t]}isInTable(t){return t<this.tableLength}addStringToTable(t){if(stringTable[this.tableLength++]=t,stringTable.length>4096)throw stringTable=[],new Error("LZW decoding error. Please open an issue at https://github.com/image-js/tiff/issues/new/choose (include a test image).");this.tableLength===bitJumps[this.currentBitLength]&&this.currentBitLength++}getNextCode(){this.nextData=this.nextData<<8|255&this.stripArray[this.bytePointer++],this.nextBits+=8,this.nextBits<this.currentBitLength&&(this.nextData=this.nextData<<8|255&this.stripArray[this.bytePointer++],this.nextBits+=8);const t=this.nextData>>this.nextBits-this.currentBitLength&andTable[this.currentBitLength-9];return this.nextBits-=this.currentBitLength,this.bytePointer>this.stripArray.length?257:t}}function decompressLzw(t){return new LzwDecoder(t).decode()}const dateTimeRegex=/^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})$/;class TiffIfd extends IFD{constructor(){super("standard")}get size(){return this.width*this.height}get width(){return this.imageWidth}get height(){return this.imageLength}get components(){return this.samplesPerPixel}get date(){let t=new Date,e=dateTimeRegex.exec(this.dateTime);if(null===e)throw new Error(`invalid dateTime: ${this.dateTime}`);return t.setFullYear(Number(e[1]),Number(e[2])-1,Number(e[3])),t.setHours(Number(e[4]),Number(e[5]),Number(e[6])),t}get newSubfileType(){return this.get("NewSubfileType")}get imageWidth(){return this.get("ImageWidth")}get imageLength(){return this.get("ImageLength")}get bitsPerSample(){const t=this.get("BitsPerSample");return t&&"number"!=typeof t?t[0]:t}get alpha(){const t=this.extraSamples;return!!t&&0!==t[0]}get associatedAlpha(){const t=this.extraSamples;return!!t&&1===t[0]}get extraSamples(){return alwaysArray(this.get("ExtraSamples"))}get compression(){return this.get("Compression")||1}get type(){return this.get("PhotometricInterpretation")}get fillOrder(){return this.get("FillOrder")||1}get documentName(){return this.get("DocumentName")}get imageDescription(){return this.get("ImageDescription")}get stripOffsets(){return alwaysArray(this.get("StripOffsets"))}get orientation(){return this.get("Orientation")}get samplesPerPixel(){return this.get("SamplesPerPixel")||1}get rowsPerStrip(){return this.get("RowsPerStrip")}get stripByteCounts(){return alwaysArray(this.get("StripByteCounts"))}get minSampleValue(){return this.get("MinSampleValue")||0}get maxSampleValue(){return this.get("MaxSampleValue")||Math.pow(2,this.bitsPerSample)-1}get xResolution(){return this.get("XResolution")}get yResolution(){return this.get("YResolution")}get planarConfiguration(){return this.get("PlanarConfiguration")||1}get resolutionUnit(){return this.get("ResolutionUnit")||2}get dateTime(){return this.get("DateTime")}get predictor(){return this.get("Predictor")||1}get sampleFormat(){return this.get("SampleFormat")||1}get sMinSampleValue(){return this.get("SMinSampleValue")||this.minSampleValue}get sMaxSampleValue(){return this.get("SMaxSampleValue")||this.maxSampleValue}get palette(){const t=2**this.bitsPerSample,e=this.get("ColorMap");if(!e)return;if(e.length!==3*t)throw new Error(`ColorMap size must be ${t}`);const r=[];for(let i=0;i<t;i++)r.push([e[i],e[i+t],e[i+2*t]]);return r}}function alwaysArray(t){return"number"==typeof t?[t]:t}function decompressZlib(t){const e=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),r=inflate_1(e);return new DataView(r.buffer,r.byteOffset,r.byteLength)}const defaultOptions$c={ignoreImageData:!1,onlyFirst:!1};class TIFFDecoder extends IOBuffer$4{constructor(t){super(t),this._nextIFD=0}get isMultiPage(){let t=0;for(this.decodeHeader();this._nextIFD;)if(t++,this.decodeIFD({ignoreImageData:!0},!0),2===t)return!0;if(1===t)return!1;throw unsupported("ifdCount",t)}get pageCount(){let t=0;for(this.decodeHeader();this._nextIFD;)t++,this.decodeIFD({ignoreImageData:!0},!0);if(t>0)return t;throw unsupported("ifdCount",t)}decode(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t=Object.assign({},defaultOptions$c,t);const e=[];for(this.decodeHeader();this._nextIFD;)if(e.push(this.decodeIFD(t,!0)),t.onlyFirst)return[e[0]];return e}decodeHeader(){const t=this.readUint16();if(18761===t)this.setLittleEndian();else{if(19789!==t)throw new Error(`invalid byte order: 0x${t.toString(16)}`);this.setBigEndian()}if(42!==this.readUint16())throw new Error("not a TIFF file");this._nextIFD=this.readUint32()}decodeIFD(t,e){let r;if(this.seek(this._nextIFD),e)r=new TiffIfd;else{if(!t.kind)throw new Error("kind is missing");r=new IFD(t.kind)}const i=this.readUint16();for(let t=0;t<i;t++)this.decodeIFDEntry(r);if(!t.ignoreImageData){if(!(r instanceof TiffIfd))throw new Error("must be a tiff ifd");this.decodeImageData(r)}return this._nextIFD=this.readUint32(),r}decodeIFDEntry(t){const e=this.offset,r=this.readUint16(),i=this.readUint16(),n=this.readUint32();if(i<1||i>12)return void this.skip(4);getByteLength(i,n)>4&&this.seek(this.readUint32());const s=readData(this,i,n);if(t.fields.set(r,s),34665===r||34853===r){let e=this.offset,i="exif";34665===r?i="exif":34853===r&&(i="gps"),this._nextIFD=s,t[i]=this.decodeIFD({kind:i,ignoreImageData:!0},!1),this.offset=e}this.seek(e),this.skip(12)}decodeImageData(t){const e=t.orientation;if(e&&1!==e)throw unsupported("orientation",e);switch(t.type){case 0:case 1:case 2:case 3:this.readStripData(t);break;default:throw unsupported("image type",t.type)}if(this.applyPredictor(t),this.convertAlpha(t),0===t.type){const e=t.bitsPerSample,r=Math.pow(2,e)-1;for(let e=0;e<t.data.length;e++)t.data[e]=r-t.data[e]}}readStripData(t){const e=t.width,r=t.height,i=t.bitsPerSample,n=t.sampleFormat,s=e*r*t.samplesPerPixel,o=getDataArray(s,i,n),a=t.rowsPerStrip*e*t.samplesPerPixel,l=t.stripOffsets,h=t.stripByteCounts||guessStripByteCounts(t);let c=s,u=0;for(let e=0;e<l.length;e++){let r=new DataView(this.buffer,this.byteOffset+l[e],h[e]),s=c>a?a:c;c-=s;let f=r;switch(t.compression){case 1:break;case 5:f=decompressLzw(r);break;case 8:f=decompressZlib(r);break;case 2:throw unsupported("Compression","CCITT Group 3");case 32773:throw unsupported("Compression","PackBits");default:throw unsupported("Compression",t.compression)}u=this.fillUncompressed(i,n,o,f,u,s)}t.data=o}fillUncompressed(t,e,r,i,n,s){if(8===t)return fill8bit(r,i,n,s);if(16===t)return fill16bit(r,i,n,s,this.isLittleEndian());if(32===t&&3===e)return fillFloat32(r,i,n,s,this.isLittleEndian());throw unsupported("bitDepth",t)}applyPredictor(t){const e=t.bitsPerSample;switch(t.predictor){case 1:break;case 2:if(8===e)applyHorizontalDifferencing8Bit(t.data,t.width,t.components);else{if(16!==e)throw new Error(`Horizontal differencing is only supported for images with a bit depth of ${e}`);applyHorizontalDifferencing16Bit(t.data,t.width,t.components)}break;default:throw new Error(`invalid predictor: ${t.predictor}`)}}convertAlpha(t){if(t.alpha&&t.associatedAlpha){const{data:e,components:r,maxSampleValue:i}=t;for(let t=0;t<e.length;t+=r){const n=e[t+r-1];for(let s=0;s<r-1;s++)e[t+s]=Math.round(e[t+s]*i/n)}}}}function getDataArray(t,e,r){if(8===e)return new Uint8Array(t);if(16===e)return new Uint16Array(t);if(32===e&&3===r)return new Float32Array(t);throw unsupported("bit depth / sample format",`${e} / ${r}`)}function fill8bit(t,e,r,i){for(let n=0;n<i;n++)t[r++]=e.getUint8(n);return r}function fill16bit(t,e,r,i,n){for(let s=0;s<2*i;s+=2)t[r++]=e.getUint16(s,n);return r}function fillFloat32(t,e,r,i,n){for(let s=0;s<4*i;s+=4)t[r++]=e.getFloat32(s,n);return r}function unsupported(t,e){return new Error(`Unsupported ${t}: ${e}`)}function decodeTIFF(t,e){return new TIFFDecoder(t).decode(e)}function matchAndCrop(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{algorithm:e="matchToPrevious",ignoreBorder:r=[0,0]}=t;this.checkProcessable("matchAndCrop",{bitDepth:[8,16]});let i="matchToPrevious"===e,n=this[0],s=[];s[0]={position:[0,0],image:this[0]};let o=[0,0];for(let t=1;t<this.length;t++){let e=n.getBestMatch(this[t],{border:r});s[t]={position:[e[0]+o[0],e[1]+o[1]],image:this[t]},i&&(o[0]+=e[0],o[1]+=e[1],n=this[t])}let a=0,l=0,h=0,c=0;for(let t=0;t<s.length;t++){let e=s[t];e.position[0]>a&&(a=e.position[0]),e.position[0]<l&&(l=e.position[0]),e.position[1]>h&&(h=e.position[1]),e.position[1]<c&&(c=e.position[1])}l=0-l,c=0-c;for(let t=0;t<s.length;t++){let e=s[t];e.crop=e.image.crop({x:a-e.position[0],y:h-e.position[1],width:n.width-l-a,height:n.height-c-h})}let u=[];for(let t=0;t<s.length;t++)u[t]=s[t].crop;return new Stack(u)}function min$2(){this.checkProcessable("min",{bitDepth:[8,16]});let t=this[0].min;for(let e=1;e<this.length;e++)for(let r=0;r<t.length;r++)t[r]=Math.min(t[r],this[e].min[r]);return t}function max$2(){this.checkProcessable("min",{bitDepth:[8,16]});let t=this[0].max;for(let e=1;e<this.length;e++)for(let r=0;r<t.length;r++)t[r]=Math.max(t[r],this[e].max[r]);return t}function median$2(t){let e=t.reduce(((t,e)=>t+e));if(0===e)throw new Error("unreachable");let r,i=0,n=0,s=e/2;for(;;){if(t[i]>0){if(void 0!==r)return(r+i)/2;if(n+=t[i],n>s)return i;n===s&&(r=i)}i++}}function mean$2(t){let e=0,r=0;for(let i=0;i<t.length;i++)e+=t[i],r+=t[i]*i;return 0===e?0:r/e}function median$1(){this.checkProcessable("median",{bitDepth:[8,16]});let t=this.getHistograms({maxSlots:this[0].maxValue+1}),e=new Array(t.length);for(let r=0;r<t.length;r++){let i=t[r];e[r]=median$2(i)}return e}function histogram(t){this.checkProcessable("min",{bitDepth:[8,16]});let e=this[0].getHistogram(t);for(let r=1;r<this.length;r++){let i=this[r].getHistogram(t);for(let t=0;t<e.length;t++)e[t]+=i[t]}return e}function histograms(t){this.checkProcessable("min",{bitDepth:[8,16]});let e=this[0].getHistograms(t),r=e[0].length;for(let i=1;i<this.length;i++){let n=this[i].getHistograms(t);for(let t=0;t<e.length;t++)for(let i=0;i<r;i++)e[t][i]+=n[t][i]}return e}function averageImage(){this.checkProcessable("averageImage",{bitDepth:[8,16]});let t=new Uint32Array(this[0].data.length);for(let e=0;e<this.length;e++){let r=this[e];for(let e=0;e<this[0].data.length;e++)t[e]+=r.data[e]}let e=Image.createFrom(this[0]),r=e.data;for(let e=0;e<this[0].data.length;e++)r[e]=t[e]/this.length;return e}function maxImage(){this.checkProcessable("max",{bitDepth:[8,16]});let t=Image.createFrom(this[0]);t.data.fill(0);for(const e of this)for(let r=0;r<t.data.length;r++)t.data[r]=Math.max(e.data[r],t.data[r]);return t}function minImage(){this.checkProcessable("max",{bitDepth:[8,16]});let t=Image.createFrom(this[0]);t.data.fill(t.maxValue);for(const e of this)for(let r=0;r<t.data.length;r++)t.data[r]=Math.min(e.data[r],t.data[r]);return t}function extend$2(t){t.extendMethod("matchAndCrop",matchAndCrop),t.extendMethod("getMin",min$2),t.extendMethod("getMax",max$2),t.extendMethod("getMedian",median$1),t.extendMethod("getHistogram",histogram),t.extendMethod("getHistograms",histograms),t.extendMethod("getAverage",averageImage),t.extendMethod("getAverageImage",averageImage),t.extendMethod("getMaxImage",maxImage),t.extendMethod("getMinImage",minImage)}let computedPropertyDescriptor={configurable:!0,enumerable:!1,get:void 0};class Stack extends Array{constructor(t){if(Array.isArray(t)){super(t.length);for(let e=0;e<t.length;e++)this[e]=t[e]}else"number"==typeof t?super(t):super();this.computed=null}static load(t){return Promise.all(t.map(Image.load)).then((t=>new Stack(t)))}static extendMethod(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{inPlace:i=!1,returnThis:n=!0,partialArgs:s=[]}=r;return Stack.prototype[t]=i?function(){this.computed=null;for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];let o=e.apply(this,[...s,...r]);return n?this:o}:function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return e.apply(this,[...s,...r])},Stack}static extendProperty(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{partialArgs:i=[]}=r;return computedPropertyDescriptor.get=function(){if(null===this.computed)this.computed={};else if(hasOwn(t,this.computed))return this.computed[t];let r=e.apply(this,i);return this.computed[t]=r,r},Object.defineProperty(Stack.prototype,t,computedPropertyDescriptor),Stack}checkProcessable(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("string"!=typeof t)throw new TypeError("checkProcessable requires as first parameter the processName (a string)");if(0===this.size)throw new TypeError(`The process: ${t} can not be applied on an empty stack`);this[0].checkProcessable(t,e);for(let r=1;r<this.length;r++){if((void 0===e.sameSize||e.sameSize)&&this[0].width!==this[r].width)throw new TypeError(`The process: ${t} can not be applied if width is not identical in all images`);if((void 0===e.sameSize||e.sameSize)&&this[0].height!==this[r].height)throw new TypeError(`The process: ${t} can not be applied if height is not identical in all images`);if((void 0===e.sameAlpha||e.sameAlpha)&&this[0].alpha!==this[r].alpha)throw new TypeError(`The process: ${t} can not be applied if alpha is not identical in all images`);if((void 0===e.sameBitDepth||e.sameBitDepth)&&this[0].bitDepth!==this[r].bitDepth)throw new TypeError(`The process: ${t} can not be applied if bitDepth is not identical in all images`);if((void 0===e.sameColorModel||e.sameColorModel)&&this[0].colorModel!==this[r].colorModel)throw new TypeError(`The process: ${t} can not be applied if colorModel is not identical in all images`);if((void 0===e.sameNumberChannels||e.sameNumberChannels)&&this[0].channels!==this[r].channels)throw new TypeError(`The process: ${t} can not be applied if channels is not identical in all images`)}}}Array[Symbol.species]||(Stack.prototype.map=function(t,e){if("function"!=typeof t)throw new TypeError(`${t} is not a function`);let r=new Stack(this.length);for(let i=0;i<this.length;i++)r[i]=t.call(e,this[i],i,this);return r}),extend$2(Stack);const isDataURL=/^data:[a-z]+\/(?:[a-z]+);base64,/;function load(t,e){if("string"==typeof t)return loadURL(t,e);if(t instanceof ArrayBuffer)return Promise.resolve(loadBinary(new Uint8Array(t),void 0,e&&e.ignorePalette));if(t.buffer)return Promise.resolve(loadBinary(t,void 0,e&&e.ignorePalette));throw new Error('argument to "load" must be a string or buffer.')}function loadBinary(t,e,r){const i=imageType$1(t);if(i)switch(i.mime){case"image/png":return loadPNG(t);case"image/jpeg":return loadJPEG(t);case"image/tiff":return loadTIFF(t,r);default:return loadGeneric(n(i.mime))}return loadGeneric(n("application/octet-stream"));function n(r){return e||toBase64URL(t,r)}}function loadURL(t,e){const r=t.slice(0,64).match(isDataURL);let i;return i=null!==r?Promise.resolve(decode$3(t.slice(r[0].length))):fetchBinary(t,e),i.then((i=>loadBinary(new Uint8Array(i),r?t:void 0,e&&e.ignorePalette)))}function loadPNG(t){const e=decodePng(t);let r,i=e.channels,n=0;return 2===i||4===i?(r=i-1,n=1):r=i,e.palette?loadPNGFromPalette(e):new Image(e.width,e.height,e.data,{components:r,alpha:n,bitDepth:e.depth})}function loadPNGFromPalette(t){const e=t.width*t.height,r=t.palette[0].length,i=new Uint8Array(e*r),n=8/t.depth,s=t.depth<8?n:1,o=parseInt("1".repeat(t.depth),2),a=4===r;let l=0;for(let r=0;r<e;r++){const e=Math.floor(r/s);let h=t.data[e];t.depth<8&&(h=h>>>t.depth*(n-1-r%n)&o);const c=t.palette[h];i[l++]=c[0],i[l++]=c[1],i[l++]=c[2],a&&(i[l++]=c[3])}return new Image(t.width,t.height,i,{components:3,alpha:a,bitDepth:8})}function loadJPEG(t){const e=decode(t);let r;e.exif&&(r=getMetadata(e.exif));const i=jpegJs.decode(t,{useTArray:!0,maxMemoryUsageInMB:1024});let n=new Image(i.width,i.height,i.data,{meta:r});if(r&&r.tiff.tags.Orientation){const t=r.tiff.tags.Orientation;t>2&&(n=n.rotate({3:180,4:180,5:90,6:90,7:270,8:270}[t])),[2,4,5,7].includes(t)&&(n=n.flipX())}return n}function loadTIFF(t,e){let r=decodeTIFF(t);return 1===r.length?getImageFromIFD(r[0],e):new Stack(r.map((function(t){return getImageFromIFD(t,e)})))}function getMetadata(t){const e={tiff:{fields:t.fields,tags:t.map}};return t.exif&&(e.exif=t.exif),t.gps&&(e.gps=t.gps),e}function getImageFromIFD(t,e){if(e||3!==t.type)return new Image(t.width,t.height,t.data,{components:2===t.type?3:1,alpha:t.alpha,colorModel:2===t.type?RGB$1:GREY$1,bitDepth:t.bitsPerSample.length?t.bitsPerSample[0]:t.bitsPerSample,meta:getMetadata(t)});{const e=new Uint16Array(3*t.width*t.height),r=t.palette;let i=0;for(let n=0;n<t.data.length;n++){const s=r[t.data[n]];e[i++]=s[0],e[i++]=s[1],e[i++]=s[2]}return new Image(t.width,t.height,e,{components:3,alpha:t.alpha,colorModel:RGB$1,bitDepth:16,meta:getMetadata(t)})}}function loadGeneric(t,e){return e=e||{},new Promise((function(r,i){let n=new DOMImage;n.onload=function(){let t=n.width,i=n.height,s=createCanvas(t,i).getContext("2d");s.drawImage(n,0,0,t,i);let o=s.getImageData(0,0,t,i).data;r(new Image(t,i,o,e))},n.onerror=function(){i(new Error(`Could not load ${t}`))},n.src=t}))}const valueMethods={getValueXY(t,e,r){return this.data[(e*this.width+t)*this.channels+r]},setValueXY(t,e,r,i){return this.data[(e*this.width+t)*this.channels+r]=i,this.computed=null,this},getValue(t,e){return this.data[t*this.channels+e]},setValue(t,e,r){return this.data[t*this.channels+e]=r,this.computed=null,this},getPixelXY(t,e){return this.getPixel(e*this.width+t)},setPixelXY(t,e,r){return this.setPixel(e*this.width+t,r)},getPixel(t){const e=new Array(this.channels),r=t*this.channels;for(let t=0;t<this.channels;t++)e[t]=this.data[r+t];return e},setPixel(t,e){const r=t*this.channels;for(let t=0;t<e.length;t++)this.data[r+t]=e[t];return this.computed=null,this}};function setValueMethods(t){for(const e in valueMethods)t.prototype[e]=valueMethods[e]}function getImageParameters(t){return{width:t.width,height:t.height,components:t.components,alpha:t.alpha,colorModel:t.colorModel,bitDepth:t.bitDepth}}function getOutputImage(t,e,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{out:n}=e;if(void 0===n)return i.copy?t.clone():Image.createFrom(t,r);{if(!Image.isImage(n))throw new TypeError("out must be an Image object");const e=Object.assign(getImageParameters(t),r);for(const t in e)if(n[t]!==e[t])throw new RangeError(`cannot use out. Its ${t} must be "${e[t]}" (found "${n[t]}")`);return n}}function getOutputImageOrInPlace(t,e,r){if(void 0!==e.inPlace&&"boolean"!=typeof e.inPlace)throw new TypeError("inPlace option must be a boolean");if(e.inPlace){if(void 0!==e.out)throw new TypeError("out option must not be set if inPlace option is true");return t}return getOutputImage(t,e,null,r)}function abs(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.checkProcessable("abs",{bitDepth:[32]});const e=getOutputImageOrInPlace(this,t);return absolute(this,e),e}function absolute(t,e){for(let r=0;r<t.data.length;r++)e.data[r]=Math.abs(t.data[r])}function copyAlphaChannel(t,e){if(1===t.alpha&&1===e.alpha)for(let r=0;r<t.size;r++)e.data[r*e.channels+e.components]=t.data[r*t.channels+t.components]}function invert(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.checkProcessable("invert",{bitDepth:[1,8,16]});const e=getOutputImageOrInPlace(this,t);return 1===this.bitDepth?invertBinary(this,e):(invertColor(this,e),this!==e&&copyAlphaChannel(this,e)),e}function invertBinary(t,e){for(let r=0;r<t.data.length;r++)e.data[r]=~t.data[r]}function invertColor(t,e){for(let r=0;r<t.data.length;r+=t.channels)for(let i=0;i<t.components;i++)e.data[r+i]=t.maxValue-t.data[r+i]}function flipX(){this.checkProcessable("flipX",{bitDepth:[8,16]});for(let t=0;t<this.height;t++){let e=t*this.width*this.channels;for(let t=0;t<Math.floor(this.width/2);t++){let r=t*this.channels+e,i=(this.width-t-1)*this.channels+e;for(let t=0;t<this.channels;t++){let e=this.data[r+t];this.data[r+t]=this.data[i+t],this.data[i+t]=e}}}return this}function flipY(){this.checkProcessable("flipY",{bitDepth:[8,16]});for(let t=0;t<Math.floor(this.height/2);t++)for(let e=0;e<this.width;e++){let r=e*this.channels+t*this.width*this.channels,i=e*this.channels+(this.height-1-t)*this.channels*this.width;for(let t=0;t<this.channels;t++){let e=this.data[r+t];this.data[r+t]=this.data[i+t],this.data[i+t]=e}}return this}function blurFilter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{radius:e=1}=t;if(e<1)throw new Error("radius must be greater than 1");const r=2*e+1,i=new Array(r);for(let t=0;t<r;t++){i[t]=new Array(r);for(let e=0;e<r;e++)i[t][e]=1/(r*r)}return this.convolution(i)}var medianQuickselect_min={exports:{}};!function(t){!function(){function e(t){for(var e=0,n=t.length-1,s=void 0,o=void 0,a=void 0,l=i(e,n);;){if(n<=e)return t[l];if(n==e+1)return t[e]>t[n]&&r(t,e,n),t[l];for(t[s=i(e,n)]>t[n]&&r(t,s,n),t[e]>t[n]&&r(t,e,n),t[s]>t[e]&&r(t,s,e),r(t,s,e+1),o=e+1,a=n;;){do{o++}while(t[e]>t[o]);do{a--}while(t[a]>t[e]);if(a<o)break;r(t,o,a)}r(t,e,a),a<=l&&(e=o),a>=l&&(n=a-1)}}var r=function(t,e,r){var i;return i=[t[r],t[e]],t[e]=i[0],t[r]=i[1],i},i=function(t,e){return~~((t+e)/2)};t.exports?t.exports=e:window.median=e}()}(medianQuickselect_min);var quickSelectMedian=medianQuickselect_min.exports;function validateArrayOfChannels(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r,allowAlpha:i,defaultAlpha:n}=e;return"boolean"!=typeof i&&(i=!0),void 0===r?allChannels(t,n):validateChannels(t,r,i)}function allChannels(t,e){let r=e?t.channels:t.components,i=new Array(r);for(let t=0;t<r;t++)i[t]=t;return i}function validateChannels(t,e,r){Array.isArray(e)||(e=[e]);for(let i=0;i<e.length;i++)e[i]=validateChannel(t,e[i],r);return e}function validateChannel(t,e){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new RangeError(`validateChannel : the channel has to be >=0 and <${t.channels}`);if("string"==typeof e){switch(t.colorModel){case GREY$1:break;case RGB$1:if("rgb".includes(e))switch(e){case"r":e=0;break;case"g":e=1;break;case"b":e=2}break;case HSL:if("hsl".includes(e))switch(e){case"h":e=0;break;case"s":e=1;break;case"l":e=2}break;case HSV:if("hsv".includes(e))switch(e){case"h":e=0;break;case"s":e=1;break;case"v":e=2}break;case CMYK$1:if("cmyk".includes(e))switch(e){case"c":e=0;break;case"m":e=1;break;case"y":e=2;break;case"k":e=3}break;default:throw new Error(`Unexpected color model: ${t.colorModel}`)}if("a"===e){if(!t.alpha)throw new Error("validateChannel : the image does not contain alpha channel");e=t.components}if("string"==typeof e)throw new Error(`validateChannel : undefined channel: ${e}`)}if(e>=t.channels)throw new RangeError(`validateChannel : the channel has to be >=0 and <${t.channels}`);if(!r&&e>=t.components)throw new RangeError("validateChannel : alpha channel may not be selected");return e}function medianFilter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{radius:e=1,border:r="copy",channels:i}=t;if(this.checkProcessable("medianFilter",{bitDepth:[8,16]}),e<1)throw new Error("radius must be greater than 0");i=validateArrayOfChannels(this,i,!0);let n=e,s=e,o=Image.createFrom(this),a=(2*n+1)*(2*s+1),l=new Array(a);for(let t=0;t<i.length;t++){let e=i[t];for(let t=s;t<this.height-s;t++)for(let r=n;r<this.width-n;r++){let i=0;for(let o=-s;o<=s;o++)for(let s=-n;s<=n;s++){let n=((t+o)*this.width+r+s)*this.channels+e;l[i++]=this.data[n]}let a=(t*this.width+r)*this.channels+e;o.data[a]=quickSelectMedian(l)}}if(this.alpha&&!i.includes(this.channels))for(let t=this.components;t<this.data.length;t+=this.channels)o.data[t]=this.data[t];return o.setBorder({size:[n,s],algorithm:r}),o}function gaussianFilter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{radius:e=1,sigma:r,channels:i,border:n="copy"}=t;this.checkProcessable("gaussian",{bitDepth:[8,16]});const s=getKernel(e,r);return this.convolution([s,s],{border:n,channels:i,algorithm:"separable"})}function getKernel(t,e){const r=2*t+1,i=new Array(r),n=e||.3*(.5*(r-1)-1)+.8,s=-.5/(n*n);let o=0;for(let e=0;e<r;e++){const r=e-t,n=Math.exp(s*r*r);i[e]=n,o+=n}for(let t=0;t<r;t++)i[t]/=o;return i}const DISCRETE_LAPLACE_4=[[0,1,0],[1,-4,1],[0,1,0]],DISCRETE_LAPLACE_8=[[1,1,1],[1,-8,1],[1,1,1]],SOBEL_X=[[-1,0,1],[-2,0,2],[-1,0,1]],SOBEL_Y=[[-1,-2,-1],[0,0,0],[1,2,1]],SCHARR_X=[[3,0,-3],[10,0,-10],[3,0,-3]],SCHARR_Y=[[3,10,3],[0,0,0],[-3,-10,-3]],SECOND_DERIVATIVE=[[-1,-2,0,2,1],[-2,-4,0,4,2],[0,0,0,0,0],[1,2,0,-2,-1],[2,4,0,-4,-2]],SECOND_DERIVATIVE_INV=[[1,2,0,-2,-1],[2,4,0,-4,-2],[0,0,0,0,0],[-2,-4,0,4,2],[-1,-2,0,2,1]];var src$3={},fftlib={};!function(t){(function(){var e,r="0.3.0",i="2013-03";(e=t).toString=function(){return"version "+r+", released "+i};for(var n=0,s=null,o=null,a={init:function(t){if(0===t||0!=(t&t-1))throw new Error("init: radix-2 required");n=t,a._initArray(),a._makeBitReversalTable(),a._makeCosSinTable()},fft1d:function(t,e){a.fft(t,e,1)},ifft1d:function(t,e){var r=1/n;a.fft(t,e,-1);for(var i=0;i<n;i++)t[i]*=r,e[i]*=r},bt1d:function(t,e){a.fft(t,e,-1)},fft2d:function(t,e){for(var r=[],i=[],s=0,o=0;o<n;o++){s=o*n;for(var l=0;l<n;l++)r[l]=t[l+s],i[l]=e[l+s];a.fft1d(r,i);for(var h=0;h<n;h++)t[h+s]=r[h],e[h+s]=i[h]}for(var c=0;c<n;c++){for(var u=0;u<n;u++)s=c+u*n,r[u]=t[s],i[u]=e[s];a.fft1d(r,i);for(var f=0;f<n;f++)t[s=c+f*n]=r[f],e[s]=i[f]}},ifft2d:function(t,e){for(var r=[],i=[],s=0,o=0;o<n;o++){s=o*n;for(var l=0;l<n;l++)r[l]=t[l+s],i[l]=e[l+s];a.ifft1d(r,i);for(var h=0;h<n;h++)t[h+s]=r[h],e[h+s]=i[h]}for(var c=0;c<n;c++){for(var u=0;u<n;u++)s=c+u*n,r[u]=t[s],i[u]=e[s];a.ifft1d(r,i);for(var f=0;f<n;f++)t[s=c+f*n]=r[f],e[s]=i[f]}},fft:function(t,e,r){for(var i,a,l,h,c,u,f,d,m,g=n>>2,p=0;p<n;p++)p<(h=s[p])&&(c=t[p],t[p]=t[h],t[h]=c,c=e[p],e[p]=e[h],e[h]=c);for(var w=1;w<n;w<<=1){a=0,i=n/(w<<1);for(var b=0;b<w;b++){u=o[a+g],f=r*o[a];for(var _=b;_<n;_+=w<<1)d=u*t[l=_+w]+f*e[l],m=u*e[l]-f*t[l],t[l]=t[_]-d,t[_]+=d,e[l]=e[_]-m,e[_]+=m;a+=i}}},_initArray:function(){s="undefined"!=typeof Uint32Array?new Uint32Array(n):[],o="undefined"!=typeof Float64Array?new Float64Array(1.25*n):[]},_paddingZero:function(){},_makeBitReversalTable:function(){var t=0,e=0,r=0;for(s[0]=0;++t<n;){for(r=n>>1;r<=e;)e-=r,r>>=1;e+=r,s[t]=e}},_makeCosSinTable:function(){var t=n>>1,e=n>>2,r=n>>3,i=t+e,s=Math.sin(Math.PI/n),a=2*s*s,l=Math.sqrt(a*(2-a)),h=o[e]=1,c=o[0]=0;s=2*a;for(var u=1;u<r;u++)a+=s*(h-=a),l-=s*(c+=l),o[u]=c,o[e-u]=h;0!==r&&(o[r]=Math.sqrt(.5));for(var f=0;f<e;f++)o[t-f]=o[f];for(var d=0;d<i;d++)o[d+t]=-o[d]}},l=["init","fft1d","ifft1d","fft2d","ifft2d"],h=0;h<l.length;h++)e[l[h]]=a[l[h]];return e.bt=a.bt1d,e.fft=a.fft1d,e.ifft=a.ifft1d,e}).call(commonjsGlobal)}(fftlib);var FFT=fftlib,FFTUtils$1={DEBUG:!1,ifft2DArray:function(t,e,r){var i=new Array(e*r),n=e/2,s=2*(r-1);FFT.init(n);for(var o={re:new Array(n),im:new Array(n)},a=0;a<r;a++){for(var l=n-1;l>=0;l--)o.re[l]=t[2*l*r+a],o.im[l]=t[(2*l+1)*r+a];FFT.bt(o.re,o.im);for(l=n-1;l>=0;l--)i[2*l*r+a]=o.re[l],i[(2*l+1)*r+a]=o.im[l]}var h=new Array(n*s);FFT.init(s);var c={re:new Array(s),im:new Array(s)},u=s*n;for(l=0;l<e;l+=2){c.re[0]=i[l*r],c.im[0]=i[(l+1)*r];for(a=1;a<r;a++)c.re[a]=i[l*r+a],c.im[a]=i[(l+1)*r+a],c.re[s-a]=i[l*r+a],c.im[s-a]=-i[(l+1)*r+a];FFT.bt(c.re,c.im);var f=l/2*s;for(a=s-1;a>=0;a--)h[f+a]=c.re[a]/u}return h},fft2DArray:function(t,e,r,i){Object.assign({},{inplace:!0});var n=r/2+1,s=2*e,o=new Array(s*n);FFT.init(r);for(var a,l,h,c,u,f={re:new Array(r),im:new Array(r)},d={re:new Array(r),im:new Array(r)},m={re:new Array(r),im:new Array(r)},g=0;g<e/2;g++){a=2*g*r,f.re=t.slice(a,a+r),a=(2*g+1)*r,f.im=t.slice(a,a+r),FFT.fft1d(f.re,f.im),this.reconstructTwoRealFFT(f,d,m),l=4*g*n,h=(4*g+1)*n,c=(4*g+2)*n,u=(4*g+3)*n;for(var p=n-1;p>=0;p--)o[l+p]=d.re[p],o[h+p]=d.im[p],o[c+p]=m.re[p],o[u+p]=m.im[p]}d=null,m=null;var w=new Array(s*n);FFT.init(e);for(var b={re:new Array(e),im:new Array(e)},_=n-1;_>=0;_--){for(g=e-1;g>=0;g--)b.re[g]=o[2*g*n+_],b.im[g]=o[(2*g+1)*n+_],isNaN(b.re[g])&&(b.re[g]=0),isNaN(b.im[g])&&(b.im[g]=0);FFT.fft1d(b.re,b.im);for(g=e-1;g>=0;g--)w[2*g*n+_]=b.re[g],w[(2*g+1)*n+_]=b.im[g]}return w},reconstructTwoRealFFT:function(t,e,r){var i,n,s,o,a,l=t.re.length;e.re[0]=t.re[0],e.im[0]=0,r.re[0]=t.im[0],r.im[0]=0;for(var h=l/2;h>0;h--)a=l-h,i=.5*(t.re[h]-t.re[a]),n=.5*(t.re[h]+t.re[a]),s=.5*(t.im[h]-t.im[a]),o=.5*(t.im[h]+t.im[a]),e.re[h]=n,e.im[h]=s,e.re[a]=n,e.im[a]=-s,r.re[h]=o,r.im[h]=-i,r.re[a]=o,r.im[a]=i},convolute2DI:function(t,e,r,i){for(var n,s,o=0;o<r/2;o++)for(var a=0;a<i;a++)n=t[2*o*i+a]*e[2*o*i+a]-t[(2*o+1)*i+a]*e[(2*o+1)*i+a],s=t[2*o*i+a]*e[(2*o+1)*i+a]+t[(2*o+1)*i+a]*e[2*o*i+a],t[2*o*i+a]=n,t[(2*o+1)*i+a]=s},convolute:function(t,e,r,i,n){for(var s=new Array(i*r),o=0;o<r*i;o++)s[o]=t[o];s=this.fft2DArray(s,r,i);var a,l=e.length,h=e[0].length,c=new Array(i*r);for(o=0;o<i*r;o++)c[o]=0;for(var u=Math.floor((l-1)/2),f=Math.floor((h-1)/2),d=0;d<l;d++){a=(d-u+r)%r;for(var m=0;m<h;m++)c[a*i+(m-f+i)%i]=e[d][m]}c=this.fft2DArray(c,r,i);var g=2*r,p=i/2+1;return this.convolute2DI(s,c,g,p),this.ifft2DArray(s,g,p)},toRadix2:function(t,e,r){var i,n,s,o,a=r,l=e;if(0===r||0!=(r&r-1)){for(a=0;r>>++a!=0;);a=1<<a}if(0===e||0!=(e&e-1)){for(l=0;e>>++l!=0;);l=1<<l}if(l==e&&a==r)return{data:t,rows:e,cols:r};var h=new Array(l*a),c=Math.floor((l-e)/2)-e,u=Math.floor((a-r)/2)-r;for(i=0;i<l;i++)for(s=i*a,o=(i-c)%e*r,n=0;n<a;n++)h[s+n]=t[o+(n-u)%r];return{data:h,rows:l,cols:a}},crop:function(t,e,r,i,n,s){if(e==i&&r==n)return t;Object.assign({},s);var o,a,l,h,c=new Array(n*i),u=Math.floor((e-i)/2),f=Math.floor((r-n)/2);for(l=0;l<i;l++)for(o=l*n,a=(l+u)*r,h=0;h<n;h++)c[o+h]=t[a+(h+f)];return c}},FFTUtils_1=FFTUtils$1;src$3.FFTUtils=FFTUtils_1,src$3.FFT=fftlib;var FFTUtils=src$3.FFTUtils;function convolutionFFT(t,e,r){var i,n,s=matrix2Array(t),o=s.data,a=Object.assign({normalize:!1,divisor:1,rows:s.rows,cols:s.cols},r);if(!a.rows||!a.cols)throw new Error("Invalid number of rows or columns "+i+" "+n);i=a.rows,n=a.cols;var l,h,c=a.divisor,u=e.length,f=e[0].length;if(a.normalize)for(c=0,l=0;l<u;l++)for(h=0;h<f;h++)c+=e[l][h];if(0===c)throw new RangeError("convolution: The divisor is equal to zero");var d=FFTUtils.toRadix2(o,i,n),m=FFTUtils.convolute(d.data,e,d.rows,d.cols);if(m=FFTUtils.crop(m,d.rows,d.cols,i,n),0!=c&&1!=c)for(l=0;l<m.length;l++)m[l]/=c;return m}function convolutionDirect(t,e,r){var i,n,s=matrix2Array(t),o=s.data,a=Object.assign({normalize:!1,divisor:1,rows:s.rows,cols:s.cols},r);if(!a.rows||!a.cols)throw new Error("Invalid number of rows or columns "+i+" "+n);i=a.rows,n=a.cols;var l,h,c,u,f,d,m=a.divisor,g=e.length,p=e[0].length;if(a.normalize)for(m=0,l=0;l<g;l++)for(h=0;h<p;h++)m+=e[l][h];if(0===m)throw new RangeError("convolution: The divisor is equal to zero");var w=new Array(i*n),b=Math.floor(g/2),_=Math.floor(p/2);for(u=0;u<i;u++)for(c=0;c<n;c++){for(f=0,h=0;h<g;h++)for(l=0;l<p;l++)d=e[g-h-1][p-l-1],f+=o[(u+h-b+i)%i*n+(c+l-_+n)%n]*d;w[u*n+c]=f/m}return w}function LoG(t,e,r){var i=1e3;r&&r.factor&&(i=r.factor);var n,s,o,a,l=new Array(e);i*=-1;var h=(e-1)/2,c=2*t*t;for(n=0;n<e;n++)for(l[n]=new Array(e),a=(n-h)*(n-h),s=0;s<e;s++)o=-((s-h)*(s-h)+a)/c,l[n][s]=Math.round(i*(1+o)*Math.exp(o));return l}function matrix2Array(t){var e,r,i=t;if("number"!=typeof t[0]){e=t.length,r=t[0].length,i=new Array(e*r);for(var n=0;n<e;n++)for(var s=0;s<r;s++)i[n*r+s]=t[n][s]}else{var o=Math.sqrt(t.length);Number.isInteger(o)&&(e=o,r=o)}return{data:i,rows:e,cols:r}}var src$2={fft:convolutionFFT,direct:convolutionDirect,kernelFactory:{LoG:LoG},matrix2Array:matrix2Array},_isFinite=Number.isFinite||function(t){return!("number"!=typeof t||t!=t||t===1/0||t===-1/0)},isFinite$1=_isFinite,isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite$1(t)&&Math.floor(t)===t},isInteger$1=isInteger;function validateKernel(t){let e,r;if(!Array.isArray(t))throw new Error(`validateKernel: Invalid Kernel: ${t}`);if(Array.isArray(t[0])){if(0==(1&t.length)||0==(1&t[0].length))throw new RangeError("validateKernel: Kernel rows and columns should be odd numbers");e=Math.floor(t.length/2),r=Math.floor(t[0].length/2)}else{let i=Math.sqrt(t.length);if(!isInteger$1(i))throw new RangeError("validateKernel: Kernel array should be a square");r=e=Math.floor(Math.sqrt(t.length)/2);let n=new Array(i);for(let e=0;e<i;e++){n[e]=new Array(i);for(let r=0;r<i;r++)n[e][r]=t[e*i+r]}t=n}return{kernel:t,kWidth:r,kHeight:e}}function clamp(t,e){return Math.round(Math.min(Math.max(t,0),e.maxValue))}function directConvolution(t,e,r){if(void 0===r){const i=t.length+e.length-1;r=new Array(i)}fill(r);for(var i=0;i<t.length;i++)for(var n=0;n<e.length;n++)r[i+n]+=t[i]*e[n];return r}function fill(t){for(var e=0;e<t.length;e++)t[e]=0}function convolutionSeparable(t,e,r,i){const n=new Array(t.length);let s,o,a,l;l=e[1],a=(l.length-1)/2,o=new Array(r+l.length-1),s=new Array(r);for(let e=0;e<i;e++){for(let i=0;i<r;i++)s[i]=t[e*r+i];directConvolution(s,l,o);for(let t=0;t<r;t++)n[e*r+t]=o[a+t]}l=e[0],a=(l.length-1)/2,o=new Array(i+l.length-1),s=new Array(i);for(let t=0;t<r;t++){for(let e=0;e<i;e++)s[e]=n[e*r+t];directConvolution(s,l,o);for(let e=0;e<i;e++)n[e*r+t]=o[a+e]}return n}const toString$1=Object.prototype.toString;function isAnyArray(t){return toString$1.call(t).endsWith("Array]")}function max$1(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!isAnyArray(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,i=void 0===r?0:r,n=e.toIndex,s=void 0===n?t.length:n;if(i<0||i>=t.length||!Number.isInteger(i))throw new Error("fromIndex must be a positive integer smaller than length");if(s<=i||s>t.length||!Number.isInteger(s))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=t[i],a=i+1;a<s;a++)t[a]>o&&(o=t[a]);return o}function min$1(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!isAnyArray(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,i=void 0===r?0:r,n=e.toIndex,s=void 0===n?t.length:n;if(i<0||i>=t.length||!Number.isInteger(i))throw new Error("fromIndex must be a positive integer smaller than length");if(s<=i||s>t.length||!Number.isInteger(s))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=t[i],a=i+1;a<s;a++)t[a]<o&&(o=t[a]);return o}function rescale(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!isAnyArray(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!isAnyArray(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var i=min$1(t),n=max$1(t);if(i===n)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var s=r.min,o=void 0===s?r.autoMinMax?i:0:s,a=r.max,l=void 0===a?r.autoMinMax?n:1:a;if(o>=l)throw new RangeError("min option must be smaller than max option");for(var h=(l-o)/(n-i),c=0;c<t.length;c++)e[c]=(t[c]-i)*h+o;return e}const indent=" ".repeat(2),indentData=" ".repeat(4);function inspectMatrix(){return inspectMatrixWithOptions(this)}function inspectMatrixWithOptions(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{maxRows:r=15,maxColumns:i=10,maxNumSize:n=8}=e;return`${t.constructor.name} {\n${indent}[\n${indentData}${inspectData(t,r,i,n)}\n${indent}]\n${indent}rows: ${t.rows}\n${indent}columns: ${t.columns}\n}`}function inspectData(t,e,r,i){const{rows:n,columns:s}=t,o=Math.min(n,e),a=Math.min(s,r),l=[];for(let e=0;e<o;e++){let r=[];for(let n=0;n<a;n++)r.push(formatNumber(t.get(e,n),i));l.push(`${r.join(" ")}`)}return a!==s&&(l[l.length-1]+=` ... ${s-r} more columns`),o!==n&&l.push(`... ${n-e} more rows`),l.join(`\n${indentData}`)}function formatNumber(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const i=t.toPrecision(e-2);if(i.length<=e)return i;const n=t.toExponential(e-2),s=n.indexOf("e"),o=n.slice(s);return n.slice(0,e-o.length)+o}function installMathOperations(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}function checkRowIndex(t,e,r){let i=r?t.rows:t.rows-1;if(e<0||e>i)throw new RangeError("Row index out of range")}function checkColumnIndex(t,e,r){let i=r?t.columns:t.columns-1;if(e<0||e>i)throw new RangeError("Column index out of range")}function checkRowVector(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function checkColumnVector(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function checkRowIndices(t,e){if(!isAnyArray(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}function checkColumnIndices(t,e){if(!isAnyArray(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}function checkRange(t,e,r,i,n){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(checkNumber("startRow",e),checkNumber("endRow",r),checkNumber("startColumn",i),checkNumber("endColumn",n),e>r||i>n||e<0||e>=t.rows||r<0||r>=t.rows||i<0||i>=t.columns||n<0||n>=t.columns)throw new RangeError("Submatrix indices are out of range")}function newArray$2(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=[];for(let i=0;i<t;i++)r.push(e);return r}function checkNumber(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function checkNonEmpty(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}function sumByRow(t){let e=newArray$2(t.rows);for(let r=0;r<t.rows;++r)for(let i=0;i<t.columns;++i)e[r]+=t.get(r,i);return e}function sumByColumn(t){let e=newArray$2(t.columns);for(let r=0;r<t.rows;++r)for(let i=0;i<t.columns;++i)e[i]+=t.get(r,i);return e}function sumAll(t){let e=0;for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)e+=t.get(r,i);return e}function productByRow(t){let e=newArray$2(t.rows,1);for(let r=0;r<t.rows;++r)for(let i=0;i<t.columns;++i)e[r]*=t.get(r,i);return e}function productByColumn(t){let e=newArray$2(t.columns,1);for(let r=0;r<t.rows;++r)for(let i=0;i<t.columns;++i)e[i]*=t.get(r,i);return e}function productAll(t){let e=1;for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)e*=t.get(r,i);return e}function varianceByRow(t,e,r){const i=t.rows,n=t.columns,s=[];for(let o=0;o<i;o++){let i=0,a=0,l=0;for(let e=0;e<n;e++)l=t.get(o,e)-r[o],i+=l,a+=l*l;e?s.push((a-i*i/n)/(n-1)):s.push((a-i*i/n)/n)}return s}function varianceByColumn(t,e,r){const i=t.rows,n=t.columns,s=[];for(let o=0;o<n;o++){let n=0,a=0,l=0;for(let e=0;e<i;e++)l=t.get(e,o)-r[o],n+=l,a+=l*l;e?s.push((a-n*n/i)/(i-1)):s.push((a-n*n/i)/i)}return s}function varianceAll(t,e,r){const i=t.rows,n=t.columns,s=i*n;let o=0,a=0,l=0;for(let e=0;e<i;e++)for(let i=0;i<n;i++)l=t.get(e,i)-r,o+=l,a+=l*l;return e?(a-o*o/s)/(s-1):(a-o*o/s)/s}function centerByRow(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)-e[r])}function centerByColumn(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)-e[i])}function centerAll(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)-e)}function getScaleByRow(t){const e=[];for(let r=0;r<t.rows;r++){let i=0;for(let e=0;e<t.columns;e++)i+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(i))}return e}function scaleByRow(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)/e[r])}function getScaleByColumn(t){const e=[];for(let r=0;r<t.columns;r++){let i=0;for(let e=0;e<t.rows;e++)i+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(i))}return e}function scaleByColumn(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)/e[i])}function getScaleAll(t){const e=t.size-1;let r=0;for(let i=0;i<t.columns;i++)for(let n=0;n<t.rows;n++)r+=Math.pow(t.get(n,i),2)/e;return Math.sqrt(r)}function scaleAll(t,e){for(let r=0;r<t.rows;r++)for(let i=0;i<t.columns;i++)t.set(r,i,t.get(r,i)/e)}class AbstractMatrix{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let i=new Matrix$2(t,e);for(let n=0;n<t;n++)for(let t=0;t<e;t++)i.set(n,t,r[n*e+t]);return i}static rowVector(t){let e=new Matrix$2(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new Matrix$2(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new Matrix$2(t,e)}static ones(t,e){return new Matrix$2(t,e).fill(1)}static rand(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("object"!=typeof r)throw new TypeError("options must be an object");const{random:i=Math.random}=r;let n=new Matrix$2(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)n.set(r,t,i());return n}static randInt(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("object"!=typeof r)throw new TypeError("options must be an object");const{min:i=0,max:n=1e3,random:s=Math.random}=r;if(!Number.isInteger(i))throw new TypeError("min must be an integer");if(!Number.isInteger(n))throw new TypeError("max must be an integer");if(i>=n)throw new RangeError("min must be smaller than max");let o=n-i,a=new Matrix$2(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=i+Math.round(s()*o);a.set(r,t,e)}return a}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let i=Math.min(t,e),n=this.zeros(t,e);for(let t=0;t<i;t++)n.set(t,t,r);return n}static diag(t,e,r){let i=t.length;void 0===e&&(e=i),void 0===r&&(r=e);let n=Math.min(i,e,r),s=this.zeros(e,r);for(let e=0;e<n;e++)s.set(e,e,t[e]);return s}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,i=t.columns,n=new Matrix$2(r,i);for(let s=0;s<r;s++)for(let r=0;r<i;r++)n.set(s,r,Math.min(t.get(s,r),e.get(s,r)));return n}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,i=t.columns,n=new this(r,i);for(let s=0;s<r;s++)for(let r=0;r<i;r++)n.set(s,r,Math.max(t.get(s,r),e.get(s,r)));return n}static checkMatrix(t){return AbstractMatrix.isMatrix(t)?t:new Matrix$2(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,i=!0,n=!1;for(;t<this.rows&&i;){for(e=0,n=!1;e<this.columns&&!1===n;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(n=!0,r=e):(i=!1,n=!0);t++}return i}isReducedEchelonForm(){let t=0,e=0,r=-1,i=!0,n=!1;for(;t<this.rows&&i;){for(e=0,n=!1;e<this.columns&&!1===n;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(n=!0,r=e):(i=!1,n=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(i=!1);t++}return i}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let i=e;for(let n=e;n<t.rows;n++)t.get(n,r)>t.get(i,r)&&(i=n);if(0===t.get(i,r))r++;else{t.swapRows(e,i);let n=t.get(e,r);for(let i=r;i<t.columns;i++)t.set(e,i,t.get(e,i)/n);for(let i=e+1;i<t.rows;i++){let n=t.get(i,r)/t.get(e,r);t.set(i,r,0);for(let s=r+1;s<t.columns;s++)t.set(i,s,t.get(i,s)-t.get(e,s)*n)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,i=r-1;for(;i>=0;)if(0===t.maxRow(i))i--;else{let n=0,s=!1;for(;n<r&&!1===s;)1===t.get(i,n)?s=!0:n++;for(let r=0;r<i;r++){let s=t.get(r,n);for(let o=n;o<e;o++){let e=t.get(r,o)-s*t.get(i,o);t.set(r,o,e)}}i--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let i=new Matrix$2(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)i.setSubMatrix(this,this.rows*t,this.columns*e);return i}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){checkRowIndex(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return Matrix$2.rowVector(this.getRow(t))}setRow(t,e){checkRowIndex(this,t),e=checkRowVector(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){checkRowIndex(this,t),checkRowIndex(this,e);for(let r=0;r<this.columns;r++){let i=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,i)}return this}getColumn(t){checkColumnIndex(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return Matrix$2.columnVector(this.getColumn(t))}setColumn(t,e){checkColumnIndex(this,t),e=checkColumnVector(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){checkColumnIndex(this,t),checkColumnIndex(this,e);for(let r=0;r<this.rows;r++){let i=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,i)}return this}addRowVector(t){t=checkRowVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=checkRowVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=checkRowVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=checkRowVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=checkColumnVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=checkColumnVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=checkColumnVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=checkColumnVector(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){checkRowIndex(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){checkColumnIndex(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){checkNonEmpty(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let i=0;i<this.columns;i++)this.get(r,i)>t&&(t=this.get(r,i),e[0]=r,e[1]=i);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){checkNonEmpty(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let i=0;i<this.columns;i++)this.get(r,i)<t&&(t=this.get(r,i),e[0]=r,e[1]=i);return e}maxRow(t){if(checkRowIndex(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){checkRowIndex(this,t),checkNonEmpty(this);let e=this.get(t,0),r=[t,0];for(let i=1;i<this.columns;i++)this.get(t,i)>e&&(e=this.get(t,i),r[1]=i);return r}minRow(t){if(checkRowIndex(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){checkRowIndex(this,t),checkNonEmpty(this);let e=this.get(t,0),r=[t,0];for(let i=1;i<this.columns;i++)this.get(t,i)<e&&(e=this.get(t,i),r[1]=i);return r}maxColumn(t){if(checkColumnIndex(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){checkColumnIndex(this,t),checkNonEmpty(this);let e=this.get(0,t),r=[0,t];for(let i=1;i<this.rows;i++)this.get(i,t)>e&&(e=this.get(i,t),r[0]=i);return r}minColumn(t){if(checkColumnIndex(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){checkColumnIndex(this,t),checkNonEmpty(this);let e=this.get(0,t),r=[0,t];for(let i=1;i<this.rows;i++)this.get(i,t)<e&&(e=this.get(i,t),r[0]=i);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"frobenius",e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){AbstractMatrix.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let i=0;i<e.length;i++)r+=e[i]*t[i];return r}mmul(t){t=Matrix$2.checkMatrix(t);let e=this.rows,r=this.columns,i=t.columns,n=new Matrix$2(e,i),s=new Float64Array(r);for(let o=0;o<i;o++){for(let e=0;e<r;e++)s[e]=t.get(e,o);for(let t=0;t<e;t++){let e=0;for(let i=0;i<r;i++)e+=this.get(t,i)*s[i];n.set(t,o,e)}}return n}strassen2x2(t){t=Matrix$2.checkMatrix(t);let e=new Matrix$2(2,2);const r=this.get(0,0),i=t.get(0,0),n=this.get(0,1),s=t.get(0,1),o=this.get(1,0),a=t.get(1,0),l=this.get(1,1),h=t.get(1,1),c=(r+l)*(i+h),u=(o+l)*i,f=r*(s-h),d=l*(a-i),m=(r+n)*h,g=c+d-m+(n-l)*(a+h),p=f+m,w=u+d,b=c-u+f+(o-r)*(i+s);return e.set(0,0,g),e.set(0,1,p),e.set(1,0,w),e.set(1,1,b),e}strassen3x3(t){t=Matrix$2.checkMatrix(t);let e=new Matrix$2(3,3);const r=this.get(0,0),i=this.get(0,1),n=this.get(0,2),s=this.get(1,0),o=this.get(1,1),a=this.get(1,2),l=this.get(2,0),h=this.get(2,1),c=this.get(2,2),u=t.get(0,0),f=t.get(0,1),d=t.get(0,2),m=t.get(1,0),g=t.get(1,1),p=t.get(1,2),w=t.get(2,0),b=t.get(2,1),_=t.get(2,2),y=(r-s)*(-f+g),M=(-r+s+o)*(u-f+g),x=(s+o)*(-u+f),v=r*u,E=(-r+l+h)*(u-d+p),A=(-r+l)*(d-p),k=(l+h)*(-u+d),S=(-n+h+c)*(g+w-b),I=(n-c)*(g-b),D=n*w,R=(h+c)*(-w+b),T=(-n+o+a)*(p+w-_),$=(n-a)*(p-_),C=(o+a)*(-w+_),B=v+D+i*m,P=(r+i+n-s-o-h-c)*g+M+x+v+S+D+R,O=v+E+k+(r+i+n-o-a-l-h)*p+D+T+C,N=y+o*(-u+f+m-g-p-w+_)+M+v+D+T+$,L=y+M+x+v+a*b,F=D+T+$+C+s*d,U=v+E+A+h*(-u+d+m-g-p-w+b)+S+I+D,Y=S+I+D+R+l*f,H=v+E+A+k+c*_;return e.set(0,0,B),e.set(0,1,P),e.set(0,2,O),e.set(1,0,N),e.set(1,1,L),e.set(1,2,F),e.set(2,0,U),e.set(2,1,Y),e.set(2,2,H),e}mmulStrassen(t){t=Matrix$2.checkMatrix(t);let e=this.clone(),r=e.rows,i=e.columns,n=t.rows,s=t.columns;function o(t,e,r){let i=t.rows,n=t.columns;if(i===e&&n===r)return t;{let i=AbstractMatrix.zeros(e,r);return i=i.setSubMatrix(t,0,0),i}}i!==n&&console.warn(`Multiplying ${r} x ${i} and ${n} x ${s} matrix: dimensions do not match.`);let a=Math.max(r,n),l=Math.max(i,s);return e=o(e,a,l),function t(e,r,i,n){if(i<=512||n<=512)return e.mmul(r);i%2==1&&n%2==1?(e=o(e,i+1,n+1),r=o(r,i+1,n+1)):i%2==1?(e=o(e,i+1,n),r=o(r,i+1,n)):n%2==1&&(e=o(e,i,n+1),r=o(r,i,n+1));let s=parseInt(e.rows/2,10),a=parseInt(e.columns/2,10),l=e.subMatrix(0,s-1,0,a-1),h=r.subMatrix(0,s-1,0,a-1),c=e.subMatrix(0,s-1,a,e.columns-1),u=r.subMatrix(0,s-1,a,r.columns-1),f=e.subMatrix(s,e.rows-1,0,a-1),d=r.subMatrix(s,r.rows-1,0,a-1),m=e.subMatrix(s,e.rows-1,a,e.columns-1),g=r.subMatrix(s,r.rows-1,a,r.columns-1),p=t(AbstractMatrix.add(l,m),AbstractMatrix.add(h,g),s,a),w=t(AbstractMatrix.add(f,m),h,s,a),b=t(l,AbstractMatrix.sub(u,g),s,a),_=t(m,AbstractMatrix.sub(d,h),s,a),y=t(AbstractMatrix.add(l,c),g,s,a),M=t(AbstractMatrix.sub(f,l),AbstractMatrix.add(h,u),s,a),x=t(AbstractMatrix.sub(c,m),AbstractMatrix.add(d,g),s,a),v=AbstractMatrix.add(p,_);v.sub(y),v.add(x);let E=AbstractMatrix.add(b,y),A=AbstractMatrix.add(w,_),k=AbstractMatrix.sub(p,w);k.add(b),k.add(M);let S=AbstractMatrix.zeros(2*v.rows,2*v.columns);return S=S.setSubMatrix(v,0,0),S=S.setSubMatrix(E,v.rows,0),S=S.setSubMatrix(A,0,v.columns),S=S.setSubMatrix(k,v.rows,v.columns),S.subMatrix(0,i-1,0,n-1)}(e,t=o(t,a,l),a,l)}scaleRows(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let i=new Matrix$2(this.rows,this.columns);for(let t=0;t<this.rows;t++){const n=this.getRow(t);n.length>0&&rescale(n,{min:e,max:r,output:n}),i.setRow(t,n)}return i}scaleColumns(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let i=new Matrix$2(this.rows,this.columns);for(let t=0;t<this.columns;t++){const n=this.getColumn(t);n.length&&rescale(n,{min:e,max:r,output:n}),i.setColumn(t,n)}return i}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),i=this.get(e,this.columns-1-r);this.set(e,r,i),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),i=this.get(this.rows-1-r,e);this.set(r,e,i),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=Matrix$2.checkMatrix(t);let e=this.rows,r=this.columns,i=t.rows,n=t.columns,s=new Matrix$2(e*i,r*n);for(let o=0;o<e;o++)for(let e=0;e<r;e++)for(let r=0;r<i;r++)for(let a=0;a<n;a++)s.set(i*o+r,n*e+a,this.get(o,e)*t.get(r,a));return s}kroneckerSum(t){if(t=Matrix$2.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,i=this.kroneckerProduct(Matrix$2.eye(r,r)),n=Matrix$2.eye(e,e).kroneckerProduct(t);return i.add(n)}transpose(){let t=new Matrix$2(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:compareNumbers;for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:compareNumbers;for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,i){checkRange(this,t,e,r,i);let n=new Matrix$2(e-t+1,i-r+1);for(let s=t;s<=e;s++)for(let e=r;e<=i;e++)n.set(s-t,e-r,this.get(s,e));return n}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let i=new Matrix$2(t.length,r-e+1);for(let n=0;n<t.length;n++)for(let s=e;s<=r;s++){if(t[n]<0||t[n]>=this.rows)throw new RangeError(`Row index out of range: ${t[n]}`);i.set(n,s-e,this.get(t[n],s))}return i}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let i=new Matrix$2(r-e+1,t.length);for(let n=0;n<t.length;n++)for(let s=e;s<=r;s++){if(t[n]<0||t[n]>=this.columns)throw new RangeError(`Column index out of range: ${t[n]}`);i.set(s-e,n,this.get(s,t[n]))}return i}setSubMatrix(t,e,r){if((t=Matrix$2.checkMatrix(t)).isEmpty())return this;checkRange(this,e,e+t.rows-1,r,r+t.columns-1);for(let i=0;i<t.rows;i++)for(let n=0;n<t.columns;n++)this.set(e+i,r+n,t.get(i,n));return this}selection(t,e){checkRowIndices(this,t),checkColumnIndices(this,e);let r=new Matrix$2(t.length,e.length);for(let i=0;i<t.length;i++){let n=t[i];for(let t=0;t<e.length;t++){let s=e[t];r.set(i,t,this.get(n,s))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new Matrix$2(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return sumByRow(this);case"column":return sumByColumn(this);case void 0:return sumAll(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return productByRow(this);case"column":return productByColumn(this);case void 0:return productAll(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:i=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!isAnyArray(i))throw new TypeError("mean must be an array");return varianceByRow(this,r,i);case"column":if(!isAnyArray(i))throw new TypeError("mean must be an array");return varianceByColumn(this,r,i);case void 0:if("number"!=typeof i)throw new TypeError("mean must be a number");return varianceAll(this,r,i);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!isAnyArray(r))throw new TypeError("center must be an array");return centerByRow(this,r),this;case"column":if(!isAnyArray(r))throw new TypeError("center must be an array");return centerByColumn(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return centerAll(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=getScaleByRow(this);else if(!isAnyArray(r))throw new TypeError("scale must be an array");return scaleByRow(this,r),this;case"column":if(void 0===r)r=getScaleByColumn(this);else if(!isAnyArray(r))throw new TypeError("scale must be an array");return scaleByColumn(this,r),this;case void 0:if(void 0===r)r=getScaleAll(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return scaleAll(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return inspectMatrixWithOptions(this,t)}}function compareNumbers(t,e){return t-e}function isArrayOfNumbers(t){return t.every((t=>"number"==typeof t))}AbstractMatrix.prototype.klass="Matrix","undefined"!=typeof Symbol&&(AbstractMatrix.prototype[Symbol.for("nodejs.util.inspect.custom")]=inspectMatrix),AbstractMatrix.random=AbstractMatrix.rand,AbstractMatrix.randomInt=AbstractMatrix.randInt,AbstractMatrix.diagonal=AbstractMatrix.diag,AbstractMatrix.prototype.diagonal=AbstractMatrix.prototype.diag,AbstractMatrix.identity=AbstractMatrix.eye,AbstractMatrix.prototype.negate=AbstractMatrix.prototype.neg,AbstractMatrix.prototype.tensorProduct=AbstractMatrix.prototype.kroneckerProduct;class Matrix$2 extends AbstractMatrix{constructor(t,e){if(super(),Matrix$2.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!isAnyArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let i=0;i<t;i++){if(r[i].length!==e)throw new RangeError("Inconsistent array dimensions");if(!isArrayOfNumbers(r[i]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(r[i]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return checkRowIndex(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),checkRowIndex(this,t,!0),e=Float64Array.from(checkRowVector(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){checkColumnIndex(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let i=0;i<t;i++)r[i]=this.data[e][i];for(let i=t+1;i<this.columns;i++)r[i-1]=this.data[e][i];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),checkColumnIndex(this,t,!0),e=checkColumnVector(this,e);for(let r=0;r<this.rows;r++){const i=new Float64Array(this.columns+1);let n=0;for(;n<t;n++)i[n]=this.data[r][n];for(i[n++]=e[r];n<this.columns+1;n++)i[n]=this.data[r][n-1];this.data[r]=i}return this.columns+=1,this}}installMathOperations(AbstractMatrix,Matrix$2);class BaseView extends AbstractMatrix{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class MatrixColumnView extends BaseView{constructor(t,e){checkColumnIndex(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class MatrixColumnSelectionView extends BaseView{constructor(t,e){checkColumnIndices(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class MatrixFlipColumnView extends BaseView{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class MatrixFlipRowView extends BaseView{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class MatrixRowView extends BaseView{constructor(t,e){checkRowIndex(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class MatrixRowSelectionView extends BaseView{constructor(t,e){checkRowIndices(t,e),super(t,e.length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class MatrixSelectionView extends BaseView{constructor(t,e,r){checkRowIndices(t,e),checkColumnIndices(t,r),super(t,e.length,r.length),this.rowIndices=e,this.columnIndices=r}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class MatrixSubView extends BaseView{constructor(t,e,r,i,n){checkRange(t,e,r,i,n),super(t,r-e+1,n-i+1),this.startRow=e,this.startColumn=i}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class MatrixTransposeView$1 extends BaseView{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class WrapperMatrix1D extends AbstractMatrix{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let i=this._calculateIndex(t,e);return this.data[i]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class WrapperMatrix2D extends AbstractMatrix{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function wrap(t,e){if(isAnyArray(t))return t[0]&&isAnyArray(t[0])?new WrapperMatrix2D(t):new WrapperMatrix1D(t,e);throw new Error("the argument is not an array")}class LuDecomposition{constructor(t){let e,r,i,n,s,o,a,l,h,c=(t=WrapperMatrix2D.checkMatrix(t)).clone(),u=c.rows,f=c.columns,d=new Float64Array(u),m=1;for(e=0;e<u;e++)d[e]=e;for(l=new Float64Array(u),r=0;r<f;r++){for(e=0;e<u;e++)l[e]=c.get(e,r);for(e=0;e<u;e++){for(h=Math.min(e,r),s=0,i=0;i<h;i++)s+=c.get(e,i)*l[i];l[e]-=s,c.set(e,r,l[e])}for(n=r,e=r+1;e<u;e++)Math.abs(l[e])>Math.abs(l[n])&&(n=e);if(n!==r){for(i=0;i<f;i++)o=c.get(n,i),c.set(n,i,c.get(r,i)),c.set(r,i,o);a=d[n],d[n]=d[r],d[r]=a,m=-m}if(r<u&&0!==c.get(r,r))for(e=r+1;e<u;e++)c.set(e,r,c.get(e,r)/c.get(r,r))}this.LU=c,this.pivotVector=d,this.pivotSign=m}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=Matrix$2.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,i,n,s=t.columns,o=t.subMatrixRow(this.pivotVector,0,s-1),a=e.columns;for(n=0;n<a;n++)for(r=n+1;r<a;r++)for(i=0;i<s;i++)o.set(r,i,o.get(r,i)-o.get(n,i)*e.get(r,n));for(n=a-1;n>=0;n--){for(i=0;i<s;i++)o.set(n,i,o.get(n,i)/e.get(n,n));for(r=0;r<n;r++)for(i=0;i<s;i++)o.set(r,i,o.get(r,i)-o.get(n,i)*e.get(r,n))}return o}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let i=0;i<r;i++)e*=t.get(i,i);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,i=new Matrix$2(e,r);for(let n=0;n<e;n++)for(let e=0;e<r;e++)n>e?i.set(n,e,t.get(n,e)):n===e?i.set(n,e,1):i.set(n,e,0);return i}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,i=new Matrix$2(e,r);for(let n=0;n<e;n++)for(let e=0;e<r;e++)n<=e?i.set(n,e,t.get(n,e)):i.set(n,e,0);return i}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function hypotenuse$1(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class QrDecomposition{constructor(t){let e,r,i,n,s=(t=WrapperMatrix2D.checkMatrix(t)).clone(),o=t.rows,a=t.columns,l=new Float64Array(a);for(i=0;i<a;i++){let t=0;for(e=i;e<o;e++)t=hypotenuse$1(t,s.get(e,i));if(0!==t){for(s.get(i,i)<0&&(t=-t),e=i;e<o;e++)s.set(e,i,s.get(e,i)/t);for(s.set(i,i,s.get(i,i)+1),r=i+1;r<a;r++){for(n=0,e=i;e<o;e++)n+=s.get(e,i)*s.get(e,r);for(n=-n/s.get(i,i),e=i;e<o;e++)s.set(e,r,s.get(e,r)+n*s.get(e,i))}}l[i]=-t}this.QR=s,this.Rdiag=l}solve(t){t=Matrix$2.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let i,n,s,o,a=t.columns,l=t.clone(),h=e.columns;for(s=0;s<h;s++)for(n=0;n<a;n++){for(o=0,i=s;i<r;i++)o+=e.get(i,s)*l.get(i,n);for(o=-o/e.get(s,s),i=s;i<r;i++)l.set(i,n,l.get(i,n)+o*e.get(i,s))}for(s=h-1;s>=0;s--){for(n=0;n<a;n++)l.set(s,n,l.get(s,n)/this.Rdiag[s]);for(i=0;i<s;i++)for(n=0;n<a;n++)l.set(i,n,l.get(i,n)-l.get(s,n)*e.get(i,s))}return l.subMatrix(0,h-1,0,a-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,i=r.columns,n=new Matrix$2(i,i);for(t=0;t<i;t++)for(e=0;e<i;e++)t<e?n.set(t,e,r.get(t,e)):t===e?n.set(t,e,this.Rdiag[t]):n.set(t,e,0);return n}get orthogonalMatrix(){let t,e,r,i,n=this.QR,s=n.rows,o=n.columns,a=new Matrix$2(s,o);for(r=o-1;r>=0;r--){for(t=0;t<s;t++)a.set(t,r,0);for(a.set(r,r,1),e=r;e<o;e++)if(0!==n.get(r,r)){for(i=0,t=r;t<s;t++)i+=n.get(t,r)*a.get(t,e);for(i=-i/n.get(r,r),t=r;t<s;t++)a.set(t,e,a.get(t,e)+i*n.get(t,r))}}return a}}class SingularValueDecomposition{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if((t=WrapperMatrix2D.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,i=t.columns;const{computeLeftSingularVectors:n=!0,computeRightSingularVectors:s=!0,autoTranspose:o=!1}=e;let a,l=Boolean(n),h=Boolean(s),c=!1;if(r<i)if(o){a=t.transpose(),r=a.rows,i=a.columns,c=!0;let e=l;l=h,h=e}else a=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else a=t.clone();let u=Math.min(r,i),f=Math.min(r+1,i),d=new Float64Array(f),m=new Matrix$2(r,u),g=new Matrix$2(i,i),p=new Float64Array(i),w=new Float64Array(r),b=new Float64Array(f);for(let t=0;t<f;t++)b[t]=t;let _=Math.min(r-1,i),y=Math.max(0,Math.min(i-2,r)),M=Math.max(_,y);for(let t=0;t<M;t++){if(t<_){d[t]=0;for(let e=t;e<r;e++)d[t]=hypotenuse$1(d[t],a.get(e,t));if(0!==d[t]){a.get(t,t)<0&&(d[t]=-d[t]);for(let e=t;e<r;e++)a.set(e,t,a.get(e,t)/d[t]);a.set(t,t,a.get(t,t)+1)}d[t]=-d[t]}for(let e=t+1;e<i;e++){if(t<_&&0!==d[t]){let i=0;for(let n=t;n<r;n++)i+=a.get(n,t)*a.get(n,e);i=-i/a.get(t,t);for(let n=t;n<r;n++)a.set(n,e,a.get(n,e)+i*a.get(n,t))}p[e]=a.get(t,e)}if(l&&t<_)for(let e=t;e<r;e++)m.set(e,t,a.get(e,t));if(t<y){p[t]=0;for(let e=t+1;e<i;e++)p[t]=hypotenuse$1(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<i;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)w[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<i;r++)w[e]+=p[r]*a.get(e,r);for(let e=t+1;e<i;e++){let i=-p[e]/p[t+1];for(let n=t+1;n<r;n++)a.set(n,e,a.get(n,e)+i*w[n])}}if(h)for(let e=t+1;e<i;e++)g.set(e,t,p[e])}}let x=Math.min(i,r+1);if(_<i&&(d[_]=a.get(_,_)),r<x&&(d[x-1]=0),y+1<x&&(p[y]=a.get(y,x-1)),p[x-1]=0,l){for(let t=_;t<u;t++){for(let e=0;e<r;e++)m.set(e,t,0);m.set(t,t,1)}for(let t=_-1;t>=0;t--)if(0!==d[t]){for(let e=t+1;e<u;e++){let i=0;for(let n=t;n<r;n++)i+=m.get(n,t)*m.get(n,e);i=-i/m.get(t,t);for(let n=t;n<r;n++)m.set(n,e,m.get(n,e)+i*m.get(n,t))}for(let e=t;e<r;e++)m.set(e,t,-m.get(e,t));m.set(t,t,1+m.get(t,t));for(let e=0;e<t-1;e++)m.set(e,t,0)}else{for(let e=0;e<r;e++)m.set(e,t,0);m.set(t,t,1)}}if(h)for(let t=i-1;t>=0;t--){if(t<y&&0!==p[t])for(let e=t+1;e<i;e++){let r=0;for(let n=t+1;n<i;n++)r+=g.get(n,t)*g.get(n,e);r=-r/g.get(t+1,t);for(let n=t+1;n<i;n++)g.set(n,e,g.get(n,e)+r*g.get(n,t))}for(let e=0;e<i;e++)g.set(e,t,0);g.set(t,t,1)}let v=x-1,E=Number.EPSILON;for(;x>0;){let t,e;for(t=x-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+E*Math.abs(d[t]+Math.abs(d[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===x-2)e=4;else{let r;for(r=x-1;r>=t&&r!==t;r--){let e=(r!==x?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(d[r])<=E*e){d[r]=0;break}}r===t?e=3:r===x-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[x-2];p[x-2]=0;for(let r=x-2;r>=t;r--){let n=hypotenuse$1(d[r],e),s=d[r]/n,o=e/n;if(d[r]=n,r!==t&&(e=-o*p[r-1],p[r-1]=s*p[r-1]),h)for(let t=0;t<i;t++)n=s*g.get(t,r)+o*g.get(t,x-1),g.set(t,x-1,-o*g.get(t,r)+s*g.get(t,x-1)),g.set(t,r,n)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let i=t;i<x;i++){let n=hypotenuse$1(d[i],e),s=d[i]/n,o=e/n;if(d[i]=n,e=-o*p[i],p[i]=s*p[i],l)for(let e=0;e<r;e++)n=s*m.get(e,i)+o*m.get(e,t-1),m.set(e,t-1,-o*m.get(e,i)+s*m.get(e,t-1)),m.set(e,i,n)}break}case 3:{const e=Math.max(Math.abs(d[x-1]),Math.abs(d[x-2]),Math.abs(p[x-2]),Math.abs(d[t]),Math.abs(p[t])),n=d[x-1]/e,s=d[x-2]/e,o=p[x-2]/e,a=d[t]/e,c=p[t]/e,u=((s+n)*(s-n)+o*o)/2,f=n*o*(n*o);let w=0;0===u&&0===f||(w=u<0?0-Math.sqrt(u*u+f):Math.sqrt(u*u+f),w=f/(u+w));let b=(a+n)*(a-n)+w,_=a*c;for(let e=t;e<x-1;e++){let n=hypotenuse$1(b,_);0===n&&(n=Number.MIN_VALUE);let s=b/n,o=_/n;if(e!==t&&(p[e-1]=n),b=s*d[e]+o*p[e],p[e]=s*p[e]-o*d[e],_=o*d[e+1],d[e+1]=s*d[e+1],h)for(let t=0;t<i;t++)n=s*g.get(t,e)+o*g.get(t,e+1),g.set(t,e+1,-o*g.get(t,e)+s*g.get(t,e+1)),g.set(t,e,n);if(n=hypotenuse$1(b,_),0===n&&(n=Number.MIN_VALUE),s=b/n,o=_/n,d[e]=n,b=s*p[e]+o*d[e+1],d[e+1]=-o*p[e]+s*d[e+1],_=o*p[e+1],p[e+1]=s*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)n=s*m.get(t,e)+o*m.get(t,e+1),m.set(t,e+1,-o*m.get(t,e)+s*m.get(t,e+1)),m.set(t,e,n)}p[x-2]=b;break}case 4:if(d[t]<=0&&(d[t]=d[t]<0?-d[t]:0,h))for(let e=0;e<=v;e++)g.set(e,t,-g.get(e,t));for(;t<v&&!(d[t]>=d[t+1]);){let e=d[t];if(d[t]=d[t+1],d[t+1]=e,h&&t<i-1)for(let r=0;r<i;r++)e=g.get(r,t+1),g.set(r,t+1,g.get(r,t)),g.set(r,t,e);if(l&&t<r-1)for(let i=0;i<r;i++)e=m.get(i,t+1),m.set(i,t+1,m.get(i,t)),m.set(i,t,e);t++}x--}}if(c){let t=g;g=m,m=t}this.m=r,this.n=i,this.s=d,this.U=m,this.V=g}solve(t){let e=t,r=this.threshold,i=this.s.length,n=Matrix$2.zeros(i,i);for(let t=0;t<i;t++)Math.abs(this.s[t])<=r?n.set(t,t,0):n.set(t,t,1/this.s[t]);let s=this.U,o=this.rightSingularVectors,a=o.mmul(n),l=o.rows,h=s.rows,c=Matrix$2.zeros(l,h);for(let t=0;t<l;t++)for(let e=0;e<h;e++){let r=0;for(let n=0;n<i;n++)r+=a.get(t,n)*s.get(e,n);c.set(t,e,r)}return c.mmul(e)}solveForDiagonal(t){return this.solve(Matrix$2.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,i=t.columns,n=new Matrix$2(r,this.s.length);for(let s=0;s<r;s++)for(let r=0;r<i;r++)Math.abs(this.s[r])>e&&n.set(s,r,t.get(s,r)/this.s[r]);let s=this.U,o=s.rows,a=s.columns,l=new Matrix$2(r,o);for(let t=0;t<r;t++)for(let e=0;e<o;e++){let r=0;for(let i=0;i<a;i++)r+=n.get(t,i)*s.get(e,i);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let i=0,n=r.length;i<n;i++)r[i]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return Matrix$2.diag(this.s)}}function inverse(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t=WrapperMatrix2D.checkMatrix(t),e?new SingularValueDecomposition(t).inverse():solve(t,Matrix$2.eye(t.rows))}function solve(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t=WrapperMatrix2D.checkMatrix(t),e=WrapperMatrix2D.checkMatrix(e),r?new SingularValueDecomposition(t).solve(e):t.isSquare()?new LuDecomposition(t).solve(e):new QrDecomposition(t).solve(e)}function determinant(t){if((t=Matrix$2.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,i,n;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),i=t.get(1,0),n=t.get(1,1),e*n-r*i;if(3===t.columns){let n,s,o;return n=new MatrixSelectionView(t,[1,2],[1,2]),s=new MatrixSelectionView(t,[1,2],[0,2]),o=new MatrixSelectionView(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),i=t.get(0,2),e*determinant(n)-r*determinant(s)+i*determinant(o)}return new LuDecomposition(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function xrange(t,e){let r=[];for(let i=0;i<t;i++)i!==e&&r.push(i);return r}function dependenciesOneRow(t,e,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-9,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1e-9;if(t>n)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<i&&t.set(e,0,0);return t.to1DArray()}}function linearDependencies(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{thresholdValue:r=1e-9,thresholdError:i=1e-9}=e;let n=(t=Matrix$2.checkMatrix(t)).rows,s=new Matrix$2(n,n);for(let e=0;e<n;e++){let o=Matrix$2.columnVector(t.getRow(e)),a=t.subMatrixRow(xrange(n,e)).transpose(),l=new SingularValueDecomposition(a).solve(o),h=Matrix$2.sub(o,a.mmul(l)).abs().max();s.setRow(e,dependenciesOneRow(h,l,e,r,i))}return s}function pseudoInverse(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.EPSILON;if((t=Matrix$2.checkMatrix(t)).isEmpty())return t.transpose();let r=new SingularValueDecomposition(t,{autoTranspose:!0}),i=r.leftSingularVectors,n=r.rightSingularVectors,s=r.diagonal;for(let t=0;t<s.length;t++)Math.abs(s[t])>e?s[t]=1/s[t]:s[t]=0;return n.mmul(Matrix$2.diag(s).mmul(i.transpose()))}function covariance(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};t=new Matrix$2(t);let i=!1;if("object"!=typeof e||Matrix$2.isMatrix(e)||isAnyArray(e)?e=new Matrix$2(e):(r=e,e=t,i=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0}=r;n&&(t=t.center("column"),i||(e=e.center("column")));const s=t.transpose().mmul(e);for(let e=0;e<s.rows;e++)for(let r=0;r<s.columns;r++)s.set(e,r,s.get(e,r)*(1/(t.rows-1)));return s}function correlation(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};t=new Matrix$2(t);let i=!1;if("object"!=typeof e||Matrix$2.isMatrix(e)||isAnyArray(e)?e=new Matrix$2(e):(r=e,e=t,i=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0,scale:s=!0}=r;n&&(t.center("column"),i||e.center("column")),s&&(t.scale("column"),i||e.scale("column"));const o=t.standardDeviation("column",{unbiased:!0}),a=i?o:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(o[e]*a[r]))*(1/(t.rows-1)));return l}class EigenvalueDecomposition{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{assumeSymmetric:r=!1}=e;if(!(t=WrapperMatrix2D.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let i,n,s=t.columns,o=new Matrix$2(s,s),a=new Float64Array(s),l=new Float64Array(s),h=t,c=!1;if(c=!!r||t.isSymmetric(),c){for(i=0;i<s;i++)for(n=0;n<s;n++)o.set(i,n,h.get(i,n));tred2(s,l,a,o),tql2(s,l,a,o)}else{let t=new Matrix$2(s,s),e=new Float64Array(s);for(n=0;n<s;n++)for(i=0;i<s;i++)t.set(i,n,h.get(i,n));orthes(s,t,e,o),hqr2(s,l,a,o,t)}this.n=s,this.e=l,this.d=a,this.V=o}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,i=this.e,n=this.d,s=new Matrix$2(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)s.set(t,e,0);s.set(t,t,n[t]),i[t]>0?s.set(t,t+1,i[t]):i[t]<0&&s.set(t,t-1,i[t])}return s}}function tred2(t,e,r,i){let n,s,o,a,l,h,c,u;for(l=0;l<t;l++)r[l]=i.get(t-1,l);for(a=t-1;a>0;a--){for(u=0,o=0,h=0;h<a;h++)u+=Math.abs(r[h]);if(0===u)for(e[a]=r[a-1],l=0;l<a;l++)r[l]=i.get(a-1,l),i.set(a,l,0),i.set(l,a,0);else{for(h=0;h<a;h++)r[h]/=u,o+=r[h]*r[h];for(n=r[a-1],s=Math.sqrt(o),n>0&&(s=-s),e[a]=u*s,o-=n*s,r[a-1]=n-s,l=0;l<a;l++)e[l]=0;for(l=0;l<a;l++){for(n=r[l],i.set(l,a,n),s=e[l]+i.get(l,l)*n,h=l+1;h<=a-1;h++)s+=i.get(h,l)*r[h],e[h]+=i.get(h,l)*n;e[l]=s}for(n=0,l=0;l<a;l++)e[l]/=o,n+=e[l]*r[l];for(c=n/(o+o),l=0;l<a;l++)e[l]-=c*r[l];for(l=0;l<a;l++){for(n=r[l],s=e[l],h=l;h<=a-1;h++)i.set(h,l,i.get(h,l)-(n*e[h]+s*r[h]));r[l]=i.get(a-1,l),i.set(a,l,0)}}r[a]=o}for(a=0;a<t-1;a++){if(i.set(t-1,a,i.get(a,a)),i.set(a,a,1),o=r[a+1],0!==o){for(h=0;h<=a;h++)r[h]=i.get(h,a+1)/o;for(l=0;l<=a;l++){for(s=0,h=0;h<=a;h++)s+=i.get(h,a+1)*i.get(h,l);for(h=0;h<=a;h++)i.set(h,l,i.get(h,l)-s*r[h])}}for(h=0;h<=a;h++)i.set(h,a+1,0)}for(l=0;l<t;l++)r[l]=i.get(t-1,l),i.set(t-1,l,0);i.set(t-1,t-1,1),e[0]=0}function tql2(t,e,r,i){let n,s,o,a,l,h,c,u,f,d,m,g,p,w,b,_;for(o=1;o<t;o++)e[o-1]=e[o];e[t-1]=0;let y=0,M=0,x=Number.EPSILON;for(h=0;h<t;h++){for(M=Math.max(M,Math.abs(r[h])+Math.abs(e[h])),c=h;c<t&&!(Math.abs(e[c])<=x*M);)c++;if(c>h)do{for(n=r[h],u=(r[h+1]-n)/(2*e[h]),f=hypotenuse$1(u,1),u<0&&(f=-f),r[h]=e[h]/(u+f),r[h+1]=e[h]*(u+f),d=r[h+1],s=n-r[h],o=h+2;o<t;o++)r[o]-=s;for(y+=s,u=r[c],m=1,g=m,p=m,w=e[h+1],b=0,_=0,o=c-1;o>=h;o--)for(p=g,g=m,_=b,n=m*e[o],s=m*u,f=hypotenuse$1(u,e[o]),e[o+1]=b*f,b=e[o]/f,m=u/f,u=m*r[o]-b*n,r[o+1]=s+b*(m*n+b*r[o]),l=0;l<t;l++)s=i.get(l,o+1),i.set(l,o+1,b*i.get(l,o)+m*s),i.set(l,o,m*i.get(l,o)-b*s);u=-b*_*p*w*e[h]/d,e[h]=b*u,r[h]=m*u}while(Math.abs(e[h])>x*M);r[h]=r[h]+y,e[h]=0}for(o=0;o<t-1;o++){for(l=o,u=r[o],a=o+1;a<t;a++)r[a]<u&&(l=a,u=r[a]);if(l!==o)for(r[l]=r[o],r[o]=u,a=0;a<t;a++)u=i.get(a,o),i.set(a,o,i.get(a,l)),i.set(a,l,u)}}function orthes(t,e,r,i){let n,s,o,a,l,h,c,u=t-1;for(h=1;h<=u-1;h++){for(c=0,a=h;a<=u;a++)c+=Math.abs(e.get(a,h-1));if(0!==c){for(o=0,a=u;a>=h;a--)r[a]=e.get(a,h-1)/c,o+=r[a]*r[a];for(s=Math.sqrt(o),r[h]>0&&(s=-s),o-=r[h]*s,r[h]=r[h]-s,l=h;l<t;l++){for(n=0,a=u;a>=h;a--)n+=r[a]*e.get(a,l);for(n/=o,a=h;a<=u;a++)e.set(a,l,e.get(a,l)-n*r[a])}for(a=0;a<=u;a++){for(n=0,l=u;l>=h;l--)n+=r[l]*e.get(a,l);for(n/=o,l=h;l<=u;l++)e.set(a,l,e.get(a,l)-n*r[l])}r[h]=c*r[h],e.set(h,h-1,c*s)}}for(a=0;a<t;a++)for(l=0;l<t;l++)i.set(a,l,a===l?1:0);for(h=u-1;h>=1;h--)if(0!==e.get(h,h-1)){for(a=h+1;a<=u;a++)r[a]=e.get(a,h-1);for(l=h;l<=u;l++){for(s=0,a=h;a<=u;a++)s+=r[a]*i.get(a,l);for(s=s/r[h]/e.get(h,h-1),a=h;a<=u;a++)i.set(a,l,i.get(a,l)+s*r[a])}}}function hqr2(t,e,r,i,n){let s,o,a,l,h,c,u,f,d,m,g,p,w,b,_,y=t-1,M=t-1,x=Number.EPSILON,v=0,E=0,A=0,k=0,S=0,I=0,D=0,R=0;for(s=0;s<t;s++)for((s<0||s>M)&&(r[s]=n.get(s,s),e[s]=0),o=Math.max(s-1,0);o<t;o++)E+=Math.abs(n.get(s,o));for(;y>=0;){for(l=y;l>0&&(I=Math.abs(n.get(l-1,l-1))+Math.abs(n.get(l,l)),0===I&&(I=E),!(Math.abs(n.get(l,l-1))<x*I));)l--;if(l===y)n.set(y,y,n.get(y,y)+v),r[y]=n.get(y,y),e[y]=0,y--,R=0;else if(l===y-1){if(u=n.get(y,y-1)*n.get(y-1,y),A=(n.get(y-1,y-1)-n.get(y,y))/2,k=A*A+u,D=Math.sqrt(Math.abs(k)),n.set(y,y,n.get(y,y)+v),n.set(y-1,y-1,n.get(y-1,y-1)+v),f=n.get(y,y),k>=0){for(D=A>=0?A+D:A-D,r[y-1]=f+D,r[y]=r[y-1],0!==D&&(r[y]=f-u/D),e[y-1]=0,e[y]=0,f=n.get(y,y-1),I=Math.abs(f)+Math.abs(D),A=f/I,k=D/I,S=Math.sqrt(A*A+k*k),A/=S,k/=S,o=y-1;o<t;o++)D=n.get(y-1,o),n.set(y-1,o,k*D+A*n.get(y,o)),n.set(y,o,k*n.get(y,o)-A*D);for(s=0;s<=y;s++)D=n.get(s,y-1),n.set(s,y-1,k*D+A*n.get(s,y)),n.set(s,y,k*n.get(s,y)-A*D);for(s=0;s<=M;s++)D=i.get(s,y-1),i.set(s,y-1,k*D+A*i.get(s,y)),i.set(s,y,k*i.get(s,y)-A*D)}else r[y-1]=f+A,r[y]=f+A,e[y-1]=D,e[y]=-D;y-=2,R=0}else{if(f=n.get(y,y),d=0,u=0,l<y&&(d=n.get(y-1,y-1),u=n.get(y,y-1)*n.get(y-1,y)),10===R){for(v+=f,s=0;s<=y;s++)n.set(s,s,n.get(s,s)-f);I=Math.abs(n.get(y,y-1))+Math.abs(n.get(y-1,y-2)),f=d=.75*I,u=-.4375*I*I}if(30===R&&(I=(d-f)/2,I=I*I+u,I>0)){for(I=Math.sqrt(I),d<f&&(I=-I),I=f-u/((d-f)/2+I),s=0;s<=y;s++)n.set(s,s,n.get(s,s)-I);v+=I,f=d=u=.964}for(R+=1,h=y-2;h>=l&&(D=n.get(h,h),S=f-D,I=d-D,A=(S*I-u)/n.get(h+1,h)+n.get(h,h+1),k=n.get(h+1,h+1)-D-S-I,S=n.get(h+2,h+1),I=Math.abs(A)+Math.abs(k)+Math.abs(S),A/=I,k/=I,S/=I,h!==l)&&!(Math.abs(n.get(h,h-1))*(Math.abs(k)+Math.abs(S))<x*(Math.abs(A)*(Math.abs(n.get(h-1,h-1))+Math.abs(D)+Math.abs(n.get(h+1,h+1)))));)h--;for(s=h+2;s<=y;s++)n.set(s,s-2,0),s>h+2&&n.set(s,s-3,0);for(a=h;a<=y-1&&(b=a!==y-1,a!==h&&(A=n.get(a,a-1),k=n.get(a+1,a-1),S=b?n.get(a+2,a-1):0,f=Math.abs(A)+Math.abs(k)+Math.abs(S),0!==f&&(A/=f,k/=f,S/=f)),0!==f);a++)if(I=Math.sqrt(A*A+k*k+S*S),A<0&&(I=-I),0!==I){for(a!==h?n.set(a,a-1,-I*f):l!==h&&n.set(a,a-1,-n.get(a,a-1)),A+=I,f=A/I,d=k/I,D=S/I,k/=A,S/=A,o=a;o<t;o++)A=n.get(a,o)+k*n.get(a+1,o),b&&(A+=S*n.get(a+2,o),n.set(a+2,o,n.get(a+2,o)-A*D)),n.set(a,o,n.get(a,o)-A*f),n.set(a+1,o,n.get(a+1,o)-A*d);for(s=0;s<=Math.min(y,a+3);s++)A=f*n.get(s,a)+d*n.get(s,a+1),b&&(A+=D*n.get(s,a+2),n.set(s,a+2,n.get(s,a+2)-A*S)),n.set(s,a,n.get(s,a)-A),n.set(s,a+1,n.get(s,a+1)-A*k);for(s=0;s<=M;s++)A=f*i.get(s,a)+d*i.get(s,a+1),b&&(A+=D*i.get(s,a+2),i.set(s,a+2,i.get(s,a+2)-A*S)),i.set(s,a,i.get(s,a)-A),i.set(s,a+1,i.get(s,a+1)-A*k)}}}if(0!==E){for(y=t-1;y>=0;y--)if(A=r[y],k=e[y],0===k)for(l=y,n.set(y,y,1),s=y-1;s>=0;s--){for(u=n.get(s,s)-A,S=0,o=l;o<=y;o++)S+=n.get(s,o)*n.get(o,y);if(e[s]<0)D=u,I=S;else if(l=s,0===e[s]?n.set(s,y,0!==u?-S/u:-S/(x*E)):(f=n.get(s,s+1),d=n.get(s+1,s),k=(r[s]-A)*(r[s]-A)+e[s]*e[s],c=(f*I-D*S)/k,n.set(s,y,c),n.set(s+1,y,Math.abs(f)>Math.abs(D)?(-S-u*c)/f:(-I-d*c)/D)),c=Math.abs(n.get(s,y)),x*c*c>1)for(o=s;o<=y;o++)n.set(o,y,n.get(o,y)/c)}else if(k<0)for(l=y-1,Math.abs(n.get(y,y-1))>Math.abs(n.get(y-1,y))?(n.set(y-1,y-1,k/n.get(y,y-1)),n.set(y-1,y,-(n.get(y,y)-A)/n.get(y,y-1))):(_=cdiv(0,-n.get(y-1,y),n.get(y-1,y-1)-A,k),n.set(y-1,y-1,_[0]),n.set(y-1,y,_[1])),n.set(y,y-1,0),n.set(y,y,1),s=y-2;s>=0;s--){for(m=0,g=0,o=l;o<=y;o++)m+=n.get(s,o)*n.get(o,y-1),g+=n.get(s,o)*n.get(o,y);if(u=n.get(s,s)-A,e[s]<0)D=u,S=m,I=g;else if(l=s,0===e[s]?(_=cdiv(-m,-g,u,k),n.set(s,y-1,_[0]),n.set(s,y,_[1])):(f=n.get(s,s+1),d=n.get(s+1,s),p=(r[s]-A)*(r[s]-A)+e[s]*e[s]-k*k,w=2*(r[s]-A)*k,0===p&&0===w&&(p=x*E*(Math.abs(u)+Math.abs(k)+Math.abs(f)+Math.abs(d)+Math.abs(D))),_=cdiv(f*S-D*m+k*g,f*I-D*g-k*m,p,w),n.set(s,y-1,_[0]),n.set(s,y,_[1]),Math.abs(f)>Math.abs(D)+Math.abs(k)?(n.set(s+1,y-1,(-m-u*n.get(s,y-1)+k*n.get(s,y))/f),n.set(s+1,y,(-g-u*n.get(s,y)-k*n.get(s,y-1))/f)):(_=cdiv(-S-d*n.get(s,y-1),-I-d*n.get(s,y),D,k),n.set(s+1,y-1,_[0]),n.set(s+1,y,_[1]))),c=Math.max(Math.abs(n.get(s,y-1)),Math.abs(n.get(s,y))),x*c*c>1)for(o=s;o<=y;o++)n.set(o,y-1,n.get(o,y-1)/c),n.set(o,y,n.get(o,y)/c)}for(s=0;s<t;s++)if(s<0||s>M)for(o=s;o<t;o++)i.set(s,o,n.get(s,o));for(o=t-1;o>=0;o--)for(s=0;s<=M;s++){for(D=0,a=0;a<=Math.min(o,M);a++)D+=i.get(s,a)*n.get(a,o);i.set(s,o,D)}}}function cdiv(t,e,r,i){let n,s;return Math.abs(r)>Math.abs(i)?(n=i/r,s=r+n*i,[(t+n*e)/s,(e-n*t)/s]):(n=r/i,s=i+n*r,[(n*t+e)/s,(n*e-t)/s])}class CholeskyDecomposition{constructor(t){if(!(t=WrapperMatrix2D.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,i,n=t,s=n.rows,o=new Matrix$2(s,s),a=!0;for(r=0;r<s;r++){let t=0;for(i=0;i<r;i++){let s=0;for(e=0;e<i;e++)s+=o.get(i,e)*o.get(r,e);s=(n.get(r,i)-s)/o.get(i,i),o.set(r,i,s),t+=s*s}for(t=n.get(r,r)-t,a&=t>0,o.set(r,r,Math.sqrt(Math.max(t,0))),i=r+1;i<s;i++)o.set(r,i,0)}this.L=o,this.positiveDefinite=Boolean(a)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=WrapperMatrix2D.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let i,n,s,o=t.columns,a=t.clone();for(s=0;s<r;s++)for(n=0;n<o;n++){for(i=0;i<s;i++)a.set(s,n,a.get(s,n)-a.get(i,n)*e.get(s,i));a.set(s,n,a.get(s,n)/e.get(s,s))}for(s=r-1;s>=0;s--)for(n=0;n<o;n++){for(i=s+1;i<r;i++)a.set(s,n,a.get(s,n)-a.get(i,n)*e.get(i,s));a.set(s,n,a.get(s,n)/e.get(s,s))}return a}get lowerTriangularMatrix(){return this.L}}class nipals{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t=WrapperMatrix2D.checkMatrix(t);let{Y:r}=e;const{scaleScores:i=!1,maxIterations:n=1e3,terminationCriteria:s=1e-10}=e;let o;if(r){if(r=isAnyArray(r)&&"number"==typeof r[0]?Matrix$2.columnVector(r):WrapperMatrix2D.checkMatrix(r),r.rows!==t.rows)throw new Error("Y should have the same number of rows as X");o=r.getColumnVector(0)}else o=t.getColumnVector(0);let a,l,h,c,u=1;for(let e=0;e<n&&u>s;e++)h=t.transpose().mmul(o).div(o.transpose().mmul(o).get(0,0)),h=h.div(h.norm()),a=t.mmul(h).div(h.transpose().mmul(h).get(0,0)),e>0&&(u=a.clone().sub(c).pow(2).sum()),c=a.clone(),r?(l=r.transpose().mmul(a).div(a.transpose().mmul(a).get(0,0)),l=l.div(l.norm()),o=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):o=a;if(r){let e=t.transpose().mmul(a).div(a.transpose().mmul(a).get(0,0));e=e.div(e.norm());let i=t.clone().sub(a.clone().mmul(e.transpose())),n=o.transpose().mmul(a).div(a.transpose().mmul(a).get(0,0)),s=r.clone().sub(a.clone().mulS(n.get(0,0)).mmul(l.transpose()));this.t=a,this.p=e.transpose(),this.w=h.transpose(),this.q=l,this.u=o,this.s=a.transpose().mmul(a),this.xResidual=i,this.yResidual=s,this.betas=n}else this.w=h.transpose(),this.s=a.transpose().mmul(a).sqrt(),this.t=i?a.clone().div(this.s.get(0,0)):a,this.xResidual=t.sub(a.mmul(h.transpose()))}}var src$1=Object.freeze({__proto__:null,AbstractMatrix:AbstractMatrix,default:Matrix$2,Matrix:Matrix$2,wrap:wrap,WrapperMatrix1D:WrapperMatrix1D,WrapperMatrix2D:WrapperMatrix2D,solve:solve,inverse:inverse,determinant:determinant,linearDependencies:linearDependencies,pseudoInverse:pseudoInverse,covariance:covariance,correlation:correlation,SingularValueDecomposition:SingularValueDecomposition,SVD:SingularValueDecomposition,EigenvalueDecomposition:EigenvalueDecomposition,EVD:EigenvalueDecomposition,CholeskyDecomposition:CholeskyDecomposition,CHO:CholeskyDecomposition,LuDecomposition:LuDecomposition,LU:LuDecomposition,QrDecomposition:QrDecomposition,QR:QrDecomposition,Nipals:nipals,NIPALS:nipals,MatrixColumnView:MatrixColumnView,MatrixColumnSelectionView:MatrixColumnSelectionView,MatrixFlipColumnView:MatrixFlipColumnView,MatrixFlipRowView:MatrixFlipRowView,MatrixRowView:MatrixRowView,MatrixRowSelectionView:MatrixRowSelectionView,MatrixSelectionView:MatrixSelectionView,MatrixSubView:MatrixSubView,MatrixTransposeView:MatrixTransposeView$1});function getSeparatedKernel(t){const e=new SingularValueDecomposition(t,{autoTranspose:!0});if(1!==e.rank)return null;const r=Math.sqrt(e.s[0]);return[e.U.to2DArray().map((t=>t[0]*r)),e.V.to2DArray().map((t=>t[0]*r))]}function convolution(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r,bitDepth:i,normalize:n=!1,divisor:s=1,border:o="copy",algorithm:a="auto"}=e,l={};i&&(l.bitDepth=i);let h,c,u=Image.createFrom(this,l);if(r=validateArrayOfChannels(this,r,!0),"separable"!==a)({kernel:t}=validateKernel(t));else if(!Array.isArray(t)||2!==t.length)throw new RangeError("separable convolution requires two arrays of numbers to represent the kernel");if("auto"===a){let e=getSeparatedKernel(t);null!==e?(a="separable",t=e):a=(t.length>9||t[0].length>9)&&this.width<=4096&&this.height<=4096?"fft":"direct"}"separable"===a?(h=Math.floor(t[0].length/2),c=Math.floor(t[1].length/2)):(h=Math.floor(t.length/2),c=Math.floor(t[0].length/2));let f,d,m,g,p,w,b=u.isClamped,_=new Array(this.height*this.width);for(g=0;g<r.length;g++){for(p=r[g],m=0;m<this.height;m++)for(d=0;d<this.width;d++)f=m*this.width+d,_[f]=this.data[f*this.channels+p];if("direct"===a)w=src$2.direct(_,t,{rows:this.height,cols:this.width,normalize:n,divisor:s});else if("separable"===a){if(w=convolutionSeparable(_,t,this.width,this.height),n){s=0;for(let e=0;e<t[0].length;e++)for(let r=0;r<t[1].length;r++)s+=t[0][e]*t[1][r]}if(1!==s)for(let t=0;t<w.length;t++)w[t]/=s}else w=src$2.fft(_,t,{rows:this.height,cols:this.width,normalize:n,divisor:s});for(m=0;m<this.height;m++)for(d=0;d<this.width;d++)f=m*this.width+d,u.data[f*this.channels+p]=b?clamp(w[f],u):w[f]}if(this.alpha&&!r.includes(this.channels))for(d=this.components;d<this.data.length;d+=this.channels)u.data[d]=this.data[d];return"periodic"!==o&&u.setBorder({size:[c,h],algorithm:o}),u}function gradientFilter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{direction:e="xy",border:r="copy",kernelX:i,kernelY:n,channels:s,bitDepth:o=this.bitDepth}=t;switch(this.checkProcessable("gradientFilter",{bitDepth:[8,16]}),e){case"x":if(!i)throw new Error("kernelX option is missing");return convolution.call(this,i,{channels:s,border:r,bitDepth:o});case"y":if(!n)throw new Error("kernelY option is missing");return convolution.call(this,n,{channels:s,border:r,bitDepth:o});case"xy":{if(!i)throw new Error("kernelX option is missing");if(!n)throw new Error("kernelY option is missing");const t=convolution.call(this,i,{channels:s,border:r,bitDepth:32}),e=convolution.call(this,n,{channels:s,border:r,bitDepth:32});return t.hypotenuse(e,{bitDepth:o,channels:s})}default:throw new Error(`Unknown parameter direction: ${e}`)}}function sobelFilter(t){return gradientFilter.call(this,Object.assign({},t,{kernelX:SOBEL_X,kernelY:SOBEL_Y}))}function scharrFilter(t){return gradientFilter.call(this,Object.assign({},t,{kernelX:SCHARR_X,kernelY:SCHARR_Y}))}var newArray_1=newArray;function newArray(t,e){t=t||0;for(var r=new Array(t),i=0;i<t;i++)r[i]=e;return r}var newArray$1=newArray_1;function level(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{algorithm:e="range",channels:r,min:i=this.min,max:n=this.max}=t;if(this.checkProcessable("level",{bitDepth:[8,16,32]}),r=validateArrayOfChannels(this,{channels:r}),r.length!==this.channel&&(Array.isArray(i)&&i.length===this.channels&&(i=i.filter(((t,e)=>r.includes(e)))),Array.isArray(n)&&n.length===this.channels&&(n=n.filter(((t,e)=>r.includes(e))))),"range"!==e)throw new Error(`level: algorithm not implement: ${e}`);return i<0&&(i=0),n>this.maxValue&&(n=this.maxValue),Array.isArray(i)||(i=newArray$1(r.length,i)),Array.isArray(n)||(n=newArray$1(r.length,n)),processImage(this,i,n,r),this}function processImage(t,e,r,i){let n=1e-5,s=new Array(i.length);for(let o=0;o<i.length;o++)0===e[o]&&r[o]===t.maxValue||r[o]===e[o]?s[o]=0:s[o]=(t.maxValue+1-n)/(r[o]-e[o]),e[o]+=.499995/s[o];for(let r=0;r<i.length;r++){let n=i[r];if(0!==s[r])for(let i=0;i<t.data.length;i+=t.channels)t.data[i+n]=Math.min(Math.max(0,(t.data[i+n]-e[r])*s[r]+.5|0),t.maxValue)}}var toString=Object.prototype.toString,isArrayType=function(t){return"Array"===toString.call(t).substr(-6,5)},isArray=isArrayType;function checkNumberArray(t){if(isNaN(t)){if(t instanceof Image)return t.data;if(!isArray(t))throw new Error("checkNumberArray: the value should be either a number, array or Image");return t}if(t<=0)throw new Error("checkNumberArray: the value must be greater than 0");return t}function add(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r}=e;if(this.checkProcessable("add",{bitDepth:[8,16]}),r=validateArrayOfChannels(this,{channels:r}),t=checkNumberArray(t),isNaN(t)){if(this.data.length!==t.length)throw new Error("add: the data size is different");for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.max(0,Math.min(this.maxValue,this.data[e+i]+t[e+i]>>0))}}else for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.min(this.maxValue,this.data[e+i]+t>>0)}return this}function subtract(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r}=e;if(this.checkProcessable("subtract",{bitDepth:[8,16]}),r=validateArrayOfChannels(this,{channels:r}),t=checkNumberArray(t),isNaN(t)){if(this.data.length!==t.length)throw new Error("subtract: the data size is different");for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.max(0,Math.min(this.maxValue,this.data[e+i]-t[e+i]>>0))}}else for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.max(0,this.data[e+i]-t>>0)}return this}function subtractImage(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r,absolute:i=!1}=e;if(this.checkProcessable("subtractImage",{bitDepth:[8,16]}),this.width!==t.width||this.height!==t.height)throw new Error("subtractImage: both images must have the same size");if(this.alpha!==t.alpha||this.bitDepth!==t.bitDepth)throw new Error("subtractImage: both images must have the same alpha and bitDepth");if(this.channels!==t.channels)throw new Error("subtractImage: both images must have the same number of channels");let n=this.clone();r=validateArrayOfChannels(this,{channels:r});for(let e=0;e<r.length;e++){for(let s=r[e];s<this.data.length;s+=this.channels){let e=this.data[s]-t.data[s];n.data[s]=i?Math.abs(e):Math.max(e,0)}}return n}function hypotenuse(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{bitDepth:r=this.bitDepth,channels:i}=e;if(this.checkProcessable("hypotenuse",{bitDepth:[8,16,32]}),this.width!==t.width||this.height!==t.height)throw new Error("hypotenuse: both images must have the same size");if(this.alpha!==t.alpha||this.bitDepth!==t.bitDepth)throw new Error("hypotenuse: both images must have the same alpha and bitDepth");if(this.channels!==t.channels)throw new Error("hypotenuse: both images must have the same number of channels");let n=Image.createFrom(this,{bitDepth:r});i=validateArrayOfChannels(this,{channels:i});let s=n.isClamped;for(let e=0;e<i.length;e++){for(let r=i[e];r<this.data.length;r+=this.channels){let e=Math.hypot(this.data[r],t.data[r]);n.data[r]=s?Math.min(Math.max(Math.round(e),0),n.maxValue):e}}return n}function multiply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r}=e;if(this.checkProcessable("multiply",{bitDepth:[8,16]}),t<=0)throw new Error("multiply: the value must be greater than 0");if(r=validateArrayOfChannels(this,{channels:r}),t=checkNumberArray(t),isNaN(t)){if(this.data.length!==t.length)throw new Error("multiply: the data size is different");for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.max(0,Math.min(this.maxValue,this.data[e+i]*t[e+i]>>0))}}else for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.min(this.maxValue,this.data[e+i]*t>>0)}return this}function divide(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{channels:r}=e;if(this.checkProcessable("divide",{bitDepth:[8,16]}),r=validateArrayOfChannels(this,{channels:r}),t=checkNumberArray(t),isNaN(t)){if(this.data.length!==t.length)throw new Error("divide: the: the data size is different");for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.max(0,Math.min(this.maxValue,this.data[e+i]/t[e+i]>>0))}}else for(let e=0;e<r.length;e++){let i=r[e];for(let e=0;e<this.data.length;e+=this.channels)this.data[e+i]=Math.min(this.maxValue,this.data[e+i]/t>>0)}return this}class BaseRegression{constructor(){if(new.target===BaseRegression)throw new Error("BaseRegression must be subclassed")}predict(t){if("number"==typeof t)return this._predict(t);if(isAnyArray(t)){const e=[];for(let r=0;r<t.length;r++)e.push(this._predict(t[r]));return e}throw new TypeError("x must be a number or array")}_predict(){throw new Error("_predict must be implemented")}train(){}toString(){return""}toLaTeX(){return""}score(t,e){if(!isAnyArray(t)||!isAnyArray(e)||t.length!==e.length)throw new Error("x and y must be arrays of the same length");const r=t.length,i=new Array(r);for(let e=0;e<r;e++)i[e]=this._predict(t[e]);let n=0,s=0,o=0,a=0,l=0,h=0,c=0;for(let t=0;t<r;t++)n+=i[t],s+=e[t],l+=i[t]*i[t],h+=e[t]*e[t],c+=i[t]*e[t],0!==e[t]&&(o+=(e[t]-i[t])*(e[t]-i[t])/e[t]),a+=(e[t]-i[t])*(e[t]-i[t]);const u=(r*c-n*s)/Math.sqrt((r*l-n*n)*(r*h-s*s));return{r:u,r2:u*u,chi2:o,rmsd:Math.sqrt(a/r)}}}var require$$0$1=getAugmentedNamespace(src$1);function squaredEuclidean$4(t,e){let r=0;for(let i=0;i<t.length;i++)r+=(t[i]-e[i])*(t[i]-e[i]);return r}function euclidean$2(t,e){return Math.sqrt(squaredEuclidean$4(t,e))}var euclidean$3=Object.freeze({__proto__:null,squaredEuclidean:squaredEuclidean$4,euclidean:euclidean$2}),require$$0=getAugmentedNamespace(euclidean$3);const{squaredEuclidean:squaredEuclidean$3}=require$$0,defaultOptions$b={sigma:1};class GaussianKernel$1{constructor(t){t=Object.assign({},defaultOptions$b,t),this.sigma=t.sigma,this.divisor=2*t.sigma*t.sigma}compute(t,e){const r=squaredEuclidean$3(t,e);return Math.exp(-r/this.divisor)}}var gaussianKernel=GaussianKernel$1;const defaultOptions$a={degree:1,constant:1,scale:1};class PolynomialKernel$1{constructor(t){t=Object.assign({},defaultOptions$a,t),this.degree=t.degree,this.constant=t.constant,this.scale=t.scale}compute(t,e){for(var r=0,i=0;i<t.length;i++)r+=t[i]*e[i];return Math.pow(this.scale*r+this.constant,this.degree)}}var polynomialKernel=PolynomialKernel$1;const defaultOptions$9={alpha:.01,constant:-Math.E};class SigmoidKernel$1{constructor(t){t=Object.assign({},defaultOptions$9,t),this.alpha=t.alpha,this.constant=t.constant}compute(t,e){for(var r=0,i=0;i<t.length;i++)r+=t[i]*e[i];return Math.tanh(this.alpha*r+this.constant)}}var sigmoidKernel=SigmoidKernel$1;const defaultOptions$8={sigma:1,degree:1};class ANOVAKernel$1{constructor(t){t=Object.assign({},defaultOptions$8,t),this.sigma=t.sigma,this.degree=t.degree}compute(t,e){for(var r=0,i=Math.min(t.length,e.length),n=1;n<=i;++n)r+=Math.pow(Math.exp(-this.sigma*Math.pow(Math.pow(t[n-1],n)-Math.pow(e[n-1],n),2)),this.degree);return r}}var anovaKernel=ANOVAKernel$1;const{squaredEuclidean:squaredEuclidean$2}=require$$0,defaultOptions$7={sigma:1};class CauchyKernel$1{constructor(t){t=Object.assign({},defaultOptions$7,t),this.sigma=t.sigma}compute(t,e){return 1/(1+squaredEuclidean$2(t,e)/(this.sigma*this.sigma))}}var cauchyKernel=CauchyKernel$1;const{euclidean:euclidean$1}=require$$0,defaultOptions$6={sigma:1};class ExponentialKernel$1{constructor(t){t=Object.assign({},defaultOptions$6,t),this.sigma=t.sigma,this.divisor=2*t.sigma*t.sigma}compute(t,e){const r=euclidean$1(t,e);return Math.exp(-r/this.divisor)}}var exponentialKernel=ExponentialKernel$1;class HistogramIntersectionKernel{compute(t,e){for(var r=Math.min(t.length,e.length),i=0,n=0;n<r;++n)i+=Math.min(t[n],e[n]);return i}}var histogramIntersectionKernel=HistogramIntersectionKernel;const{euclidean:euclidean}=require$$0,defaultOptions$5={sigma:1};class LaplacianKernel$1{constructor(t){t=Object.assign({},defaultOptions$5,t),this.sigma=t.sigma}compute(t,e){const r=euclidean(t,e);return Math.exp(-r/this.sigma)}}var laplacianKernel=LaplacianKernel$1;const{squaredEuclidean:squaredEuclidean$1}=require$$0,defaultOptions$4={constant:1};class MultiquadraticKernel$1{constructor(t){t=Object.assign({},defaultOptions$4,t),this.constant=t.constant}compute(t,e){return Math.sqrt(squaredEuclidean$1(t,e)+this.constant*this.constant)}}var multiquadraticKernel=MultiquadraticKernel$1;const{squaredEuclidean:squaredEuclidean}=require$$0,defaultOptions$3={constant:1};class RationalQuadraticKernel{constructor(t){t=Object.assign({},defaultOptions$3,t),this.constant=t.constant}compute(t,e){const r=squaredEuclidean(t,e);return 1-r/(r+this.constant)}}var rationalQuadraticKernel=RationalQuadraticKernel;const{Matrix:Matrix$1,MatrixTransposeView:MatrixTransposeView}=require$$0$1,GaussianKernel=gaussianKernel,PolynomialKernel=polynomialKernel,SigmoidKernel=sigmoidKernel,ANOVAKernel=anovaKernel,CauchyKernel=cauchyKernel,ExponentialKernel=exponentialKernel,HistogramKernel=histogramIntersectionKernel,LaplacianKernel=laplacianKernel,MultiquadraticKernel=multiquadraticKernel,RationalKernel=rationalQuadraticKernel,kernelType={gaussian:GaussianKernel,rbf:GaussianKernel,polynomial:PolynomialKernel,poly:PolynomialKernel,anova:ANOVAKernel,cauchy:CauchyKernel,exponential:ExponentialKernel,histogram:HistogramKernel,min:HistogramKernel,laplacian:LaplacianKernel,multiquadratic:MultiquadraticKernel,rational:RationalKernel,sigmoid:SigmoidKernel,mlp:SigmoidKernel};class Kernel{constructor(t,e){if(this.kernelType=t,"linear"!==t)if("string"==typeof t){t=t.toLowerCase();var r=kernelType[t];if(!r)throw new Error(`unsupported kernel type: ${t}`);this.kernelFunction=new r(e)}else{if("object"!=typeof t||"function"!=typeof t.compute)throw new TypeError("first argument must be a valid kernel type or instance");this.kernelFunction=t}}compute(t,e){if(t=Matrix$1.checkMatrix(t),e=void 0===e?t:Matrix$1.checkMatrix(e),"linear"===this.kernelType)return t.mmul(new MatrixTransposeView(e));const r=new Matrix$1(t.rows,e.rows);if(t===e)for(let e=0;e<t.rows;e++)for(let i=e;i<t.rows;i++){const n=this.kernelFunction.compute(t.getRow(e),t.getRow(i));r.set(e,i,n),r.set(i,e,n)}else for(let i=0;i<t.rows;i++)for(let n=0;n<e.rows;n++)r.set(i,n,this.kernelFunction.compute(t.getRow(i),e.getRow(n)));return r}}var kernel$1=Kernel,Kernel$1=kernel$1;const defaultOptions$2={lambda:.1,kernelType:"gaussian",kernelOptions:{},computeCoefficient:!1};class KernelRidgeRegression extends BaseRegression{constructor(t,e,r){if(super(),!0===t)this.alpha=e.alpha,this.inputs=e.inputs,this.kernelType=e.kernelType,this.kernelOptions=e.kernelOptions,this.kernel=new Kernel$1(e.kernelType,e.kernelOptions);else{t=Matrix$2.checkMatrix(t),r=Object.assign({},defaultOptions$2,r);const i=new Kernel$1(r.kernelType,r.kernelOptions),n=i.compute(t),s=t.rows;n.add(Matrix$2.eye(s,s).mul(r.lambda)),this.alpha=solve(n,e),this.inputs=t,this.kernelType=r.kernelType,this.kernelOptions=r.kernelOptions,this.kernel=i}}_predict(t){return this.kernel.compute([t],this.inputs).mmul(this.alpha).getRow(0)}toJSON(){return{name:"kernelRidgeRegression",alpha:this.alpha,inputs:this.inputs,kernelType:this.kernelType,kernelOptions:this.kernelOptions}}static load(t){if("kernelRidgeRegression"!==t.name)throw new TypeError("not a KRR model");return new KernelRidgeRegression(!0,t)}}function background$2(t,e,r){const i=new KernelRidgeRegression(t,e,r),n=new Array(this.size);for(let t=0;t<this.width;t++)for(let e=0;e<this.height;e++)n[e*this.width+t]=[t,e];const s=i.predict(n),o=Image.createFrom(this);for(let t=0;t<this.size;t++)o.data[t]=Math.min(this.maxValue,Math.max(0,s[t][0]));return o}function dilate(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("dilate",{bitDepth:[1,8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("dilate: The number of rows and columns of the kernel must be odd");let i=!0;t:for(const t of e)for(const e of t)if(1!==e){i=!1;break t}let n=this;for(let t=0;t<r;t++)if(1===this.bitDepth)if(i){const t=n.clone();n=dilateOnceBinaryOnlyOnes(n,t,e.length,e[0].length)}else{n=dilateOnceBinary(n,Image.createFrom(n),e)}else if(i){n=dilateOnceGreyOnlyOnes(n,Image.createFrom(n),e.length,e[0].length)}else{n=dilateOnceGrey(n,Image.createFrom(n),e)}return n}function dilateOnceGrey(t,e,r){const i=r.length,n=r[0].length;let s=(i-1)/2,o=(n-1)/2;for(let a=0;a<t.height;a++)for(let l=0;l<t.width;l++){let h=0;for(let e=0;e<n;e++)for(let n=0;n<i;n++){if(1!==r[n][e])continue;let i=n-s+l,c=e-o+a;if(i<0||c<0||i>=t.width||c>=t.height)continue;const u=t.getValueXY(i,c,0);u>h&&(h=u)}e.setValueXY(l,a,0,h)}return e}function dilateOnceGreyOnlyOnes(t,e,r,i){const n=(r-1)/2,s=(i-1)/2,o=[];for(let e=0;e<t.width;e++)o.push(0);for(let r=0;r<t.height;r++){for(let e=0;e<t.width;e++){let i=0;for(let n=Math.max(0,r-s);n<Math.min(t.height,r+s+1);n++){const r=t.getValueXY(e,n,0);r>i&&(i=r)}o[e]=i}for(let i=0;i<t.width;i++){let s=0;for(let e=Math.max(0,i-n);e<Math.min(t.width,i+n+1);e++)o[e]>s&&(s=o[e]);e.setValueXY(i,r,0,s)}}return e}function dilateOnceBinary(t,e,r){const i=r.length,n=r[0].length;let s=(i-1)/2,o=(n-1)/2;for(let a=0;a<t.height;a++)for(let l=0;l<t.width;l++){let h=0;t:for(let e=0;e<n;e++)for(let n=0;n<i;n++){if(1!==r[n][e])continue;let i=n-s+l,c=e-o+a;if(c<0||i<0||i>=t.width||c>=t.height)continue;if(1===t.getBitXY(i,c)){h=1;break t}}1===h&&e.setBitXY(l,a)}return e}function dilateOnceBinaryOnlyOnes(t,e,r,i){const n=(r-1)/2,s=(i-1)/2,o=[];for(let e=0;e<t.width;e++)o.push(1);for(let r=0;r<t.height;r++){for(let e=0;e<t.width;e++){o[e]=0;for(let i=Math.max(0,r-s);i<Math.min(t.height,r+s+1);i++)if(1===t.getBitXY(e,i)){o[e]=1;break}}for(let i=0;i<t.width;i++)if(1!==e.getBitXY(i,r))for(let s=Math.max(0,i-n);s<Math.min(t.width,i+n+1);s++)if(1===o[s]){e.setBitXY(i,r);break}}return e}function erode(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("erode",{bitDepth:[1,8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("erode: The number of rows and columns of the kernel must be odd");let i=!0;t:for(const t of e)for(const e of t)if(1!==e){i=!1;break t}let n=this;for(let t=0;t<r;t++)if(1===this.bitDepth)if(i){const t=n.clone();n=erodeOnceBinaryOnlyOnes(n,t,e.length,e[0].length)}else{n=erodeOnceBinary(n,Image.createFrom(n),e)}else if(i){n=erodeOnceGreyOnlyOnes(n,Image.createFrom(n),e.length,e[0].length)}else{n=erodeOnceGrey(n,Image.createFrom(n),e)}return n}function erodeOnceGrey(t,e,r){const i=r.length,n=r[0].length;let s=(i-1)/2,o=(n-1)/2;for(let a=0;a<t.height;a++)for(let l=0;l<t.width;l++){let h=t.maxValue;for(let e=0;e<n;e++)for(let n=0;n<i;n++){if(1!==r[n][e])continue;let i=n-s+l,c=e-o+a;if(i<0||c<0||i>=t.width||c>=t.height)continue;const u=t.getValueXY(i,c,0);u<h&&(h=u)}e.setValueXY(l,a,0,h)}return e}function erodeOnceGreyOnlyOnes(t,e,r,i){const n=(r-1)/2,s=(i-1)/2,o=[];for(let e=0;e<t.width;e++)o.push(0);for(let r=0;r<t.height;r++){for(let e=0;e<t.width;e++){let i=t.maxValue;for(let n=Math.max(0,r-s);n<Math.min(t.height,r+s+1);n++){const r=t.getValueXY(e,n,0);r<i&&(i=r)}o[e]=i}for(let i=0;i<t.width;i++){let s=t.maxValue;for(let e=Math.max(0,i-n);e<Math.min(t.width,i+n+1);e++)o[e]<s&&(s=o[e]);e.setValueXY(i,r,0,s)}}return e}function erodeOnceBinary(t,e,r){const i=r.length,n=r[0].length;let s=(i-1)/2,o=(n-1)/2;for(let a=0;a<t.height;a++)for(let l=0;l<t.width;l++){let h=1;t:for(let e=0;e<n;e++)for(let n=0;n<i;n++){if(1!==r[n][e])continue;let i=n-s+l,c=e-o+a;if(c<0||i<0||i>=t.width||c>=t.height)continue;if(0===t.getBitXY(i,c)){h=0;break t}}1===h&&e.setBitXY(l,a)}return e}function erodeOnceBinaryOnlyOnes(t,e,r,i){const n=(r-1)/2,s=(i-1)/2,o=[];for(let e=0;e<t.width;e++)o.push(0);for(let r=0;r<t.height;r++){for(let e=0;e<t.width;e++){o[e]=1;for(let i=Math.max(0,r-s);i<Math.min(t.height,r+s+1);i++)if(0===t.getBitXY(e,i)){o[e]=0;break}}for(let i=0;i<t.width;i++)if(0!==e.getBitXY(i,r))for(let s=Math.max(0,i-n);s<Math.min(t.width,i+n+1);s++)if(0===o[s]){e.clearBitXY(i,r);break}}return e}function open(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("open",{bitDepth:[8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("open: The number of rows and columns of the kernel must be odd");let i=this;for(let t=0;t<r;t++)i=i.erode({kernel:e}),i=i.dilate({kernel:e});return i}function close(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("close",{bitDepth:[1,8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("close: The number of rows and columns of the kernel must be odd");let i=this;for(let t=0;t<r;t++)i=i.dilate({kernel:e}).erode({kernel:e});return i}function topHat(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("topHat",{bitDepth:[8,16],components:1,alpha:0}),e.length%2==0||e[0].length%2==0)throw new TypeError("topHat: The number of rows and columns of the kernel must be odd");let i=this;for(let t=0;t<r;t++){let t=i.open({kernel:e});i=t.subtractImage(i,{absolute:!0})}return i}function blackHat(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("blackHat",{bitDepth:[8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("blackHat: The number of rows and columns of the kernel must be odd");let i=this;for(let t=0;t<r;t++){const t=i.close({kernel:e});i=t.subtractImage(i,{absolute:!0})}return i}function morphologicalGradient(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kernel:e=[[1,1,1],[1,1,1],[1,1,1]],iterations:r=1}=t;if(this.checkProcessable("morphologicalGradient",{bitDepth:[8,16],components:1,alpha:0}),e.columns%2==0||e.rows%2==0)throw new TypeError("morphologicalGradient: The number of rows and columns of the kernel must be odd");let i=this;for(let t=0;t<r;t++){let t=i.dilate({kernel:e}),r=i.erode({kernel:e});i=t.subtractImage(r,{absolute:!0})}return i}function order4Points(t){let e=0,r=0,i=0,n=0,s=t[0][0],o=0;for(let e=1;e<t.length;e++)t[e][0]<s&&(s=t[e][0],o=e);let a=t[(o+1)%t.length][0],l=(o+1)%t.length;for(let e=1;e<t.length;e++)t[e][0]<a&&e!==o&&(a=t[e][0],l=e);return t[l][1]<t[o][1]?(e=t[l],n=t[o],o!==(l+1)%4?(r=t[(l+1)%4],i=t[(l+2)%4]):(r=t[(l+2)%4],i=t[(l+3)%4])):(n=t[l],e=t[o],l!==(o+1)%4?(r=t[(o+1)%4],i=t[(o+2)%4]):(r=t[(o+2)%4],i=t[(o+3)%4])),[e,r,i,n]}function distance2Points(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2))}function crossVect(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function dotVect(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function computeWidthAndHeigth(t,e,r,i,n,s){let o=Math.max(distance2Points(t,e),distance2Points(i,r)),a=Math.max(distance2Points(t,i),distance2Points(e,r)),l=0,h=0,c=Math.ceil(n/2),u=Math.ceil(s/2),f=o/a,d=[t[0],t[1],1],m=[e[0],e[1],1],g=[i[0],i[1],1],p=[r[0],r[1],1],w=dotVect(crossVect(d,p),g)/dotVect(crossVect(m,p),g),b=dotVect(crossVect(d,p),m)/dotVect(crossVect(g,p),m),_=[w*m[0]-d[0],w*m[1]-d[1],w*m[2]-d[2]],y=[b*g[0]-d[0],b*g[1]-d[1],b*g[2]-d[2]],M=_[0],x=_[1],v=_[2],E=y[0],A=y[1],k=y[2],S=1/(v*k)*(M*E-(M*k+v*E)*c+v*k*c*c+(x*A-(x*k+v*A)*u+v*k*u*u));S=S>=0?Math.sqrt(S):Math.sqrt(-S);let I=new Matrix$2([[S,0,c],[0,S,u],[0,0,1]]),D=inverse(I.transpose()),R=inverse(I),T=Matrix$2.rowVector(_),$=Matrix$2.rowVector(y),C=Math.sqrt(dotVect(T.mmul(D).mmul(R).to1DArray(),_)/dotVect($.mmul(D).mmul(R).to1DArray(),y));return 0===C||0===f?(l=Math.ceil(o),h=Math.ceil(a)):C<f?(l=Math.ceil(o),h=Math.ceil(l/C)):(h=Math.ceil(a),l=Math.ceil(C*h)),[l,h]}function projectionPoint(t,e,r,i,n,s,o,a,l,h,c,u){let[f,d]=[(r*t+i*e+n)/(l*t+h*e+1),(s*t+o*e+a)/(l*t+h*e+1)];return c.getValueXY(Math.floor(f),Math.floor(d),u)}function warpingFourPoints(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{calculateRatio:r=!0}=e;if(4!==t.length)throw new Error(`The array pts must have four elements, which are the four corners. Currently, pts have ${t.length} elements`);let i,n,[s,o,a,l]=t,h=[s,o,a,l],[c,u,f,d]=order4Points(h);r?[i,n]=computeWidthAndHeigth(c,u,f,d,this.width,this.height):(i=Math.ceil(Math.max(distance2Points(c,u),distance2Points(d,f))),n=Math.ceil(Math.max(distance2Points(c,d),distance2Points(u,f))));let m=Image.createFrom(this,{width:i,height:n}),[g,p]=c,[w,b]=u,[_,y]=f,[M,x]=d,[v,E]=[0,0],[A,k]=[0,i-1],[S,I]=[n-1,i-1],[D,R]=[n-1,0],T=new Matrix$2([[v,E,1,0,0,0,-v*g,-E*g],[A,k,1,0,0,0,-A*w,-k*w],[S,I,1,0,0,0,-S*_,-E*_],[D,R,1,0,0,0,-D*M,-R*M],[0,0,0,v,E,1,-v*p,-E*p],[0,0,0,A,k,1,-A*b,-k*b],[0,0,0,S,I,1,-S*y,-I*y],[0,0,0,D,R,1,-D*x,-R*x]]),$=Matrix$2.columnVector([g,w,_,M,p,b,y,x]),C=new SingularValueDecomposition(T),B=C.solve($),[P,O,N,L,F,U,Y,H]=B.to1DArray(),V=new Matrix$2(n,i);for(let t=0;t<this.channels;t++){for(let e=0;e<n;e++)for(let r=0;r<i;r++)V.set(e,r,projectionPoint(e,r,P,O,N,L,F,U,Y,H,this,t));m.setMatrix(V,{channel:t})}return m}function crop(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{x:e=0,y:r=0,width:i=this.width-e,height:n=this.height-r}=t;if(this.checkProcessable("crop",{bitDepth:[1,8,16]}),e=Math.round(e),r=Math.round(r),i=Math.round(i),n=Math.round(n),e>this.width-1||r>this.height-1)throw new RangeError(`crop: origin (x:${e}, y:${r}) out of range (${this.width-1}; ${this.height-1})`);if(i<=0||n<=0)throw new RangeError(`crop: width and height (width:${i}; height:${n}) must be positive numbers`);if(e<0||r<0)throw new RangeError(`crop: x and y (x:${e}, y:${r}) must be positive numbers`);if(i>this.width-e||n>this.height-r)throw new RangeError(`crop: (x: ${e}, y:${r}, width:${i}, height:${n}) size is out of range`);let s=this;if(1===this.bitDepth){s=cropBinary(this,new Image(i,n,{kind:"BINARY",parent:this}),e,r,i,n)}else{s=cropDefault(this,Image.createFrom(this,{width:i,height:n,position:[e,r]}),e,r,i,n)}return s}function cropDefault(t,e,r,i,n,s){let o=n*t.channels,a=i+s,l=0,h=r*t.channels;for(let r=i;r<a;r++){let i=r*t.width*t.channels+h,n=i+o;for(;i<n;i++)e.data[l++]=t.data[i]}return e}function cropBinary(t,e,r,i,n,s){let o=n*t.channels,a=i+s,l=0,h=r*t.channels;for(let r=i;r<a;r++){let i=r*t.width*t.channels+h,n=i+o;for(;i<n;i++)t.getBit(i)&&e.setBit(l),++l}return e}function cropAlpha(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.checkProcessable("cropAlpha",{alpha:1});const{threshold:e=this.maxValue}=t;let r=findLeft(this,e,this.components);if(-1===r)throw new Error("Could not find new dimensions. Threshold may be too high.");let i=findTop(this,e,this.components,r),n=findBottom(this,e,this.components,r),s=findRight(this,e,this.components,r,i,n);return this.crop({x:r,y:i,width:s-r+1,height:n-i+1})}function findLeft(t,e,r){for(let i=0;i<t.width;i++)for(let n=0;n<t.height;n++)if(t.getValueXY(i,n,r)>=e)return i;return-1}function findTop(t,e,r,i){for(let n=0;n<t.height;n++)for(let s=i;s<t.width;s++)if(t.getValueXY(s,n,r)>=e)return n;return-1}function findBottom(t,e,r,i){for(let n=t.height-1;n>=0;n--)for(let s=i;s<t.width;s++)if(t.getValueXY(s,n,r)>=e)return n;return-1}function findRight(t,e,r,i,n,s){for(let o=t.width-1;o>=i;o--)for(let i=n;i<=s;i++)if(t.getValueXY(o,i,r)>=e)return o;return-1}function getFactor(t){if("string"==typeof t){const e=t[t.length-1];t=parseFloat(t),"%"===e&&(t/=100)}return t}function getThreshold$1(t,e){if(!e)throw Error("getThreshold : the maxValue should be specified");if("string"==typeof t){if("%"!==t[t.length-1])throw Error("getThreshold : if the value is a string it must finish by %");return parseFloat(t)/100*e}if("number"==typeof t)return t<1?t*e:t;throw Error("getThreshold : the value is not valid")}function factorDimensions(t,e,r){t=getFactor(t);let i=Math.round(t*e),n=Math.round(t*r);return i<=0&&(i=1),n<=0&&(n=1),{width:i,height:n}}function checkRow(t,e){if(e<0||e>=t.height)throw new RangeError(`row must be included between 0 and ${t.height-1}. Current value: ${e}`)}function checkColumn(t,e){if(e<0||e>=t.width)throw new RangeError(`column must be included between 0 and ${t.width-1}. Current value: ${e}`)}function checkChannel(t,e){if(e<0||e>=t.channels)throw new RangeError(`channel must be included between 0 and ${t.channels-1}. Current value: ${e}`)}const validInterpolations={nearestneighbor:"nearestNeighbor",nearestneighbour:"nearestNeighbor",bilinear:"bilinear"};function checkInterpolation(t){if("string"!=typeof t)throw new TypeError("interpolation must be a string");if(t=t.toLowerCase(),!validInterpolations[t])throw new RangeError(`invalid interpolation algorithm: ${t}`);return validInterpolations[t]}function nearestNeighbor(t,e,r){const i=this.width/e,n=this.height/r;if(this.bitDepth>1)for(let s=0;s<e;s++){const e=Math.floor((s+.5)*i);for(let i=0;i<r;i++){const r=Math.floor((i+.5)*n);for(let n=0;n<this.channels;n++)t.setValueXY(s,i,n,this.getValueXY(e,r,n))}}else for(let s=0;s<e;s++){const e=Math.floor((s+.5)*i);for(let i=0;i<r;i++){const r=Math.floor((i+.5)*n);this.getBitXY(e,r)&&t.setBitXY(s,i)}}}function resize(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{factor:e=1,interpolation:r=validInterpolations.nearestneighbor,preserveAspectRatio:i=!0}=t,n=checkInterpolation(r);let s=t.width,o=t.height;if(s||(s=o&&i?Math.round(o*(this.width/this.height)):this.width),o||(o=i?Math.round(s*(this.height/this.width)):this.height),({width:s,height:o}=factorDimensions(e,s,o)),s===this.width&&o===this.height){const t=this.clone();return t.position=[0,0],t}let a=Math.round((this.width-s)/2),l=Math.round((this.height-o)/2);const h=Image.createFrom(this,{width:s,height:o,position:[a,l]});if(n!==validInterpolations.nearestneighbor)throw new Error(`unsupported resize interpolation: ${n}`);return nearestNeighbor.call(this,h,s,o),h}function hsv(){this.checkProcessable("hsv",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let t=Image.createFrom(this,{colorModel:HSV}),e=0,r=this.data;for(let i=0;i<r.length;i+=this.channels){let n=r[i],s=r[i+1],o=r[i+2],a=Math.min(n,s,o),l=Math.max(n,s,o),h=l-a,c=0,u=0===l?0:h/l,f=l;if(l!==a){switch(l){case n:c=(s-o)/h+(s<o?6:0);break;case s:c=(o-n)/h+2;break;case o:c=(n-s)/h+4;break;default:throw new Error("unreachable")}c/=6}t.data[e++]=c*this.maxValue,t.data[e++]=u*this.maxValue,t.data[e++]=f,this.alpha&&(t.data[e++]=r[i+3])}return t}function hsl$1(){this.checkProcessable("hsl",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let t=Image.createFrom(this,{colorModel:HSL}),e=Math.floor(this.maxValue/2),r=0,i=this.data;for(let n=0;n<i.length;n+=this.channels){let s=i[n],o=i[n+1],a=i[n+2],l=Math.max(s,o,a),h=Math.min(s,o,a),c=0,u=0,f=(l+h)/2;if(l!==h){let t=l-h;switch(u=f>e?t/(2-l-h):t/(l+h),l){case s:c=(o-a)/t+(o<a?6:0);break;case o:c=(a-s)/t+2;break;case a:c=(s-o)/t+4;break;default:throw new Error("unreachable")}c/=6}t.data[r++]=c*this.maxValue,t.data[r++]=u*this.maxValue,t.data[r++]=f,this.alpha&&(t.data[r++]=i[n+3])}return t}function cmyk(){this.checkProcessable("cmyk",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let t=Image.createFrom(this,{components:4,colorModel:CMYK$1}),e=0,r=this.data;for(let i=0;i<r.length;i+=this.channels){let n=r[i],s=r[i+1],o=r[i+2],a=Math.min(this.maxValue-n,this.maxValue-s,this.maxValue-o),l=(this.maxValue-n-a)/(1-a/this.maxValue),h=(this.maxValue-s-a)/(1-a/this.maxValue),c=(this.maxValue-o-a)/(1-a/this.maxValue);t.data[e++]=Math.round(l),t.data[e++]=Math.round(h),t.data[e++]=Math.round(c),t.data[e++]=Math.round(a),this.alpha&&(t.data[e++]=r[i+3])}return t}function rgba8(){return new Image(this.width,this.height,this.getRGBAData(),{kind:"RGBA",parent:this})}const methods$1={luma709:(t,e,r)=>6966*t+23436*e+2366*r>>15,luma601:(t,e,r)=>9798*t+19235*e+3735*r>>15,maximum:(t,e,r)=>Math.max(t,e,r),minimum:(t,e,r)=>Math.min(t,e,r),average:(t,e,r)=>(t+e+r)/3>>0,minmax:(t,e,r)=>(Math.max(t,e,r)+Math.min(t,e,r))/2,red:t=>t,green:(t,e)=>e,blue:(t,e,r)=>r,cyan(t,e,r,i){let n=methods$1.black(t,e,r,i);return(i.maxValue-t-n)/(1-n/i.maxValue)>>0},magenta(t,e,r,i){let n=methods$1.black(t,e,r,i);return(i.maxValue-e-n)/(1-n/i.maxValue)>>0},yellow(t,e,r,i){let n=methods$1.black(t,e,r,i);return(i.maxValue-r-n)/(1-n/i.maxValue)>>0},black:(t,e,r,i)=>Math.min(i.maxValue-t,i.maxValue-e,i.maxValue-r),hue(t,e,r,i){let n=methods$1.min(t,e,r),s=methods$1.max(t,e,r);if(s===n)return 0;let o=0,a=s-n;switch(s){case t:o=(e-r)/a+(e<r?6:0);break;case e:o=(r-t)/a+2;break;case r:o=(t-e)/a+4;break;default:throw new Error("unreachable")}return o/6*i.maxValue>>0},saturation(t,e,r,i){let n=methods$1.min(t,e,r),s=methods$1.max(t,e,r);return 0===s?0:(s-n)/s*i.maxValue},lightness(t,e,r){let i=methods$1.min(t,e,r);return(methods$1.max(t,e,r)+i)/2}};Object.defineProperty(methods$1,"luminosity",{enumerable:!1,value:methods$1.lightness}),Object.defineProperty(methods$1,"luminance",{enumerable:!1,value:methods$1.lightness}),Object.defineProperty(methods$1,"min",{enumerable:!1,value:methods$1.minimum}),Object.defineProperty(methods$1,"max",{enumerable:!1,value:methods$1.maximum}),Object.defineProperty(methods$1,"brightness",{enumerable:!1,value:methods$1.maximum});const names$1={};function grey(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{algorithm:e="luma709",keepAlpha:r=!1,mergeAlpha:i=!0}=t;if("string"!=typeof e&&"function"!=typeof e)throw new TypeError("algorithm must be a string or a function");this.checkProcessable("grey",{bitDepth:[8,16],alpha:[0,1]}),1===this.components&&(e="red"),r&=this.alpha,i&=this.alpha,r&&(i=!1);let n,s=getOutputImage(this,t,{components:1,alpha:r,colorModel:GREY$1});if("function"==typeof e)n=e;else if(n=methods$1[e.toLowerCase()],!n)throw new Error(`unsupported grey algorithm: ${e}`);let o=0;for(let t=0;t<this.data.length;t+=this.channels)i?s.data[o++]=clamp(n(this.data[t],this.data[t+1],this.data[t+2],this)*this.data[t+this.components]/this.maxValue,this):(s.data[o++]=clamp(n(this.data[t],this.data[t+1],this.data[t+2],this),this),s.alpha&&(s.data[o++]=this.data[t+this.components]));return s}function huang(t){let e=0;for(let r=0;r<t.length;r++)if(0!==t[r]){e=r;break}let r=t.length-1;for(let i=t.length-1;i>=e;i--)if(0!==t[i]){r=i;break}let i=1/(r-e),n=new Array(t.length),s=0,o=0;for(let r=e;r<t.length;r++)s+=r*t[r],o+=t[r],n[r]=s/o;let a=new Array(t.length);s=o=0;for(let e=r;e>0;e--)s+=e*t[e],o+=t[e],a[e-1]=s/o;let l=-1,h=Number.MAX_VALUE;for(let e=0;e<t.length;e++){let r,s=0;for(let o=0;o<=e;o++)r=1/(1+i*Math.abs(o-n[e])),r<1e-6||r>.999999||(s+=t[o]*(-r*Math.log(r)-(1-r)*Math.log(1-r)));for(let n=e+1;n<t.length;n++)r=1/(1+i*Math.abs(n-a[e])),r<1e-6||r>.999999||(s+=t[n]*(-r*Math.log(r)-(1-r)*Math.log(1-r)));s<h&&(h=s,l=e)}return l}function intermodes(t){let e=t.slice(),r=0;for(;!bimodalTest$1(e);){let i=0,n=0,s=e[0];for(let r=0;r<t.length-1;r++)i=n,n=s,s=e[r+1],e[r]=(i+n+s)/3;if(e[t.length-1]=(n+s)/3,r++,r>1e4)throw new Error("Intermodes Threshold not found after 10000 iterations")}let i=0;for(let r=1;r<t.length-1;r++)e[r-1]<e[r]&&e[r+1]<e[r]&&(i+=r);return Math.floor(i/2)}function bimodalTest$1(t){let e=!1,r=0;for(let e=1;e<t.length-1;e++)if(t[e-1]<t[e]&&t[e+1]<t[e]&&(r++,r>2))return!1;return 2===r&&(e=!0),e}function isodata(t){let e,r,i,n,s=0;for(let e=1;e<t.length;e++)if(t[e]>0){s=e+1;break}for(;;){e=0,i=0;for(let r=0;r<s;r++)i+=t[r],e+=t[r]*r;n=0,r=0;for(let e=s+1;e<t.length;e++)r+=t[e],n+=t[e]*e;if(i>0&&r>0&&(e/=i,n/=r,s===Math.round((e+n)/2)))break;if(s++,s>t.length-2)throw new Error("Threshold not found")}return s}function li(t,e){let r,i,n,s,o,a,l,h,c,u,f,d;f=.5,u=0;for(let e=0;e<t.length;e++)u+=e*t[e];u/=e,l=u;do{a=l,r=a+.5|0,i=0,s=0;for(let e=0;e<=r;e++)i+=e*t[e],s+=t[e];h=0===s?0:i/s,n=0,o=0;for(let e=r+1;e<t.length;e++)n+=e*t[e],o+=t[e];c=0===o?0:n/o,d=(h-c)/(Math.log(h)-Math.log(c)),l=d<-Number.EPSILON?d-.5|0:d+.5|0}while(Math.abs(l-a)>.5);return r}function maxEntropy(t,e){let r=new Array(t.length);for(let i=0;i<t.length;i++)r[i]=t[i]/e;let i=new Array(t.length),n=new Array(t.length);i[0]=r[0],n[0]=1-i[0];for(let e=1;e<t.length;e++)i[e]=i[e-1]+r[e],n[e]=1-i[e];let s=0;for(let e=0;e<t.length;e++)if(Math.abs(i[e])>=Number.EPSILON){s=e;break}let o=t.length-1;for(let e=t.length-1;e>=s;e--)if(Math.abs(n[e])>=Number.EPSILON){o=e;break}let a,l,h,c=-1,u=Number.MIN_VALUE;for(let e=s;e<=o;e++){l=0;for(let n=0;n<=e;n++)0!==t[n]&&(l-=r[n]/i[e]*Math.log(r[n]/i[e]));h=0;for(let i=e+1;i<t.length;i++)0!==t[i]&&(h-=r[i]/n[e]*Math.log(r[i]/n[e]));a=l+h,u<a&&(u=a,c=e)}return c}function mean$1(t,e){let r=0;for(let e=0;e<t.length;e++)r+=e*t[e];return Math.floor(r/e)}function minError(t,e){let r,i,n,s,o,a,l,h,c,u,f,d,m=-2,g=0;for(let e=0;e<t.length;e++)g+=e*t[e];for(g/=e,r=g;r!==m;){let e=sumA(t,r),g=sumA(t,t.length-1),p=sumB(t,r),w=sumB(t,t.length-1),b=sumC(t,r);if(i=p/e,n=(w-p)/(g-e),s=e/g,o=(g-e)/g,a=b/e-i*i,l=(sumC(t,t.length-1)-b)/(g-e)-n*n,h=1/a-1/l,c=i/a-n/l,u=i*i/a-n*n/l+Math.log10(a*(o*o)/(l*(s*s))),f=c*c-h*u,f<0)return r;m=r,d=(c+Math.sqrt(f))/h,r=isNaN(d)?m:Math.floor(d)}return r}function sumA(t,e){let r=0;for(let i=0;i<=e;i++)r+=t[i];return r}function sumB(t,e){let r=0;for(let i=0;i<=e;i++)r+=i*t[i];return r}function sumC(t,e){let r=0;for(let i=0;i<=e;i++)r+=i*i*t[i];return r}function minimum(t){if(t.length<2)return 0;let e=0,r=-1,i=-1,n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e],t[e]>0&&(i=e);for(;!bimodalTest(n);)if(n=smoothed(n),e++,e>1e4)return r;return r=minimumBetweenPeeks(n,i),r}function smoothed(t){let e=new Array(t.length);for(let r=1;r<t.length-1;r++)e[r]=(t[r-1]+t[r]+t[r+1])/3;return e[0]=(t[0]+t[1])/3,e[t.length-1]=(t[t.length-2]+t[t.length-1])/3,e}function minimumBetweenPeeks(t,e){let r;for(let i=1;i<e;i++)if(t[i-1]>t[i]&&t[i+1]>=t[i]){r=i;break}return r}function bimodalTest(t){let e=t.length,r=!1,i=0;for(let r=1;r<e-1;r++)if(t[r-1]<t[r]&&t[r+1]<t[r]&&(i++,i>2))return!1;return 2===i&&(r=!0),r}function moments(t,e){let r,i,n,s,o,a,l=0,h=0,c=0,u=0,f=-1,d=t.length,m=new Array(d);for(let r=0;r<d;r++)m[r]=t[r]/e;for(let t=0;t<d;t++)l+=t*m[t],h+=t*t*m[t],c+=t*t*t*m[t];i=1*h-l*l,n=(-h*h+l*c)/i,s=(1*-c+h*l)/i,o=.5*(-s-Math.sqrt(s*s-4*n)),a=.5*(-s+Math.sqrt(s*s-4*n)),r=(a-l)/(a-o);for(let t=0;t<d;t++)if(u+=m[t],u>r){f=t;break}return f}function otsu(t,e){let r=0,i=0,n=0,s=0,o=0;for(let e=0;e<t.length;e++)o+=e*t[e];for(let a=0;a<t.length;a++){i+=t[a];const l=e-i;if(0===i||0===l)continue;r+=a*t[a];const h=(o-r)/l,c=i*l*(r/i-h)*(r/i-h);c>=n&&(s=a,n=c)}return s}function percentile(t){let e=-1,r=new Array(t.length),i=partialSum(t,t.length-1),n=1;for(let s=0;s<t.length;s++)r[s]=Math.abs(partialSum(t,s)/i-.5),r[s]<n&&(n=r[s],e=s);return e}function partialSum(t,e){let r=0;for(let i=0;i<=e;i++)r+=t[i];return r}function renyiEntropy(t,e){let r,i,n,s=new Array(t.length),o=new Array(t.length),a=new Array(t.length),l=0,h=0,c=0,u=0,f=0,d=0;for(let r=0;r<t.length;r++)s[r]=t[r]/e;o[0]=s[0],a[0]=1-o[0];for(let e=1;e<t.length;e++)o[e]=o[e-1]+s[e],a[e]=1-o[e];i=0;for(let e=0;e<t.length;e++)if(Math.abs(o[e])>=Number.EPSILON){i=e;break}n=t.length-1;for(let e=t.length-1;e>=i;e--)if(Math.abs(a[e])>=Number.EPSILON){n=e;break}for(let e=i;e<=n;e++){let r=0,i=0,n=0;for(let a=0;a<=e;a++)0!==t[a]&&(r-=s[a]/o[e]*Math.log(s[a]/o[e])),i+=Math.sqrt(s[a]/o[e]),n+=s[a]*s[a]/(o[e]*o[e]);let m=0,g=0,p=0;for(let r=e+1;r<t.length;r++)0!==t[r]&&(m-=s[r]/a[e]*Math.log(s[r]/a[e])),g+=Math.sqrt(s[r]/a[e]),p+=s[r]*s[r]/(a[e]*a[e]);let w=r+m,b=2*(i*g>0?Math.log(i*g):0),_=-1*(n*p>0?Math.log(n*p):0);w>u&&(u=w,l=e),b>f&&(f=b,h=e),_>d&&(d=_,c=e)}let m,g=[l,h,c];g.sort(((t,e)=>t-e)),m=Math.abs(g[0]-g[1])<=5?Math.abs(g[1]-g[2])<=5?[1,2,1]:[0,1,3]:Math.abs(g[1]-g[2])<=5?[3,1,0]:[1,2,1];let p=o[g[2]]-o[g[0]];return r=Math.round(g[0]*(o[g[0]]+.25*p*m[0])+.25*g[1]*p*m[1]+g[2]*(a[g[2]]+.25*p*m[2])),r}function shanbhag(t,e){let r=new Array(t.length);for(let i=0;i<t.length;i++)r[i]=t[i]/e;let i=new Array(t.length),n=new Array(t.length);i[0]=r[0],n[0]=1-i[0];for(let e=1;e<t.length;e++)i[e]=i[e-1]+r[e],n[e]=1-i[e];let s=0;for(let e=0;e<t.length;e++)if(Math.abs(i[e])>=Number.EPSILON){s=e;break}let o=t.length-1;for(let e=t.length-1;e>=s;e--)if(Math.abs(n[e])>=Number.EPSILON){o=e;break}let a,l,h,c,u=-1,f=Number.MAX_VALUE;for(let e=s;e<=o;e++){h=0,a=.5/i[e];for(let t=1;t<=e;t++)h-=r[t]*Math.log(1-a*i[t-1]);h*=a,c=0,a=.5/n[e];for(let i=e+1;i<t.length;i++)c-=r[i]*Math.log(1-a*n[i]);c*=a,l=Math.abs(h-c),l<f&&(f=l,u=e)}return u}function triangle$1(t){let e=0,r=0,i=0,n=0;for(let r=0;r<t.length;r++)if(t[r]>0){e=r;break}e>0&&e--;for(let e=t.length-1;e>0;e--)if(t[e]>0){n=e;break}n<t.length-1&&n++;for(let e=0;e<t.length;e++)t[e]>r&&(i=e,r=t[e]);let s,o,a,l=!1;if(i-e<n-i){l=!0;let r=0,s=t.length-1;for(;r<s;){let e=t[r];t[r]=t[s],t[s]=e,r++,s--}e=t.length-1-n,i=t.length-1-i}if(e===i)return e;s=t[i],o=e-i,a=Math.sqrt(s*s+o*o),s/=a,o/=a,a=s*e+o*t[e];let h=e,c=0;for(let r=e+1;r<=i;r++){let e=s*r+o*t[r]-a;e>c&&(h=r,c=e)}if(h--,l){let e=0,r=t.length-1;for(;e<r;){let i=t[e];t[e]=t[r],t[r]=i,e++,r--}return t.length-1-h}return h}function yen(t,e){let r=new Array(t.length);for(let i=0;i<t.length;i++)r[i]=t[i]/e;let i=new Array(t.length);i[0]=r[0];for(let e=1;e<t.length;e++)i[e]=i[e-1]+r[e];let n=new Array(t.length);n[0]=r[0]*r[0];for(let e=1;e<t.length;e++)n[e]=n[e-1]+r[e]*r[e];let s=new Array(t.length);s[t.length-1]=0;for(let e=t.length-2;e>=0;e--)s[e]=s[e+1]+r[e+1]*r[e+1];let o,a=-1,l=Number.MIN_VALUE;for(let e=0;e<t.length;e++)o=-1*(n[e]*s[e]>0?Math.log(n[e]*s[e]):0)+2*(i[e]*(1-i[e])>0?Math.log(i[e]*(1-i[e])):0),o>l&&(l=o,a=e);return a}Object.keys(methods$1).forEach((t=>{names$1[t]=t}));const methods={huang:huang,intermodes:intermodes,isodata:isodata,li:li,maxentropy:maxEntropy,mean:mean$1,minerror:minError,minimum:minimum,moments:moments,otsu:otsu,percentile:percentile,renyientropy:renyiEntropy,shanbhag:shanbhag,triangle:triangle$1,yen:yen},names={};function getThreshold(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{algorithm:e=names.otsu}=t;this.checkProcessable("getThreshold",{components:1,bitDepth:[8,16]});let r=methods[e.toLowerCase()];if(r){return r(this.getHistogram(),this.size)}throw new Error(`unknown thresholding algorithm: ${e}`)}Object.keys(methods).forEach((t=>{names[t]=t}));const THRESHOLD="threshold";function mask(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{algorithm:e=THRESHOLD,threshold:r=.5,useAlpha:i=!0,invert:n=!1}=t;this.checkProcessable("mask",{components:1,bitDepth:[8,16]}),r=e===THRESHOLD?getThreshold$1(r,this.maxValue):getThreshold.call(this,t);let s=new Image(this.width,this.height,{kind:"BINARY",parent:this}),o=0;if(this.alpha&&i)for(let t=0;t<this.data.length;t+=this.channels){let e=this.data[t]+(this.maxValue-this.data[t])*(this.maxValue-this.data[t+1])/this.maxValue;(n&&e<=r||!n&&e>=r)&&s.setBit(o),o++}else for(let t=0;t<this.data.length;t+=this.channels)(n&&this.data[t]<=r||!n&&this.data[t]>=r)&&s.setBit(o),o++;return s}function copyImage(t,e,r,i){let n=t.width,s=t.height,o=e.width,a=t.channels;for(let l=0;l<n;l++)for(let h=0;h<s;h++)for(let s=0;s<a;s++){let c=(h*n+l)*a+s,u=((i+h)*o+r+l)*a+s;e.data[u]=t.data[c]}}function pad(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{size:e=0,algorithm:r="copy",color:i}=t;if(this.checkProcessable("pad",{bitDepth:[8,16]}),"set"===r){if(i.length!==this.channels)throw new Error(`pad: the color array must have the same length as the number of channels. Here: ${this.channels}`);for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=.001)}else i=newArray$1(this.channels,null);Array.isArray(e)||(e=[e,e]);let n=this.width+2*e[0],s=this.height+2*e[1],o=this.channels,a=Image.createFrom(this,{width:n,height:s});copyImage(this,a,e[0],e[1]);for(let t=e[0];t<n-e[0];t++)for(let r=0;r<o;r++){let l=i[r]||a.data[(e[1]*n+t)*o+r];for(let i=0;i<e[1];i++)a.data[(i*n+t)*o+r]=l;l=i[r]||a.data[((s-e[1]-1)*n+t)*o+r];for(let i=s-e[1];i<s;i++)a.data[(i*n+t)*o+r]=l}for(let t=0;t<s;t++)for(let r=0;r<o;r++){let s=i[r]||a.data[(t*n+e[0])*o+r];for(let i=0;i<e[0];i++)a.data[(t*n+i)*o+r]=s;s=i[r]||a.data[(t*n+n-e[0]-1)*o+r];for(let i=n-e[0];i<n;i++)a.data[(t*n+i)*o+r]=s}return a}function colorDepth(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;if(this.checkProcessable("colorDepth",{bitDepth:[1,8,16]}),![8,16].includes(t))throw Error("You need to specify the new colorDepth as 8 or 16");if(this.bitDepth===t)return this.clone();let e=Image.createFrom(this,{bitDepth:t});switch(t){case 8:if(1===this.bitDepth)for(let t=0;t<this.size;t++)this.getBit(t)&&(e.data[t]=255);else for(let t=0;t<this.data.length;t++)e.data[t]=this.data[t]>>8;break;case 16:if(1===this.bitDepth)for(let t=0;t<this.size;t++)this.getBit(t)&&(e.data[t]=65535);else for(let t=0;t<this.data.length;t++)e.data[t]=this.data[t]<<8|this.data[t];break;default:throw new Error("colorDepth conversion unexpected case")}return e}function rotateFree(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{interpolation:r=validInterpolations.nearestneighbor,width:i=this.width,height:n=this.height}=e;if("number"!=typeof t)throw new TypeError("degrees must be a number");const s=checkInterpolation(r),o=t*Math.PI/180,a=Math.floor(Math.abs(i*Math.cos(o))+Math.abs(n*Math.sin(o))),l=Math.floor(Math.abs(n*Math.cos(o))+Math.abs(i*Math.sin(o))),h=Math.cos(-o),c=Math.sin(-o);let u=a/2,f=l/2;a%2==0?(u-=.5,l%2==0?f-=.5:f=Math.floor(f)):(u=Math.floor(u),l%2==0?f-=.5:f=Math.floor(f));const d=Math.floor(i/2-u),m=Math.floor(n/2-f);if(1===this.bitDepth){const t=new Image(a,l,{kind:"BINARY",parent:this});switch(s){case validInterpolations.nearestneighbor:return rotateBinaryNearestNeighbor(this,t,d,m,u,f,h,c);case validInterpolations.bilinear:return rotateBinaryBilinear(this,t,d,m,u,f,h,c);default:throw new Error(`unsupported rotate interpolation: ${s}`)}}else{const t=Image.createFrom(this,{width:a,height:l});switch(s){case validInterpolations.nearestneighbor:return rotateNearestNeighbor(this,t,d,m,u,f,h,c);case validInterpolations.bilinear:return rotateBilinear(this,t,d,m,u,f,h,c);default:throw new Error(`unsupported rotate interpolation: ${s}`)}}}function rotateNearestNeighbor(t,e,r,i,n,s,o,a){for(let l=0;l<e.width;l+=1)for(let h=0;h<e.height;h+=1)for(let c=0;c<t.channels;c++){let u=Math.round((l-n)*o-(h-s)*a+n)+r,f=Math.round((h-s)*o+(l-n)*a+s)+i;u<0||u>=t.width||f<0||f>=t.height?1===t.alpha&&c===t.channels-1?e.setValueXY(l,h,c,0):e.setValueXY(l,h,c,t.maxValue):e.setValueXY(l,h,c,t.getValueXY(u,f,c))}return e}function rotateBinaryNearestNeighbor(t,e,r,i,n,s,o,a){for(let l=0;l<e.width;l+=1)for(let h=0;h<e.height;h+=1){let c=Math.round((l-n)*o-(h-s)*a+n)+r,u=Math.round((h-s)*o+(l-n)*a+s)+i;(c<0||c>=t.width||u<0||u>=t.height||t.getBitXY(c,u))&&e.setBitXY(l,h)}return e}function rotateBilinear(t,e,r,i,n,s,o,a){let l=t.width*t.channels;for(let h=0;h<e.height;h++)for(let c=0;c<e.width;c++){let u=(c-n)*o-(h-s)*a+n+r,f=(h-s)*o+(c-n)*a+s+i,d=0|u,m=0|f,g=u-d,p=f-m;for(let r=0;r<t.channels;r++)if(u<0||u>=t.width||f<0||f>=t.height)1===t.alpha&&r===t.channels-1?e.setValueXY(c,h,r,0):e.setValueXY(c,h,r,t.maxValue);else{let i=(m*t.width+d)*t.channels+r,n=t.data[i],s=t.data[i+t.channels],o=t.data[i+l],a=n+g*(s-n)+p*(o-n)+g*p*(n-s-o+t.data[i+l+t.channels])|0;e.setValueXY(c,h,r,a)}}return e}function rotateBinaryBilinear(t,e,r,i,n,s,o,a){let l=t.width;for(let h=0;h<e.height;h++)for(let c=0;c<e.width;c++){let u=(c-n)*o-(h-s)*a+n+r,f=(h-s)*o+(c-n)*a+s+i,d=0|u,m=0|f,g=u-d,p=f-m;if(u<0||u>=t.width||f<0||f>=t.height)e.setBitXY(c,h);else{let r=m*t.width+d,i=t.getBit(r),n=t.getBit(r+1),s=t.getBit(r+l);(i|g&n-i|p&s-i|g&p&i-n-s+t.getBit(r+1+l))>0&&e.setBitXY(c,h)}}return e}function rotate$1(t,e){if(this.checkProcessable("rotate",{bitDepth:[1,8,16]}),"number"!=typeof t)throw new TypeError("angle must be a number");switch(t<0&&(t=360*Math.ceil(-t/360)+t),t%360){case 0:return this.clone();case 90:return rotateRight.call(this);case 180:return rotate180.call(this);case 270:return rotateLeft.call(this);default:return rotateFree.call(this,t,e)}}function rotateLeft(){if(1===this.bitDepth){const t=new Image(this.height,this.width,{kind:"BINARY",parent:this}),e=t.height-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)this.getBitXY(i,r)&&t.setBitXY(r,e-i);return t}{const t=Image.createFrom(this,{width:this.height,height:this.width}),e=t.height-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)for(let n=0;n<this.channels;n++)t.setValueXY(r,e-i,n,this.getValueXY(i,r,n));return t}}function rotateRight(){if(1===this.bitDepth){const t=new Image(this.height,this.width,{kind:"BINARY",parent:this}),e=t.width-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)this.getBitXY(i,r)&&t.setBitXY(e-r,i);return t}{const t=Image.createFrom(this,{width:this.height,height:this.width}),e=t.width-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)for(let n=0;n<this.channels;n++)t.setValueXY(e-r,i,n,this.getValueXY(i,r,n));return t}}function rotate180(){if(1===this.bitDepth){const t=new Image(this.width,this.height,{kind:"BINARY",parent:this}),e=t.width-1,r=t.height-1;for(let i=0;i<this.height;i++)for(let n=0;n<this.width;n++)this.getBitXY(n,i)&&t.setBitXY(e-n,r-i);return t}{const t=Image.createFrom(this),e=t.width-1,r=t.height-1;for(let i=0;i<this.height;i++)for(let n=0;n<this.width;n++)for(let s=0;s<this.channels;s++)t.setValueXY(e-n,r-i,s,this.getValueXY(n,i,s));return t}}function insert(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=getImageParameters(t);this.checkProcessable("insert",r);let{x:i=0,y:n=0}=e;const s=getOutputImageOrInPlace(this,e,{copy:!0}),o=Math.min(s.height,n+t.height),a=Math.min(s.width,i+t.width);if(1===s.bitDepth)for(let e=n;e<o;e++)for(let r=i;r<a;r++){t.getBitXY(r-i,e-n)?s.setBitXY(r,e):s.clearBitXY(r,e)}else for(let e=n;e<o;e++)for(let r=i;r<a;r++)s.setPixelXY(r,e,t.getPixelXY(r-i,e-n));return s}function setBorder(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{size:e=0,algorithm:r="copy",color:i}=t;if(this.checkProcessable("setBorder",{bitDepth:[8,16,32,64]}),"set"===r){if(i.length!==this.channels)throw new Error(`setBorder: the color array must have the same length as the number of channels. Here: ${this.channels}`);for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=.001)}else i=newArray$1(this.channels,null);Array.isArray(e)||(e=[e,e]);let n=e[0],s=e[1],o=this.channels;for(let t=n;t<this.width-n;t++)for(let e=0;e<o;e++){let r=i[e]||this.data[(t+this.width*s)*o+e];for(let i=0;i<s;i++)this.data[(i*this.width+t)*o+e]=r;r=i[e]||this.data[(t+this.width*(this.height-s-1))*o+e];for(let i=this.height-s;i<this.height;i++)this.data[(i*this.width+t)*o+e]=r}for(let t=0;t<this.height;t++)for(let e=0;e<o;e++){let r=i[e]||this.data[(t*this.width+n)*o+e];for(let i=0;i<n;i++)this.data[(t*this.width+i)*o+e]=r;r=i[e]||this.data[(t*this.width+this.width-n-1)*o+e];for(let i=this.width-n;i<this.width;i++)this.data[(t*this.width+i)*o+e]=r}return this}function split(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{preserveAlpha:e=!0}=t;if(this.checkProcessable("split",{bitDepth:[8,16]}),1===this.components)return new Stack([this.clone()]);let r=new Stack,i=this.data;if(this.alpha&&e)for(let t=0;t<this.components;t++){let e=Image.createFrom(this,{components:1,alpha:!0,colorModel:GREY$1}),n=0;for(let r=0;r<i.length;r+=this.channels)e.data[n++]=i[r+t],e.data[n++]=i[r+this.components];r.push(e)}else for(let t=0;t<this.channels;t++){let e=Image.createFrom(this,{components:1,alpha:!1,colorModel:GREY$1}),n=0;for(let r=0;r<i.length;r+=this.channels)e.data[n++]=i[r+t];r.push(e)}return r}function getChannel(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{keepAlpha:r=!1,mergeAlpha:i=!1}=e;r&=this.alpha,i&=this.alpha,this.checkProcessable("getChannel",{bitDepth:[8,16]}),t=validateChannel(this,t);let n=Image.createFrom(this,{components:1,alpha:r,colorModel:GREY$1}),s=0;for(let e=0;e<this.data.length;e+=this.channels)i?n.data[s++]=this.data[e+t]*this.data[e+this.components]/this.maxValue:(n.data[s++]=this.data[e+t],r&&(n.data[s++]=this.data[e+this.components]));return n}function combineChannels(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultCombineMethod,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mergeAlpha:r=!1,keepAlpha:i=!1}=e;r&=this.alpha,i&=this.alpha,this.checkProcessable("combineChannels",{bitDepth:[8,16]});let n=Image.createFrom(this,{components:1,alpha:i,colorModel:GREY$1}),s=0;for(let e=0;e<this.size;e++){let o=t(this.getPixel(e));r?n.data[s++]=o*this.data[e*this.channels+this.components]/this.maxValue:(n.data[s++]=o,i&&(n.data[s++]=this.data[e*this.channels+this.components]))}return n}function defaultCombineMethod(t){return(t[0]+t[1]+t[2])/3}function setChannel(t,e){if(this.checkProcessable("setChannel",{bitDepth:[8,16]}),e.checkProcessable("setChannel (image parameter check)",{bitDepth:[this.bitDepth],alpha:[0],components:[1]}),e.width!==this.width||e.height!==this.height)throw new Error("Images must have exactly the same width and height");let r=t=validateChannel(this,t);for(let t=0;t<e.data.length;t++)this.data[r]=e.data[t],r+=this.channels;return this}function getSimilarity(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{shift:r=[0,0],average:i,channels:n,defaultAlpha:s,normalize:o,border:a=[0,0]}=e;if(this.checkProcessable("getSimilarity",{bitDepth:[8,16]}),Array.isArray(a)||(a=[a,a]),n=validateArrayOfChannels(this,{channels:n,defaultAlpha:s}),this.bitDepth!==t.bitDepth)throw new Error("Both images must have the same bitDepth");if(this.channels!==t.channels)throw new Error("Both images must have the same number of channels");if(this.colorModel!==t.colorModel)throw new Error("Both images must have the same colorModel");void 0===i&&(i=!0);let l=Math.max(a[0],-r[0]),h=Math.min(this.width-a[0],this.width-r[0]),c=Math.max(a[1],-r[1]),u=Math.min(this.height-a[1],this.height-r[1]),f=newArray$1(n.length,0);for(let e=0;e<n.length;e++){let i=n[e],s=o?this.sum[i]:Math.max(this.sum[i],t.sum[i]),a=o?t.sum[i]:Math.max(this.sum[i],t.sum[i]);if(0!==s&&0!==a)for(let n=l;n<h;n++)for(let o=c;o<u;o++){let l=n*this.multiplierX+o*this.multiplierY+i,h=l+r[0]*this.multiplierX+r[1]*this.multiplierY;f[e]+=Math.min(this.data[l]/s,t.data[h]/a)}}return i?f.reduce(((t,e)=>t+e))/f.length:f}function getPixelsGrid(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{sampling:e=[10,10],painted:r=!1,mask:i}=t;this.checkProcessable("getPixelsGrid",{bitDepth:[8,16],channels:1}),Array.isArray(e)||(e=[e,e]);const n=e[0],s=e[1],o=[],a=[],l=this.width/n,h=this.height/s;let c=Math.floor(l/2);for(let t=0;t<n;t++){let t=Math.floor(h/2);for(let e=0;e<s;e++){let e=Math.round(c),r=Math.round(t);i&&!i.getBitXY(e,r)||(o.push([e,r]),a.push(this.getPixelXY(e,r))),t+=h}c+=l}const u={xyS:o,zS:a};return r&&(u.painted=this.rgba8().paintPoints(o)),u}function Matrix(t,e,r){const i=new Array(t);for(let r=0;r<t;r++)i[r]=new Array(e);if(r)for(let n=0;n<t;n++)for(let t=0;t<e;t++)i[n][t]=r;return i.width=t,i.height=e,Object.setPrototypeOf(i,Matrix.prototype),i}function getBestMatch(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{border:r}=e;if(this.checkProcessable("getChannel",{bitDepth:[8,16]}),this.bitDepth!==t.bitDepth)throw new Error("Both images must have the same bitDepth");if(this.channels!==t.channels)throw new Error("Both images must have the same number of channels");if(this.colorModel!==t.colorModel)throw new Error("Both images must have the same colorModel");let i=new Matrix(t.width,t.height,-1/0),n=Math.floor(t.width/2),s=Math.floor(t.height/2),o=n,a=s,l=!1;for(;!l;){let e=i.localSearch(n,s,-1/0);for(let n=0;n<e.length;n++){let s=e[n],l=this.getSimilarity(t,{border:r,shift:[o-s[0],a-s[1]]});i[s[0]][s[1]]=l}let h=i.localMax(n,s);h.position[0]!==n||h.position[1]!==s?(n=h.position[0],s=h.position[1]):l=!0}return[n-o,s-a]}function getRow(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.checkProcessable("getRow",{bitDepth:[8,16]}),checkRow(this,t),checkChannel(this,e);let r=new Array(this.width),i=0,n=t*this.width*this.channels+e,s=n+this.width*this.channels;for(let t=n;t<s;t+=this.channels)r[i++]=this.data[t];return r}function getColumn(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.checkProcessable("getColumn",{bitDepth:[8,16]}),checkColumn(this,t),checkChannel(this,e);let r=new Array(this.height),i=0,n=this.width*this.channels;for(let s=e+t*this.channels;s<this.data.length;s+=n)r[i++]=this.data[s];return r}function getMatrix(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{channel:e}=t;if(this.checkProcessable("getMatrix",{bitDepth:[8,16]}),void 0===e){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");e=0}let r=new Matrix$2(this.height,this.width);for(let t=0;t<this.height;t++)for(let i=0;i<this.width;i++)r.set(t,i,this.getValueXY(i,t,e));return r}function setMatrix(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t=new Matrix$2(t);let{channel:r}=e;if(this.checkProcessable("getMatrix",{bitDepth:[8,16]}),void 0===r){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");r=0}if(this.width!==t.columns||this.height!==t.rows)throw new RangeError("The size of the matrix must be equal to the size of the image");for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++)this.setValueXY(i,e,r,t.get(e,i))}function getPixelsArray(){this.checkProcessable("getPixelsArray",{bitDepth:[8,16,32]});let t=new Array(this.size),e=0;for(let r=0;r<this.data.length;r+=this.channels){let i=new Array(this.components);for(let t=0;t<this.components;t++)i[t]=this.data[r+t];t[e++]=i}return t}function getIntersection(t){let e=this,r=e.getClosestCommonParent(t),i=e.getRelativePosition(r,{defaultFurther:!0}),n=getRelativePositionForAllPixels(e,i),s=t.getRelativePosition(r,{defaultFurther:!0}),o=getRelativePositionForAllPixels(t,s),a=getCommonSurface(n,o),l={whitePixelsMask1:[],whitePixelsMask2:[],commonWhitePixels:[]};for(let r=0;r<a.length;r++){let n=a[r],o=[n[0]-i[0],n[1]-i[1]],h=[n[0]-s[0],n[1]-s[1]],c=e.getBitXY(o[0],o[1]),u=t.getBitXY(h[0],h[1]);1===c&&1===u&&l.commonWhitePixels.push(n)}for(let t=0;t<n.length;t++){let r,i;0!==t&&(r=Math.floor(t/e.width),i=t%e.width),1===e.getBitXY(r,i)&&l.whitePixelsMask1.push(n[t])}for(let e=0;e<o.length;e++){let r=0,i=0;0!==e&&(r=Math.floor(e/t.width),i=e%t.width),1===t.getBitXY(r,i)&&l.whitePixelsMask2.push(o[e])}return l}function getRelativePositionForAllPixels(t,e){let r=[];for(let i=0;i<t.height;i++)for(let n=0;n<t.width;n++){let t=[i,n];r.push([t[0]+e[0],t[1]+e[1]])}return r}function getCommonSurface(t,e){let r=0,i=0,n=[];for(;r<t.length&&i<e.length;)t[r][0]===e[i][0]&&t[r][1]===e[i][1]?(n.push(t[r]),r++,i++):t[r][0]<e[i][0]||t[r][0]===e[i][0]&&t[r][1]<e[i][1]?r++:i++;return n}function getClosestCommonParent(t){let e,r=getDepth(this),i=getDepth(t);if(e=r>=i?getFurthestParent(this,r):getFurthestParent(t,i),0===r||0===i)return e;let n=this,s=t;for(;r!==i;)if(r>i){if(n=n.parent,null===n)return e;r-=1}else{if(s=s.parent,null===s)return e;i-=1}for(;n!==s&&null!==n&&null!==s;)if(n=n.parent,s=s.parent,null===n||null===s)return e;return n!==s?e:n}function getDepth(t){let e=0,r=t;for(;null!=r.parent;)r=r.parent,e++;return e}function getFurthestParent(t,e){let r=t;for(;e>0;)r=r.parent,e-=1;return r}Matrix.prototype.localMin=function(t,e){let r=this[t][e],i=[t,e];for(let n=Math.max(0,t-1);n<Math.min(this.length,t+2);n++)for(let t=Math.max(0,e-1);t<Math.min(this[0].length,e+2);t++)this[n][t]<r&&(r=this[n][t],i=[n,t]);return{position:i,value:r}},Matrix.prototype.localMax=function(t,e){let r=this[t][e],i=[t,e];for(let n=Math.max(0,t-1);n<Math.min(this.length,t+2);n++)for(let t=Math.max(0,e-1);t<Math.min(this[0].length,e+2);t++)this[n][t]>r&&(r=this[n][t],i=[n,t]);return{position:i,value:r}},Matrix.prototype.localSearch=function(t,e,r){let i=[];for(let n=Math.max(0,t-1);n<Math.min(this.length,t+2);n++)for(let t=Math.max(0,e-1);t<Math.min(this[0].length,e+2);t++)this[n][t]===r&&i.push([n,t]);return i};const defaultOptions$1={lowThreshold:10,highThreshold:30,gaussianBlur:1.1},Gx=[[-1,0,1],[-2,0,2],[-1,0,1]],Gy=[[-1,-2,-1],[0,0,0],[1,2,1]],convOptions={bitDepth:32,mode:"periodic"};function cannyEdgeDetector(t,e){t.checkProcessable("Canny edge detector",{bitDepth:8,channels:1,components:1}),e=Object.assign({},defaultOptions$1,e);const r=t.width,i=t.height,n=t.maxValue,s={sigma:e.gaussianBlur,radius:3},o=t.gaussianFilter(s),a=o.convolution(Gy,convOptions),l=o.convolution(Gx,convOptions),h=l.hypotenuse(a),c=t.constructor,u=new c(r,i,{kind:"GREY",bitDepth:32}),f=new c(r,i,{kind:"GREY",bitDepth:32}),d=new c(r,i,{kind:"GREY"});for(var m=1;m<r-1;m++)for(var g=1;g<i-1;g++){var p=(Math.round(Math.atan2(l.getValueXY(m,g,0),a.getValueXY(m,g,0))*(5/Math.PI))+5)%5;0===p&&(h.getValueXY(m,g,0)<=h.getValueXY(m,g-1,0)||h.getValueXY(m,g,0)<=h.getValueXY(m,g+1,0))||1===p&&(h.getValueXY(m,g,0)<=h.getValueXY(m-1,g+1,0)||h.getValueXY(m,g,0)<=h.getValueXY(m+1,g-1,0))||2===p&&(h.getValueXY(m,g,0)<=h.getValueXY(m-1,g,0)||h.getValueXY(m,g,0)<=h.getValueXY(m+1,g,0))||3===p&&(h.getValueXY(m,g,0)<=h.getValueXY(m-1,g-1,0)||h.getValueXY(m,g,0)<=h.getValueXY(m+1,g+1,0))||u.setValueXY(m,g,0,h.getValueXY(m,g,0))}for(m=0;m<r*i;++m){var w=u.data[m],b=0;w>e.highThreshold&&(b++,d.data[m]=n),w>e.lowThreshold&&b++,f.data[m]=b}var _=[];for(m=1;m<r-1;++m)for(g=1;g<i-1;++g)if(1===f.getValueXY(m,g,0))t:for(var y=m-1;y<m+2;++y)for(var M=g-1;M<g+2;++M)if(2===f.getValueXY(y,M,0)){_.push([m,g]),d.setValueXY(m,g,0,n);break t}for(;_.length>0;){var x=[];for(m=0;m<_.length;++m)for(g=-1;g<2;++g)for(y=-1;y<2;++y)if(0!==g||0!==y){var v=_[m][0]+g,E=_[m][1]+y;1===f.getValueXY(v,E,0)&&0===d.getValueXY(v,E,0)&&(x.push([v,E]),d.setValueXY(v,E,0,n))}_=x}return d}function cannyEdge(t){return cannyEdgeDetector(this,t)}function extract(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{position:r}=e;if(this.checkProcessable("extract",{bitDepth:[1,8,16]}),!r&&(r=t.getRelativePosition(this),!r))throw new Error("extract : can not extract an image because the relative position can not be determined, try to specify manually the position as an array of 2 elements [x,y].");if(this.bitDepth>1){let e=Image.createFrom(this,{width:t.width,height:t.height,alpha:1,position:r,parent:this});for(let i=0;i<t.width;i++)for(let n=0;n<t.height;n++){for(let t=0;t<this.channels;t++){let s=this.getValueXY(i+r[0],n+r[1],t);e.setValueXY(i,n,t,s)}t.getBitXY(i,n)||e.setValueXY(i,n,this.components,0)}return e}{let e=Image.createFrom(this,{width:t.width,height:t.height,position:r,parent:this});for(let i=0;i<t.height;i++)for(let n=0;n<t.width;n++)t.getBitXY(n,i)&&this.getBitXY(n+r[0],i+r[1])&&e.setBitXY(n,i);return e}}var fastList={exports:{}};!function(t,e){!function(){function e(t,e,r){this.next=r,r&&(r.prev=this),this.prev=e,e&&(e.next=this),this.data=t}function r(){if(!(this instanceof r))return new r;this._head=null,this._tail=null,this.length=0}r.prototype={push:function(t){this._tail=new e(t,this._tail,null),this._head||(this._head=this._tail),this.length++},pop:function(){if(0!==this.length){var t=this._tail;return this._tail=t.prev,t.prev&&(t.prev=this._tail.next=null),this.length--,1===this.length?this._head=this._tail:0===this.length&&(this._head=this._tail=null),t.data}},unshift:function(t){this._head=new e(t,null,this._head),this._tail||(this._tail=this._head),this.length++},shift:function(){if(0!==this.length){var t=this._head;return this._head=t.next,t.next&&(t.next=this._head.prev=null),this.length--,1===this.length?this._tail=this._head:0===this.length&&(this._head=this._tail=null),t.data}},item:function(t){t<0&&(t=this.length+t);for(var e=this._head;t-- >0&&e;)e=e.next;return e?e.data:void 0},slice:function(t,e){if(t||(t=0),e||(e=this.length),e<0&&(e=this.length+e),t<0&&(t=this.length+t),e===t)return[];if(e<t)throw new Error("invalid offset: "+t+","+e+" (length="+this.length+")");for(var r=e-t,i=new Array(r),n=0,s=this._head;t-- >0&&s;)s=s.next;for(;n<r&&s;)i[n++]=s.data,s=s.next;return i},drop:function(){r.call(this)},forEach:function(t,e){for(var r=this._head,i=0,n=this.length;i<n&&r;)t.call(e||this,r.data,i,this),r=r.next,i++},map:function(t,e){var i=new r;return this.forEach((function(r,n,s){i.push(t.call(e||s,r,n,s))})),i},filter:function(t,e){var i=new r;return this.forEach((function(r,n,s){t.call(e||s,r,n,s)&&i.push(r)})),i},reduce:function(t,e,r){var i=0,n=this._head,s=this.length;for(e||(i=1,e=n&&n.data,n=n&&n.next);i<s&&n;)e=t.call(r||this,e,n.data,this),i++,n=n.next;return e}},t.exports=r}()}(fastList);var LinkedList=fastList.exports;function floodFill(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{x:e=0,y:r=0,inPlace:i=!0}=t,n=i?this:Image.createFrom(this);this.checkProcessable("floodFill",{bitDepth:1});const s=this.getBitXY(e,r);if(s)return n;const o=new LinkedList;for(o.push(new Node(e,r));o.length>0;){const t=o.shift();n.setBitXY(t.x,t.y);for(let e=t.x+1;e<this.width&&(!n.getBitXY(e,t.y)&&!this.getBitXY(e,t.y));e++)n.setBitXY(e,t.y),t.y+1<this.height&&!this.getBitXY(e,t.y+1)&&o.push(new Node(e,t.y+1)),t.y-1>=0&&!this.getBitXY(e,t.y-1)&&o.push(new Node(e,t.y-1));for(let e=t.x-1;e>=0&&(!n.getBitXY(e,t.y)&&!this.getBitXY(e,t.y));e++)n.setBitXY(e,t.y),t.y+1<this.height&&!this.getBitXY(e,t.y+1)&&o.push(new Node(e,t.y+1)),t.y-1>=0&&!this.getBitXY(e,t.y-1)&&o.push(new Node(e,t.y-1))}return n}function Node(t,e){this.x=t,this.y=e}function _extends(){return _extends=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t},_extends.apply(this,arguments)}function hsv2rgb(t,e,r){var i=[],n=(r/=100)*(e/=100),s=t/60,o=n*(1-Math.abs(s%2-1)),a=r-n;return i=s>=0&&s<1?[n,o,0]:s>=1&&s<2?[o,n,0]:s>=2&&s<3?[0,n,o]:t>=3&&s<4?[0,o,n]:t>=4&&s<5?[o,0,n]:t>=5&&s<=6?[n,0,o]:[0,0,0],{r:Math.round(255*(i[0]+a)),g:Math.round(255*(i[1]+a)),b:Math.round(255*(i[2]+a))}}function hsl2hsv(t,e,r){return{h:t,s:2*(e*=(r<50?r:100-r)/100)/(r+e)*100,v:r+e}}function hsl2rgb$1(t,e,r){var i=hsl2hsv(t,e,r);return hsv2rgb(i.h,i.s,i.v)}var colors={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,132,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,255,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,203],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[119,128,144],slategrey:[119,128,144],snow:[255,255,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,5]};function parse(t){return named(t)||hex3(t)||hex6(t)||rgb(t)||rgba$1(t)||hsl(t)||hsla(t)}function named(t){var e=colors[t.toLowerCase()];if(e)return{r:e[0],g:e[1],b:e[2],a:100}}function rgb(t){var e=t.match(/rgb\(([^)]+)\)/);if(e){var r=e[1].split(/ *, */).map(Number);return{r:r[0],g:r[1],b:r[2],a:100}}}function rgba$1(t){var e=t.match(/rgba\(([^)]+)\)/);if(e){var r=e[1].split(/ *, */).map(Number);return{r:r[0],g:r[1],b:r[2],a:100*r[3]}}}function hex6(t){if("#"===t[0]&&7===t.length)return{r:parseInt(t.slice(1,3),16),g:parseInt(t.slice(3,5),16),b:parseInt(t.slice(5,7),16),a:100}}function hex3(t){if("#"===t[0]&&4===t.length)return{r:parseInt(t[1]+t[1],16),g:parseInt(t[2]+t[2],16),b:parseInt(t[3]+t[3],16),a:100}}function hsl(t){var e=t.match(/hsl\(([^)]+)\)/);if(e){var r=e[1].split(/ *, */);return _extends({},hsl2rgb$1(parseInt(r[0],10),parseInt(r[1],10),parseInt(r[2],10)),{a:100})}}function hsla(t){var e=t.match(/hsla\(([^)]+)\)/);if(e){var r=e[1].split(/ *, */),i=parseInt(r[0],10),n=parseInt(r[1],10),s=parseInt(r[2],10),o=parseInt(100*parseFloat(r[3]),10);return _extends({},hsl2rgb$1(i,n,s),{a:o})}}function css2array(t){let e=parse(t);return[e.r,e.g,e.b,Math.round(255*e.a/100)]}function hue2rgb(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t}function hsl2rgb(t,e,r){let i,n,s,o,a,l;return r/=100,0===(e/=100)?o=a=l=255*r:(n=r<=.5?r*(e+1):r+e-r*e,i=2*r-n,s=t/360,o=hue2rgb(i,n,s+1/3),a=hue2rgb(i,n,s),l=hue2rgb(i,n,s-1/3)),{r:o,g:a,b:l}}function getDistinctColors(t){let e=new Array(t),r=0;for(let i=0;i<360;i+=360/t){r++;let t=hsl2rgb(i,100,30+r%4*15);e[r-1]=[Math.round(255*t.r),Math.round(255*t.g),Math.round(255*t.b)]}return e}function getRandomColor(){return[Math.floor(256*Math.random()),Math.floor(256*Math.random()),Math.floor(256*Math.random())]}function getColors(t){let{color:e,colors:r,randomColors:i,numberColors:n=50}=t;if(e&&!Array.isArray(e)&&(e=css2array(e)),e)return[e];if(r)return r=r.map((function(t){return Array.isArray(t)?t:css2array(t)})),r;if(i){r=new Array(n);for(let t=0;t<n;t++)r[t]=getRandomColor()}return getDistinctColors(n)}function paintLabels(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{color:i="blue",colors:n,font:s="12px Helvetica",rotate:o=0}=r;if(this.checkProcessable("paintMasks",{channels:[3,4],bitDepth:[8,16],colorModel:RGB$1}),!Array.isArray(t))throw Error("paintLabels: labels must be an array");if(!Array.isArray(e))throw Error("paintLabels: positions must be an array");if(i&&!Array.isArray(i)&&(i=css2array(i)),n=n?n.map((function(t){return Array.isArray(t)?t:css2array(t)})):[i],t.length!==e.length)throw Error("paintLabels: positions and labels must be arrays from the same size");Array.isArray(s)||(s=[s]),Array.isArray(o)||(o=[o]);let a=this.getCanvas(),l=a.getContext("2d");for(let r=0;r<t.length;r++){l.save();let i=n[r%n.length];l.fillStyle=`rgba(${i[0]},${i[1]},${i[2]},${i[3]/this.maxValue})`,l.font=s[r%s.length];let a=e[r];l.translate(a[0],a[1]),l.rotate(o[r%o.length]/180*Math.PI),l.fillText(t[r],0,0),l.restore()}return this.data=Uint8Array.from(l.getImageData(0,0,this.width,this.height).data),this}function paintMasks(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{alpha:r=255,labels:i=[],labelsPosition:n=[],labelColor:s="blue",labelFont:o="12px Helvetica"}=e;this.checkProcessable("paintMasks",{channels:[3,4],bitDepth:[8,16],colorModel:RGB$1});let a=getColors(Object.assign({},e,{numberColors:t.length}));Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;e++){let i=t[e],n=a[e%a.length];for(let t=0;t<i.width;t++)for(let e=0;e<i.height;e++)if(i.getBitXY(t,e))for(let s=0;s<Math.min(this.components,n.length);s++)if(255===r)this.setValueXY(t+i.position[0],e+i.position[1],s,n[s]);else{let o=this.getValueXY(t+i.position[0],e+i.position[1],s);o=Math.round((o*(255-r)+n[s]*r)/255),this.setValueXY(t+i.position[0],e+i.position[1],s,o)}}if(Array.isArray(i)&&i.length>0){let e=this.getCanvas().getContext("2d");e.fillStyle=s,e.font=o;for(let r=0;r<Math.min(t.length,i.length);r++){let s=n[r]?n[r]:t[r].position;e.fillText(i[r],s[0],s[1])}this.data=Uint8Array.from(e.getImageData(0,0,this.width,this.height).data)}return this}function zerosMatrix(t,e){let r=new Array(t);for(let i=0;i<t;i++)r[i]=new Array(e).fill(0);return r}const cross=[[0,0,1,0,0],[0,0,1,0,0],[1,1,1,1,1],[0,0,1,0,0],[0,0,1,0,0]],smallCross=[[0,1,0],[1,1,1],[0,1,0]];class Shape{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{kind:e="cross",shape:r,size:i,width:n,height:s,filled:o=!0}=t;if(i&&(n=i,s=i),r)switch(r.toLowerCase()){case"square":case"rectangle":this.matrix=rectangle(n,s,{filled:o});break;case"circle":case"ellipse":this.matrix=ellipse(n,s,{filled:o});break;case"triangle":this.matrix=triangle(n,s,{filled:o});break;default:throw new Error(`Shape: unexpected shape: ${r}`)}else{if(!e)throw new Error("Shape: expected a kind or a shape option");switch(e.toLowerCase()){case"cross":this.matrix=cross;break;case"smallcross":this.matrix=smallCross;break;default:throw new Error(`Shape: unexpected kind: ${e}`)}}this.height=this.matrix.length,this.width=this.matrix[0].length,this.halfHeight=this.height/2>>0,this.halfWidth=this.width/2>>0}getPoints(){let t=this.matrix,e=[];for(let r=0;r<t.length;r++)for(let i=0;i<t[0].length;i++)t[r][i]&&e.push([i-this.halfWidth,r-this.halfHeight]);return e}getMask(){let t=new Image(this.width,this.height,{kind:BINARY});for(let e=0;e<this.matrix.length;e++)for(let r=0;r<this.matrix[0].length;r++)this.matrix[e][r]&&t.setBitXY(r,e);return t}}function rectangle(t,e,r){const i=zerosMatrix(e,t);if(r.filled)for(let r=0;r<e;r++)for(let e=0;e<t;e++)i[r][e]=1;else{for(let r of[0,e-1])for(let e=0;e<t;e++)i[r][e]=1;for(let r=0;r<e;r++)for(let e of[0,t-1])i[r][e]=1}return i}function ellipse(t,e,r){const i=zerosMatrix(e,t);let n=1-e%2,s=1-t%2,o=Math.floor((t-1)/2),a=Math.floor((e-1)/2),l=o*o,h=a*a;if(r.filled)for(let e=0;e<=a;e++){for(let r=o-Math.floor(Math.sqrt(l-l*e*e/h));r<=o;r++)i[a-e][r]=1,i[a+e+n][r]=1,i[a-e][t-r-1]=1,i[a+e+n][t-r-1]=1}else{for(let e=0;e<=a;e++){let r=o-Math.floor(Math.sqrt(l-l*e*e/h));i[a-e][r]=1,i[a+e+n][r]=1,i[a-e][t-r-1]=1,i[a+e+n][t-r-1]=1}for(let t=0;t<=o;t++){let r=a-Math.floor(Math.sqrt(h-h*t*t/l));i[r][o-t]=1,i[r][o+t+s]=1,i[e-r-1][o-t]=1,i[e-r-1][o+t+s]=1}}return i}function triangle(t,e,r){if(!r.filled)throw new Error("Non filled triangle is not implemented");const i=zerosMatrix(e,t);for(let r=0;r<e;r++){let n=Math.floor((1-r/e)*t/2);for(let e=n;e<t-n;e++)i[r][e]=1}return i}function paintPoints(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{shape:r}=e;this.checkProcessable("paintPoints",{bitDepth:[8,16]});let i=getColors(Object.assign({},e,{numberColors:t.length})),n=new Shape(r).getPoints(),s=Math.min(this.channels,i[0].length);for(let e=0;e<t.length;e++){let r=i[e%i.length],o=t[e][0],a=t[e][1];for(let t=0;t<n.length;t++){let e=n[t][0],i=n[t][1];if(o+e>=0&&a+i>=0&&o+e<this.width&&a+i<this.height){let t=(o+e+(a+i)*this.width)*this.channels;for(let e=0;e<s;e++)this.data[t+e]=r[e]}}}return this}function paintPolyline(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{color:r=[this.maxValue,0,0],closed:i=!1}=e;this.checkProcessable("paintPoints",{bitDepth:[1,8,16]});let n=Math.min(this.channels,r.length);for(let e=0;e<t.length-1+i;e++){let i=t[e],s=t[(e+1)%t.length],o=s[0]-i[0],a=s[1]-i[1],l=Math.max(Math.abs(o),Math.abs(a)),h=o/l,c=a/l,u=i[0],f=i[1];for(let t=0;t<=l;t++){let t=Math.round(u),e=Math.round(f);if(t>=0&&e>=0&&t<this.width&&e<this.height)if(1===this.bitDepth)this.setBitXY(t,e);else{let i=(t+e*this.width)*this.channels;for(let t=0;t<n;t++)this.data[i+t]=r[t]}u+=h,f+=c}}return this}function paintPolylines(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},e);this.checkProcessable("paintPolylines",{bitDepth:[8,16]});let i=getColors(Object.assign({},e,{numberColors:t.length}));for(let e=0;e<t.length;e++)r.color=i[e%i.length],this.paintPolyline(t[e],r);return this}function paintPolygon(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{color:r=[this.maxValue,0,0],filled:i=!1}=e;this.checkProcessable("paintPoints",{bitDepth:[1,8,16]}),e.closed=!0;let n=deleteDouble(t);if(!1===i)return this.paintPolyline(t,e);{let i=Array(this.height);for(let t=0;t<this.height;t++){i[t]=[];for(let e=0;e<this.width;e++)i[t].push(0)}for(let t=0;t<n.length;t++){const e=lineBetweenTwoPoints(n[t],n[(t+1)%n.length]);for(let t=0;t<this.height;t++)for(let r=0;r<this.width;r++)isAtTheRightOfTheLine(r,t,e,this.height)&&(i[t][r]=0===i[t][r]?1:0)}for(let t=0;t<this.height;t++)for(let e=0;e<this.width;e++)if(1===i[t][e])if(1===this.bitDepth)this.setBitXY(e,t);else{let i=Math.min(this.channels,r.length),n=(e+t*this.width)*this.channels;for(let t=0;t<i;t++)this.data[n+t]=r[t]}return this.paintPolyline(t,e)}}function deleteDouble(t){let e=[];for(let r=0;r<t.length;r++)t[r][0]===t[(r+1)%t.length][0]&&t[r][1]===t[(r+1)%t.length][1]||t[r][0]===t[(r-1+t.length)%t.length][0]&&t[r][1]===t[(r-1+t.length)%t.length][1]||t[(r+1)%t.length][0]===t[(r-1+t.length)%t.length][0]&&t[(r-1+t.length)%t.length][1]===t[(r+1)%t.length][1]||e.push(t[r]);return e}function lineBetweenTwoPoints(t,e){if(t[0]===e[0])return{a:0,b:t[0],vertical:!0};{const r=(e[1]-t[1])/(e[0]-t[0]);return{a:r,b:t[1]-r*t[0],vertical:!1}}}function isAtTheRightOfTheLine(t,e,r,i){if(!0===r.vertical)return r.b<=t;if(0===r.a)return!1;{const n=(e-r.b)/r.a;return n<t&&n>=0&&n<=i}}function paintPolygons(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},e);this.checkProcessable("paintPolygons",{bitDepth:[8,16]});let i=getColors(Object.assign({},e,{numberColors:t.length}));for(let e=0;e<t.length;e++)r.color=i[e%i.length],this.paintPolygon(t[e],r);return this}function getHistogram(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{maxSlots:e=256,channel:r,useAlpha:i=!0}=t;if(this.checkProcessable("getHistogram",{bitDepth:[1,8,16]}),void 0===r){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");r=0}return getChannelHistogram.call(this,r,{useAlpha:i,maxSlots:e})}function getHistograms(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{maxSlots:e=256,useAlpha:r=!0}=t;this.checkProcessable("getHistograms",{bitDepth:[8,16]});let i=new Array(r?this.components:this.channels);for(let t=0;t<i.length;t++)i[t]=getChannelHistogram.call(this,t,{useAlpha:r,maxSlots:e});return i}function getChannelHistogram(t,e){let{useAlpha:r,maxSlots:i}=e;if(1===this.bitDepth){let t=[0,0];for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=this.getBitXY(e,r);0===i?t[0]+=1:1===i&&(t[1]+=1)}return t}let n=Math.log2(i);if(!isInteger$1(n))throw new RangeError("maxSlots must be a power of 2, for example: 64, 256, 1024");let s=0;this.bitDepth>n&&(s=this.bitDepth-n);let o=this.data,a=newArray$1(Math.pow(2,Math.min(this.bitDepth,n)),0);if(r&&this.alpha){let e=this.channels-t-1;for(let r=t;r<o.length;r+=this.channels)a[o[r]>>s]+=o[r+e]/this.maxValue}else for(let e=t;e<o.length;e+=this.channels)a[o[e]>>s]++;return a}function getColorHistogram(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{useAlpha:e=!0,nbSlots:r=512}=t;this.checkProcessable("getColorHistogram",{bitDepth:[8,16],components:[3]});let i=Math.log(r)/Math.log(8);if(i!==Math.floor(i))throw new RangeError("nbSlots must be a power of 8. Usually 8, 64, 512 or 4096");let n=this.bitDepth-i,s=this.data,o=newArray$1(Math.pow(8,i),0),a=Math.pow(2,2*i),l=Math.pow(2,i);for(let t=0;t<s.length;t+=this.channels){let r=(s[t]>>n)*a+(s[t+1]>>n)*l+(s[t+2]>>n);e&&this.alpha?o[r]+=s[t+this.channels-1]/this.maxValue:o[r]++}return o}function min(){this.checkProcessable("min",{bitDepth:[8,16,32]});let t=newArray$1(this.channels,1/0);for(let e=0;e<this.data.length;e+=this.channels)for(let r=0;r<this.channels;r++)this.data[e+r]<t[r]&&(t[r]=this.data[e+r]);return t}function max(){this.checkProcessable("max",{bitDepth:[8,16,32]});let t=newArray$1(this.channels,-1/0);for(let e=0;e<this.data.length;e+=this.channels)for(let r=0;r<this.channels;r++)this.data[e+r]>t[r]&&(t[r]=this.data[e+r]);return t}function sum(){this.checkProcessable("sum",{bitDepth:[8,16]});let t=newArray$1(this.channels,0);for(let e=0;e<this.data.length;e+=this.channels)for(let r=0;r<this.channels;r++)t[r]+=this.data[e+r];return t}function getMoment(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.checkProcessable("getMoment",{bitDepth:[1]});let r=0;for(let i=0;i<this.width;i++)for(let n=0;n<this.height;n++)1===this.getBitXY(i,n)&&(r+=i**t*n**e);return r}function localMaxima(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{mask:e,region:r=3,removeClosePoints:i=0,invert:n=!1,maxEquals:s=2}=t,o=this;this.checkProcessable("localMaxima",{bitDepth:[8,16],components:1}),r*=4;let a=n?0:1,l=[1,0,-1,0,1,1,-1,-1,2,0,-2,0,2,2,-2,-2],h=[0,1,0,-1,1,-1,1,-1,0,2,0,-2,2,-2,2,-2],c=r<=8?1:2,u=[];for(let t=c;t<o.height-c;t++)for(let i=c;i<o.width-c;i++){if(e&&e.getBitXY(i,t)!==a)continue;let c=0,f=0,d=o.data[i+t*o.width];for(let e=0;e<r;e++)n?o.data[i+l[e]+(t+h[e])*o.width]>d&&c++:o.data[i+l[e]+(t+h[e])*o.width]<d&&c++,o.data[i+l[e]+(t+h[e])*o.width]===d&&f++;c+f===r&&f<=s&&u.push([i,t])}if(i>0)for(let t=0;t<u.length;t++)for(let e=t+1;e<u.length;e++)Math.sqrt(Math.pow(u[t][0]-u[e][0],2)+Math.pow(u[t][1]-u[e][1],2))<i&&(u[t][0]=u[t][0]+u[e][0]>>1,u[t][1]=u[t][1]+u[e][1]>>1,u.splice(e,1),e--);return u}function mean(){let t=this.getHistograms({maxSlots:this.maxValue+1}),e=new Array(t.length);for(let r=0;r<t.length;r++){let i=t[r];e[r]=mean$2(i)}return e}function median(){let t=this.getHistograms({maxSlots:this.maxValue+1}),e=new Array(t.length);for(let r=0;r<t.length;r++){let i=t[r];e[r]=median$2(i)}return e}function points(){this.checkProcessable("points",{bitDepth:[1]});const t=[];for(let e=0;e<this.width;e++)for(let r=0;r<this.height;r++)1===this.getBitXY(e,r)&&t.push([e,r]);return t}function extendedPoints(){this.checkProcessable("extendedPoints",{bitDepth:[1]});const t=[];for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++)if(1===this.getBitXY(r,e))for(t.push([r,e]),1!==this.getBitXY(r+1,e)?(t.push([r+1,e]),t.push([r+1,e+1]),1!==this.getBitXY(r,e+1)&&t.push([r,e+1])):1!==this.getBitXY(r,e+1)&&(t.push([r,e+1]),t.push([r+1,e+1]));r<this.width-2&&1===this.getBitXY(r+1,e)&&1===this.getBitXY(r+2,e);)r++;return t}function getRelativePosition(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this===t)return[0,0];let r=[0,0],i=this;for(;i;){if(i===t)return r;i.position&&(r[0]+=i.position[0],r[1]+=i.position[1]),i=i.parent}return!!e.defaultFurther&&r}function countAlphaPixels(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{alpha:e=1}=t;this.checkProcessable("countAlphaPixels",{bitDepth:[8,16],alpha:1});let r=0;if(void 0!==e){for(let t=this.components;t<this.data.length;t+=this.channels)this.data[t]===e&&r++;return r}return this.size}function monotoneChainConvexHull$1(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{sorted:r}=e;r||(t=t.slice().sort(byXThenY));const i=t.length,n=new Array(2*i);let s=0;for(let e=0;e<i;e++){const r=t[e];for(;s>=2&&cw(n[s-2],n[s-1],r)<=0;)s--;n[s++]=r}const o=s+1;for(let e=i-2;e>=0;e--){const r=t[e];for(;s>=o&&cw(n[s-2],n[s-1],r)<=0;)s--;n[s++]=r}return n.slice(0,s-1)}function cw(t,e,r){return(e[1]-t[1])*(r[0]-t[0])-(e[0]-t[0])*(r[1]-t[1])}function byXThenY(t,e){return t[0]===e[0]?t[1]-e[1]:t[0]-e[0]}function monotoneChainConvexHull(){return monotoneChainConvexHull$1(this.extendedPoints,{sorted:!1})}function round(t){for(let e=0;e<t.length;e++)t[e][0]=Math.round(t[e][0]),t[e][1]=Math.round(t[e][1]);return t}function difference(t,e){return[t[0]-e[0],t[1]-e[1]]}function normalize(t){let e=Math.sqrt(t[0]**2+t[1]**2);return[t[0]/e,t[1]/e]}function rotate(t,e,r){void 0===r&&(r=new Array(e.length));let i=Math.cos(t),n=Math.sin(t);for(let t=0;t<r.length;++t)r[t]=[i*e[t][0]-n*e[t][1],n*e[t][0]+i*e[t][1]];return r}function perimeter(t){let e=0;for(let r=0;r<t.length;r++){let i=t[r][0],n=t[r][1],s=t[r===t.length-1?0:r+1][0],o=t[r===t.length-1?0:r+1][1];e+=Math.sqrt((s-i)**2+(o-n)**2)}return e}function surface(t){let e=0;for(let r=0;r<t.length;r++){e+=t[r][0]*t[r===t.length-1?0:r+1][1]*.5,e-=t[r===t.length-1?0:r+1][0]*t[r][1]*.5}return Math.abs(e)}function minMax(t){let e=1/0,r=1/0,i=-1/0,n=-1/0;for(let s=0;s<t.length;s++)t[s][0]<e&&(e=t[s][0]),t[s][0]>i&&(i=t[s][0]),t[s][1]<r&&(r=t[s][1]),t[s][1]>n&&(n=t[s][1]);return[[e,r],[i,n]]}function moveToZeroZero(t,e){void 0===e&&(e=new Array(t.length).fill(0).map((()=>[])));let r=minMax(t),i=r[0][0],n=r[0][1];for(let r=0;r<t.length;r++)e[r][0]=t[r][0]-i,e[r][1]=t[r][1]-n;return e}function minimalBoundingRectangle(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{originalPoints:e=monotoneChainConvexHull.call(this)}=t;if(0===e.length)return[];if(1===e.length)return[e[0],e[0],e[0],e[0]];const r=new Array(e.length);let i,n=1/0,s=0;for(let t=0;t<r.length;t++){let o=getAngle$1(e[t],e[(t+1)%r.length]);rotate(-o,e,r);let a=r[t][0],l=r[t][1],h=r[(t+1)%r.length][0],c=r[(t+1)%r.length][1],u=!0,f=0,d=0,m=0;for(let t=0;t<r.length;t++){let e=r[t][0],i=r[t][1],n=(e-a)/(h-a);!0===u?(u=!1,f=n,d=n):(n<f&&(f=n),n>d&&(d=n));let s=(-(h-a)*i+h*l-c*a)/(h-a);Math.abs(s)>Math.abs(m)&&(m=s)}let g=[a+f*(h-a),l],p=[a+d*(h-a),l],w=Math.abs(m*(f-d)*(h-a));w<n&&(s=o,n=w,i=[g,p,[p[0],p[1]-m],[g[0],g[1]-m]])}return rotate(s,i,i),i}function getAngle$1(t,e){let r=normalize(difference(e,t)),i=Math.acos(r[0]);return r[1]<0?-i:i}function extend$1(t){let e={inPlace:!0};t.extendMethod("invert",invert),t.extendMethod("abs",abs),t.extendMethod("level",level,e),t.extendMethod("add",add,e),t.extendMethod("subtract",subtract,e),t.extendMethod("subtractImage",subtractImage),t.extendMethod("multiply",multiply,e),t.extendMethod("divide",divide,e),t.extendMethod("hypotenuse",hypotenuse),t.extendMethod("background",background$2),t.extendMethod("flipX",flipX),t.extendMethod("flipY",flipY),t.extendMethod("blurFilter",blurFilter),t.extendMethod("medianFilter",medianFilter),t.extendMethod("gaussianFilter",gaussianFilter),t.extendMethod("sobelFilter",sobelFilter),t.extendMethod("gradientFilter",gradientFilter),t.extendMethod("scharrFilter",scharrFilter),t.extendMethod("dilate",dilate),t.extendMethod("erode",erode),t.extendMethod("open",open),t.extendMethod("close",close),t.extendMethod("topHat",topHat),t.extendMethod("blackHat",blackHat),t.extendMethod("morphologicalGradient",morphologicalGradient),t.extendMethod("warpingFourPoints",warpingFourPoints),t.extendMethod("crop",crop),t.extendMethod("cropAlpha",cropAlpha),t.extendMethod("resize",resize).extendMethod("scale",resize),t.extendMethod("hsv",hsv),t.extendMethod("hsl",hsl$1),t.extendMethod("cmyk",cmyk),t.extendMethod("rgba8",rgba8),t.extendMethod("grey",grey).extendMethod("gray",grey),t.extendMethod("mask",mask),t.extendMethod("pad",pad),t.extendMethod("colorDepth",colorDepth),t.extendMethod("setBorder",setBorder,e),t.extendMethod("rotate",rotate$1),t.extendMethod("rotateLeft",rotateLeft),t.extendMethod("rotateRight",rotateRight),t.extendMethod("insert",insert),t.extendMethod("getRow",getRow),t.extendMethod("getColumn",getColumn),t.extendMethod("getMatrix",getMatrix),t.extendMethod("setMatrix",setMatrix),t.extendMethod("getPixelsArray",getPixelsArray),t.extendMethod("getIntersection",getIntersection),t.extendMethod("getClosestCommonParent",getClosestCommonParent),t.extendMethod("getThreshold",getThreshold),t.extendMethod("split",split),t.extendMethod("getChannel",getChannel),t.extendMethod("combineChannels",combineChannels),t.extendMethod("setChannel",setChannel),t.extendMethod("getSimilarity",getSimilarity),t.extendMethod("getPixelsGrid",getPixelsGrid),t.extendMethod("getBestMatch",getBestMatch),t.extendMethod("cannyEdge",cannyEdge),t.extendMethod("convolution",convolution),t.extendMethod("extract",extract),t.extendMethod("floodFill",floodFill),t.extendMethod("paintLabels",paintLabels,e),t.extendMethod("paintMasks",paintMasks,e),t.extendMethod("paintPoints",paintPoints,e),t.extendMethod("paintPolyline",paintPolyline,e),t.extendMethod("paintPolylines",paintPolylines,e),t.extendMethod("paintPolygon",paintPolygon,e),t.extendMethod("paintPolygons",paintPolygons,e),t.extendMethod("countAlphaPixels",countAlphaPixels),t.extendMethod("monotoneChainConvexHull",monotoneChainConvexHull),t.extendMethod("minimalBoundingRectangle",minimalBoundingRectangle),t.extendMethod("getHistogram",getHistogram).extendProperty("histogram",getHistogram),t.extendMethod("getHistograms",getHistograms).extendProperty("histograms",getHistograms),t.extendMethod("getColorHistogram",getColorHistogram).extendProperty("colorHistogram",getColorHistogram),t.extendMethod("getMin",min).extendProperty("min",min),t.extendMethod("getMax",max).extendProperty("max",max),t.extendMethod("getSum",sum).extendProperty("sum",sum),t.extendMethod("getMoment",getMoment).extendProperty("moment",getMoment),t.extendMethod("getLocalMaxima",localMaxima),t.extendMethod("getMedian",median).extendProperty("median",median),t.extendMethod("getMean",mean).extendProperty("mean",mean),t.extendMethod("getPoints",points).extendProperty("points",points),t.extendMethod("getExtendedPoints",extendedPoints).extendProperty("extendedPoints",extendedPoints),t.extendMethod("getRelativePosition",getRelativePosition)}var quantities={exports:{}};!function(t,e){t.exports=function(){function t(t){return"string"==typeof t||t instanceof String}var e=Number.isFinite||window.isFinite;function r(t){return e(t)}function i(t){return t}function n(t){var e={};return t.filter((function(t){return!e.hasOwnProperty(t)&&(e[t]=!0)}))}function s(t,e){if(e.length!==t.length)return!1;for(var r=0;r<t.length;r++){if(e[r].compareArray&&!e[r].compareArray(t[r]))return!1;if(e[r]!==t[r])return!1}return!0}function o(t,e){Object.keys(e).forEach((function(r){t[r]=e[r]}))}function a(){for(var t=1,e=0,r=0;r<arguments.length;r++){var i=arguments[r];e+=c(i),t*=i}return 0!==e?h(t,e):t}function l(t,e){if(0===e)throw new Error("Divide by zero");var r=Math.pow(10,c(e));return a(t,r/(r*e))}function h(t,e){return Math.round(t*Math.pow(10,e))/Math.pow(10,e)}function c(t){if(!isFinite(t))return 0;for(var e=0;t%1!=0;)t*=10,e++;return e}function u(){var t;if(!this)return t=Object.create(u.prototype),u.apply(t,arguments),t;t=Error.apply(this,arguments),this.name="QtyError",this.message=t.message,this.stack=t.stack}function f(t,e){throw new u("Incompatible units: "+t+" and "+e)}u.prototype=Object.create(Error.prototype,{constructor:{value:u}});var d={"<googol>":[["googol"],1e100,"prefix"],"<kibi>":[["Ki","Kibi","kibi"],Math.pow(2,10),"prefix"],"<mebi>":[["Mi","Mebi","mebi"],Math.pow(2,20),"prefix"],"<gibi>":[["Gi","Gibi","gibi"],Math.pow(2,30),"prefix"],"<tebi>":[["Ti","Tebi","tebi"],Math.pow(2,40),"prefix"],"<pebi>":[["Pi","Pebi","pebi"],Math.pow(2,50),"prefix"],"<exi>":[["Ei","Exi","exi"],Math.pow(2,60),"prefix"],"<zebi>":[["Zi","Zebi","zebi"],Math.pow(2,70),"prefix"],"<yebi>":[["Yi","Yebi","yebi"],Math.pow(2,80),"prefix"],"<yotta>":[["Y","Yotta","yotta"],1e24,"prefix"],"<zetta>":[["Z","Zetta","zetta"],1e21,"prefix"],"<exa>":[["E","Exa","exa"],1e18,"prefix"],"<peta>":[["P","Peta","peta"],1e15,"prefix"],"<tera>":[["T","Tera","tera"],1e12,"prefix"],"<giga>":[["G","Giga","giga"],1e9,"prefix"],"<mega>":[["M","Mega","mega"],1e6,"prefix"],"<kilo>":[["k","kilo"],1e3,"prefix"],"<hecto>":[["h","Hecto","hecto"],100,"prefix"],"<deca>":[["da","Deca","deca","deka"],10,"prefix"],"<deci>":[["d","Deci","deci"],.1,"prefix"],"<centi>":[["c","Centi","centi"],.01,"prefix"],"<milli>":[["m","Milli","milli"],.001,"prefix"],"<micro>":[["u","Î¼","Âµ","Micro","mc","micro"],1e-6,"prefix"],"<nano>":[["n","Nano","nano"],1e-9,"prefix"],"<pico>":[["p","Pico","pico"],1e-12,"prefix"],"<femto>":[["f","Femto","femto"],1e-15,"prefix"],"<atto>":[["a","Atto","atto"],1e-18,"prefix"],"<zepto>":[["z","Zepto","zepto"],1e-21,"prefix"],"<yocto>":[["y","Yocto","yocto"],1e-24,"prefix"],"<1>":[["1","<1>"],1,""],"<meter>":[["m","meter","meters","metre","metres"],1,"length",["<meter>"]],"<inch>":[["in","inch","inches",'"'],.0254,"length",["<meter>"]],"<foot>":[["ft","foot","feet","'"],.3048,"length",["<meter>"]],"<yard>":[["yd","yard","yards"],.9144,"length",["<meter>"]],"<mile>":[["mi","mile","miles"],1609.344,"length",["<meter>"]],"<naut-mile>":[["nmi","naut-mile"],1852,"length",["<meter>"]],"<league>":[["league","leagues"],4828,"length",["<meter>"]],"<furlong>":[["furlong","furlongs"],201.2,"length",["<meter>"]],"<rod>":[["rd","rod","rods"],5.029,"length",["<meter>"]],"<mil>":[["mil","mils"],254e-7,"length",["<meter>"]],"<angstrom>":[["ang","angstrom","angstroms"],1e-10,"length",["<meter>"]],"<fathom>":[["fathom","fathoms"],1.829,"length",["<meter>"]],"<pica>":[["pica","picas"],.00423333333,"length",["<meter>"]],"<point>":[["pt","point","points"],.000352777778,"length",["<meter>"]],"<redshift>":[["z","red-shift","redshift"],1302773e20,"length",["<meter>"]],"<AU>":[["AU","astronomical-unit"],1495979e5,"length",["<meter>"]],"<light-second>":[["ls","light-second"],299792500,"length",["<meter>"]],"<light-minute>":[["lmin","light-minute"],1798755e4,"length",["<meter>"]],"<light-year>":[["ly","light-year"],9460528e9,"length",["<meter>"]],"<parsec>":[["pc","parsec","parsecs"],3085678e10,"length",["<meter>"]],"<datamile>":[["DM","datamile"],1828.8,"length",["<meter>"]],"<kilogram>":[["kg","kilogram","kilograms"],1,"mass",["<kilogram>"]],"<AMU>":[["u","AMU","amu"],1660538921e-36,"mass",["<kilogram>"]],"<dalton>":[["Da","Dalton","Daltons","dalton","daltons"],1660538921e-36,"mass",["<kilogram>"]],"<slug>":[["slug","slugs"],14.5939029,"mass",["<kilogram>"]],"<short-ton>":[["tn","ton","short-ton"],907.18474,"mass",["<kilogram>"]],"<metric-ton>":[["tonne","metric-ton"],1e3,"mass",["<kilogram>"]],"<carat>":[["ct","carat","carats"],2e-4,"mass",["<kilogram>"]],"<pound>":[["lbs","lb","pound","pounds","#"],.45359237,"mass",["<kilogram>"]],"<ounce>":[["oz","ounce","ounces"],.0283495231,"mass",["<kilogram>"]],"<gram>":[["g","gram","grams","gramme","grammes"],.001,"mass",["<kilogram>"]],"<grain>":[["grain","grains","gr"],6479891e-11,"mass",["<kilogram>"]],"<dram>":[["dram","drams","dr"],.0017718452,"mass",["<kilogram>"]],"<stone>":[["stone","stones","st"],6.35029318,"mass",["<kilogram>"]],"<hectare>":[["hectare"],1e4,"area",["<meter>","<meter>"]],"<acre>":[["acre","acres"],4046.85642,"area",["<meter>","<meter>"]],"<sqft>":[["sqft"],1,"area",["<foot>","<foot>"]],"<liter>":[["l","L","liter","liters","litre","litres"],.001,"volume",["<meter>","<meter>","<meter>"]],"<gallon>":[["gal","gallon","gallons"],.0037854118,"volume",["<meter>","<meter>","<meter>"]],"<gallon-imp>":[["galimp","gallon-imp","gallons-imp"],.00454609,"volume",["<meter>","<meter>","<meter>"]],"<quart>":[["qt","quart","quarts"],.00094635295,"volume",["<meter>","<meter>","<meter>"]],"<pint>":[["pt","pint","pints"],.000473176475,"volume",["<meter>","<meter>","<meter>"]],"<pint-imp>":[["ptimp","pint-imp","pints-imp"],.00056826125,"volume",["<meter>","<meter>","<meter>"]],"<cup>":[["cu","cup","cups"],.000236588238,"volume",["<meter>","<meter>","<meter>"]],"<fluid-ounce>":[["floz","fluid-ounce","fluid-ounces"],295735297e-13,"volume",["<meter>","<meter>","<meter>"]],"<fluid-ounce-imp>":[["flozimp","floz-imp","fluid-ounce-imp","fluid-ounces-imp"],284130625e-13,"volume",["<meter>","<meter>","<meter>"]],"<tablespoon>":[["tb","tbsp","tbs","tablespoon","tablespoons"],147867648e-13,"volume",["<meter>","<meter>","<meter>"]],"<teaspoon>":[["tsp","teaspoon","teaspoons"],492892161e-14,"volume",["<meter>","<meter>","<meter>"]],"<bushel>":[["bu","bsh","bushel","bushels"],.035239072,"volume",["<meter>","<meter>","<meter>"]],"<oilbarrel>":[["bbl","oilbarrel","oilbarrels","oil-barrel","oil-barrels"],.158987294928,"volume",["<meter>","<meter>","<meter>"]],"<beerbarrel>":[["bl","bl-us","beerbarrel","beerbarrels","beer-barrel","beer-barrels"],.1173477658,"volume",["<meter>","<meter>","<meter>"]],"<beerbarrel-imp>":[["blimp","bl-imp","beerbarrel-imp","beerbarrels-imp","beer-barrel-imp","beer-barrels-imp"],.16365924,"volume",["<meter>","<meter>","<meter>"]],"<kph>":[["kph"],.277777778,"speed",["<meter>"],["<second>"]],"<mph>":[["mph"],.44704,"speed",["<meter>"],["<second>"]],"<knot>":[["kt","kn","kts","knot","knots"],.514444444,"speed",["<meter>"],["<second>"]],"<fps>":[["fps"],.3048,"speed",["<meter>"],["<second>"]],"<gee>":[["gee"],9.80665,"acceleration",["<meter>"],["<second>","<second>"]],"<Gal>":[["Gal"],.01,"acceleration",["<meter>"],["<second>","<second>"]],"<kelvin>":[["degK","kelvin"],1,"temperature",["<kelvin>"]],"<celsius>":[["degC","celsius","celsius","centigrade"],1,"temperature",["<kelvin>"]],"<fahrenheit>":[["degF","fahrenheit"],5/9,"temperature",["<kelvin>"]],"<rankine>":[["degR","rankine"],5/9,"temperature",["<kelvin>"]],"<temp-K>":[["tempK","temp-K"],1,"temperature",["<temp-K>"]],"<temp-C>":[["tempC","temp-C"],1,"temperature",["<temp-K>"]],"<temp-F>":[["tempF","temp-F"],5/9,"temperature",["<temp-K>"]],"<temp-R>":[["tempR","temp-R"],5/9,"temperature",["<temp-K>"]],"<second>":[["s","sec","secs","second","seconds"],1,"time",["<second>"]],"<minute>":[["min","mins","minute","minutes"],60,"time",["<second>"]],"<hour>":[["h","hr","hrs","hour","hours"],3600,"time",["<second>"]],"<day>":[["d","day","days"],86400,"time",["<second>"]],"<week>":[["wk","week","weeks"],604800,"time",["<second>"]],"<fortnight>":[["fortnight","fortnights"],1209600,"time",["<second>"]],"<year>":[["y","yr","year","years","annum"],31556926,"time",["<second>"]],"<decade>":[["decade","decades"],315569260,"time",["<second>"]],"<century>":[["century","centuries"],3155692600,"time",["<second>"]],"<pascal>":[["Pa","pascal","Pascal"],1,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<bar>":[["bar","bars"],1e5,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<mmHg>":[["mmHg"],133.322368,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<inHg>":[["inHg"],3386.3881472,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<torr>":[["torr"],133.322368,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<atm>":[["atm","ATM","atmosphere","atmospheres"],101325,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<psi>":[["psi"],6894.76,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<cmh2o>":[["cmH2O","cmh2o"],98.0638,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<inh2o>":[["inH2O","inh2o"],249.082052,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<poise>":[["P","poise"],.1,"viscosity",["<kilogram>"],["<meter>","<second>"]],"<stokes>":[["St","stokes"],1e-4,"viscosity",["<meter>","<meter>"],["<second>"]],"<mole>":[["mol","mole"],1,"substance",["<mole>"]],"<molar>":[["M","molar"],1e3,"concentration",["<mole>"],["<meter>","<meter>","<meter>"]],"<wtpercent>":[["wt%","wtpercent"],10,"concentration",["<kilogram>"],["<meter>","<meter>","<meter>"]],"<katal>":[["kat","katal","Katal"],1,"activity",["<mole>"],["<second>"]],"<unit>":[["U","enzUnit","unit"],16667e-19,"activity",["<mole>"],["<second>"]],"<farad>":[["F","farad","Farad"],1,"capacitance",["<second>","<second>","<second>","<second>","<ampere>","<ampere>"],["<meter>","<meter>","<kilogram>"]],"<coulomb>":[["C","coulomb","Coulomb"],1,"charge",["<ampere>","<second>"]],"<Ah>":[["Ah"],3600,"charge",["<ampere>","<second>"]],"<ampere>":[["A","Ampere","ampere","amp","amps"],1,"current",["<ampere>"]],"<siemens>":[["S","Siemens","siemens"],1,"conductance",["<second>","<second>","<second>","<ampere>","<ampere>"],["<kilogram>","<meter>","<meter>"]],"<henry>":[["H","Henry","henry"],1,"inductance",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>","<ampere>"]],"<volt>":[["V","Volt","volt","volts"],1,"potential",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<second>","<ampere>"]],"<ohm>":[["Ohm","ohm","Î©","â„¦"],1,"resistance",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<second>","<ampere>","<ampere>"]],"<weber>":[["Wb","weber","webers"],1,"magnetism",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>"]],"<tesla>":[["T","tesla","teslas"],1,"magnetism",["<kilogram>"],["<second>","<second>","<ampere>"]],"<gauss>":[["G","gauss"],1e-4,"magnetism",["<kilogram>"],["<second>","<second>","<ampere>"]],"<maxwell>":[["Mx","maxwell","maxwells"],1e-8,"magnetism",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>"]],"<oersted>":[["Oe","oersted","oersteds"],250/Math.PI,"magnetism",["<ampere>"],["<meter>"]],"<joule>":[["J","joule","Joule","joules"],1,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<erg>":[["erg","ergs"],1e-7,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<btu>":[["BTU","btu","BTUs"],1055.056,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<calorie>":[["cal","calorie","calories"],4.184,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<Calorie>":[["Cal","Calorie","Calories"],4184,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<therm-US>":[["th","therm","therms","Therm","therm-US"],105480400,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<Wh>":[["Wh"],3600,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<newton>":[["N","Newton","newton"],1,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<dyne>":[["dyn","dyne"],1e-5,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<pound-force>":[["lbf","pound-force"],4.448222,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<hertz>":[["Hz","hertz","Hertz"],1,"frequency",["<1>"],["<second>"]],"<radian>":[["rad","radian","radians"],1,"angle",["<radian>"]],"<degree>":[["deg","degree","degrees"],Math.PI/180,"angle",["<radian>"]],"<gradian>":[["gon","grad","gradian","grads"],Math.PI/200,"angle",["<radian>"]],"<steradian>":[["sr","steradian","steradians"],1,"solid_angle",["<steradian>"]],"<rotation>":[["rotation"],2*Math.PI,"angle",["<radian>"]],"<rpm>":[["rpm"],2*Math.PI/60,"angular_velocity",["<radian>"],["<second>"]],"<byte>":[["B","byte","bytes"],1,"information",["<byte>"]],"<bit>":[["b","bit","bits"],.125,"information",["<byte>"]],"<Bps>":[["Bps"],1,"information_rate",["<byte>"],["<second>"]],"<bps>":[["bps"],.125,"information_rate",["<byte>"],["<second>"]],"<dollar>":[["USD","dollar"],1,"currency",["<dollar>"]],"<cents>":[["cents"],.01,"currency",["<dollar>"]],"<candela>":[["cd","candela"],1,"luminosity",["<candela>"]],"<lumen>":[["lm","lumen"],1,"luminous_power",["<candela>","<steradian>"]],"<lux>":[["lux"],1,"illuminance",["<candela>","<steradian>"],["<meter>","<meter>"]],"<watt>":[["W","watt","watts"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<volt-ampere>":[["VA","volt-ampere"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<volt-ampere-reactive>":[["var","Var","VAr","VAR","volt-ampere-reactive"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<horsepower>":[["hp","horsepower"],745.699872,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<gray>":[["Gy","gray","grays"],1,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<roentgen>":[["R","roentgen"],.00933,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<sievert>":[["Sv","sievert","sieverts"],1,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<becquerel>":[["Bq","becquerel","becquerels"],1,"radiation",["<1>"],["<second>"]],"<curie>":[["Ci","curie","curies"],37e9,"radiation",["<1>"],["<second>"]],"<cpm>":[["cpm"],1/60,"rate",["<count>"],["<second>"]],"<dpm>":[["dpm"],1/60,"rate",["<count>"],["<second>"]],"<bpm>":[["bpm"],1/60,"rate",["<count>"],["<second>"]],"<dot>":[["dot","dots"],1,"resolution",["<each>"]],"<pixel>":[["pixel","px"],1,"resolution",["<each>"]],"<ppi>":[["ppi"],1,"resolution",["<pixel>"],["<inch>"]],"<dpi>":[["dpi"],1,"typography",["<dot>"],["<inch>"]],"<cell>":[["cells","cell"],1,"counting",["<each>"]],"<each>":[["each"],1,"counting",["<each>"]],"<count>":[["count"],1,"counting",["<each>"]],"<base-pair>":[["bp","base-pair"],1,"counting",["<each>"]],"<nucleotide>":[["nt","nucleotide"],1,"counting",["<each>"]],"<molecule>":[["molecule","molecules"],1,"counting",["<1>"]],"<dozen>":[["doz","dz","dozen"],12,"prefix_only",["<each>"]],"<percent>":[["%","percent"],.01,"prefix_only",["<1>"]],"<ppm>":[["ppm"],1e-6,"prefix_only",["<1>"]],"<ppt>":[["ppt"],1e-9,"prefix_only",["<1>"]],"<gross>":[["gr","gross"],144,"prefix_only",["<dozen>","<dozen>"]],"<decibel>":[["dB","decibel","decibels"],1,"logarithmic",["<decibel>"]]},m=["<meter>","<kilogram>","<second>","<mole>","<ampere>","<radian>","<kelvin>","<temp-K>","<byte>","<dollar>","<candela>","<each>","<steradian>","<decibel>"],g="<1>",p=[g];function w(t,e){var i=e[1],n=e[3]||[],s=e[4]||[];if(!r(i))throw new u(t+": Invalid unit definition. 'scalar' must be a number");n.forEach((function(e){if(void 0===d[e])throw new u(t+": Invalid unit definition. Unit "+e+" in 'numerator' is not recognized")})),s.forEach((function(e){if(void 0===d[e])throw new u(t+": Invalid unit definition. Unit "+e+" in 'denominator' is not recognized")}))}var b={},_={},y={},M={},x={};for(var v in d)if(d.hasOwnProperty(v)){var E=d[v];if("prefix"===E[2]){b[v]=E[1];for(var A=0;A<E[0].length;A++)_[E[0][A]]=v}else{w(v,E),y[v]={scalar:E[1],numerator:E[3],denominator:E[4]};for(var k=0;k<E[0].length;k++)M[E[0][k]]=v}x[v]=E[0][0]}function S(t){var e,r=[],i=Object.keys(d);if(void 0===t)for(e=0;e<i.length;e++)-1===["","prefix"].indexOf(d[i[e]][2])&&r.push(i[e].substr(1,i[e].length-2));else{if(-1===this.getKinds().indexOf(t))throw new u("Kind not recognized");for(e=0;e<i.length;e++)d[i[e]][2]===t&&r.push(i[e].substr(1,i[e].length-2))}return r.sort((function(t,e){return t.toLowerCase()<e.toLowerCase()?-1:t.toLowerCase()>e.toLowerCase()?1:0}))}function I(t){if(!M[t])throw new u("Unit not recognized");return d[M[t]][0]}var D=["length","time","temperature","mass","current","substance","luminosity","currency","information","angle"];function R(){if(this.signature)return this.signature;for(var t=T.call(this),e=0;e<t.length;e++)t[e]*=Math.pow(20,e);return t.reduce((function(t,e){return t+e}),0)}function T(){if(!this.isBase())return T.call(this.toBase());for(var t,e,r=new Array(D.length),i=0;i<r.length;i++)r[i]=0;for(var n=0;n<this.numerator.length;n++)(t=d[this.numerator[n]])&&(e=D.indexOf(t[2]))>=0&&(r[e]=r[e]+1);for(var s=0;s<this.denominator.length;s++)(t=d[this.denominator[s]])&&(e=D.indexOf(t[2]))>=0&&(r[e]=r[e]-1);return r}var $="[+-]",C="\\d+",B="\\."+C,P=new RegExp("^("+$+"?\\s*(?:(?:"+C+"(?:"+B+")?)|(?:"+B+"))(?:[Ee]"+$+"?"+C+")?)?\\s*([^/]*)(?:/(.+))?$"),O="\\^|\\*{2}",N="[01234]",L=new RegExp("([^ \\*\\d]+?)(?:"+O+")?(-?"+N+"(?![a-zA-Z]))"),F=new RegExp("([^ \\*\\d]+?)(?:"+O+")?("+N+"(?![a-zA-Z]))");function U(e){t(e)||(e=e.toString()),e=e.trim();var r=P.exec(e);if(!r)throw new u(e+": Quantity not recognized");var i=r[1];i?(i=i.replace(/\s/g,""),this.scalar=parseFloat(i)):this.scalar=1;for(var n,s,o,a=r[2],l=r[3];r=L.exec(a);){if(n=parseFloat(r[2]),isNaN(n))throw new u("Unit exponent is not a number");if(0===n&&!z.test(r[1]))throw new u("Unit not recognized");s=r[1]+" ",o="";for(var h=0;h<Math.abs(n);h++)o+=s;n>=0?a=a.replace(r[0],o):(l=l?l+o:o,a=a.replace(r[0],""))}for(;r=F.exec(l);){if(n=parseFloat(r[2]),isNaN(n))throw new u("Unit exponent is not a number");if(0===n&&!z.test(r[1]))throw new u("Unit not recognized");s=r[1]+" ",o="";for(var c=0;c<n;c++)o+=s;l=l.replace(r[0],o)}a&&(this.numerator=Z(a.trim())),l&&(this.denominator=Z(l.trim()))}var Y=Object.keys(_).sort((function(t,e){return e.length-t.length})).join("|"),H=Object.keys(M).sort((function(t,e){return e.length-t.length})).join("|"),V="("+Y+")??("+H+")(?:\\b|$)",z=new RegExp("^\\s*("+V+"[\\s\\*]*)+$"),X=new RegExp(V,"g"),G={};function Z(t){var e=G[t];if(e)return e;var r,i=[];if(!z.test(t))throw new u("Unit not recognized");for(;r=X.exec(t);)i.push(r.slice(1));return i=(i=(i=i.map((function(t){return _[t[0]]?[_[t[0]],M[t[1]]]:[M[t[1]]]}))).reduce((function(t,e){return t.concat(e)}),[])).filter((function(t){return t})),G[t]=i,i}function K(e){if(!t(e))throw new u("Argument should be a string");try{return this(e)}catch(t){return null}}function q(t){return t instanceof j}function j(t,e){if(W.apply(null,arguments),!q(this))return new j(t,e);if(this.scalar=null,this.baseScalar=null,this.signature=null,this._conversionCache={},this.numerator=p,this.denominator=p,J(t)?(this.scalar=t.scalar,this.numerator=t.numerator&&0!==t.numerator.length?t.numerator:p,this.denominator=t.denominator&&0!==t.denominator.length?t.denominator:p):e?(U.call(this,e),this.scalar=t):U.call(this,t),this.denominator.join("*").indexOf("temp")>=0)throw new u("Cannot divide with temperatures");if(this.numerator.join("*").indexOf("temp")>=0){if(this.numerator.length>1)throw new u("Cannot multiply by temperatures");if(!s(this.denominator,p))throw new u("Cannot divide with temperatures")}if(this.initValue=t,Q.call(this),this.isTemperature()&&this.baseScalar<0)throw new u("Temperatures must not be less than absolute zero")}function W(e,i){if(i){if(!r(e)||!t(i))throw new u("Only number accepted as initialization value when units are explicitly provided")}else if(!(t(e)||r(e)||q(e)||J(e)))throw new u("Only string, number or quantity accepted as single initialization value")}function J(t){return t&&"object"==typeof t&&t.hasOwnProperty("scalar")}function Q(){if(this.baseScalar)return this.baseScalar;if(this.isBase())this.baseScalar=this.scalar,this.signature=R.call(this);else{var t=this.toBase();this.baseScalar=t.scalar,this.signature=t.signature}}j.prototype={constructor:j};var tt={"-312078":"elastance","-312058":"resistance","-312038":"inductance","-152058":"potential","-152040":"magnetism","-152038":"magnetism","-7997":"specific_volume","-79":"snap","-59":"jolt","-39":"acceleration","-38":"radiation","-20":"frequency","-19":"speed","-18":"viscosity","-17":"volumetric_flow","-1":"wavenumber",0:"unitless",1:"length",2:"area",3:"volume",20:"time",400:"temperature",7941:"yank",7942:"power",7959:"pressure",7961:"force",7962:"energy",7979:"viscosity",7981:"momentum",7982:"angular_momentum",7997:"density",7998:"area_density",8e3:"mass",152020:"radiation_exposure",159999:"magnetism",16e4:"current",160020:"charge",312058:"conductance",312078:"capacitance",3199980:"activity",3199997:"molar_concentration",32e5:"substance",63999998:"illuminance",64e6:"luminous_power",128e7:"currency",25599999980:"information_rate",256e8:"information",511999999980:"angular_velocity",512e9:"angle"};function et(){return n(Object.keys(tt).map((function(t){return tt[t]})))}function rt(t,e){var r=t.units(),i=e.to(r),n=j(st(r));return j({scalar:t.scalar-i.scalar,numerator:n.numerator,denominator:n.denominator})}function it(t,e){var r=e.to(st(t.units()));return j({scalar:t.scalar-r.scalar,numerator:t.numerator,denominator:t.denominator})}function nt(t,e){var r=e.to(st(t.units()));return j({scalar:t.scalar+r.scalar,numerator:t.numerator,denominator:t.denominator})}function st(t){if("tempK"===t)return"degK";if("tempC"===t)return"degC";if("tempF"===t)return"degF";if("tempR"===t)return"degR";throw new u("Unknown type for temp conversion from: "+t)}function ot(t,e){var r,i=at(t),n=e.units();if("degK"===n)r=i.scalar;else if("degC"===n)r=i.scalar;else if("degF"===n)r=9*i.scalar/5;else{if("degR"!==n)throw new u("Unknown type for degree conversion to: "+n);r=9*i.scalar/5}return j({scalar:r,numerator:e.numerator,denominator:e.denominator})}function at(t){var e,r=t.units();if(r.match(/(deg)[CFRK]/))e=t.baseScalar;else if("tempK"===r)e=t.scalar;else if("tempC"===r)e=t.scalar;else if("tempF"===r)e=5*t.scalar/9;else{if("tempR"!==r)throw new u("Unknown type for temp conversion from: "+r);e=5*t.scalar/9}return j({scalar:e,numerator:["<kelvin>"],denominator:p})}function lt(t,e){var r,i=e.units();if("tempK"===i)r=t.baseScalar;else if("tempC"===i)r=t.baseScalar-273.15;else if("tempF"===i)r=9*t.baseScalar/5-459.67;else{if("tempR"!==i)throw new u("Unknown type for temp conversion to: "+i);r=9*t.baseScalar/5}return j({scalar:r,numerator:e.numerator,denominator:e.denominator})}function ht(t){var e,r=t.units();if(r.match(/(deg)[CFRK]/))e=t.baseScalar;else if("tempK"===r)e=t.scalar;else if("tempC"===r)e=t.scalar+273.15;else if("tempF"===r)e=5*(t.scalar+459.67)/9;else{if("tempR"!==r)throw new u("Unknown type for temp conversion from: "+r);e=5*t.scalar/9}return j({scalar:e,numerator:["<temp-K>"],denominator:p})}function ct(t,e){var r,n=j(t),s=j(e);return n.eq(s)?i:(r=n.isTemperature()?function(t){return n.mul(t).to(s).scalar}:function(t){return t*n.baseScalar/s.baseScalar},function(t){var e,i,n;if(Array.isArray(t)){for(i=t.length,n=[],e=0;e<i;e++)n.push(r(t[e]));return n}return r(t)})}j.prototype.kind=function(){return tt[this.signature.toString()]},o(j.prototype,{isDegrees:function(){return(null===this.signature||400===this.signature)&&1===this.numerator.length&&s(this.denominator,p)&&(this.numerator[0].match(/<temp-[CFRK]>/)||this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/))},isTemperature:function(){return this.isDegrees()&&this.numerator[0].match(/<temp-[CFRK]>/)}}),o(j.prototype,{to:function(e){var r,i;return null==e?this:t(e)?(r=this._conversionCache[e])?r:(i=j(e)).units()===this.units()?this:(this.isCompatible(i)?i=i.isTemperature()?lt(this,i):i.isDegrees()?ot(this,i):j({scalar:l(this.baseScalar,i.baseScalar),numerator:i.numerator,denominator:i.denominator}):this.isInverse(i)?i=this.inverse().to(e):f(this.units(),i.units()),this._conversionCache[e]=i,i):this.to(e.units())},toBase:function(){if(this.isBase())return this;if(this.isTemperature())return ht(this);var t=ut[this.units()];return t||(t=ft(this.numerator,this.denominator),ut[this.units()]=t),t.mul(this.scalar)},toFloat:function(){if(this.isUnitless())return this.scalar;throw new u("Can't convert to Float unless unitless.  Use Unit#scalar")},toPrec:function(e){if(t(e)&&(e=j(e)),r(e)&&(e=j(e+" "+this.units())),this.isUnitless()?e.isUnitless()||f(this.units(),e.units()):e=e.to(this.units()),0===e.scalar)throw new u("Divide by zero");return j(a(Math.round(this.scalar/e.scalar),e.scalar)+this.units())}});var ut={};function ft(t,e){for(var r,i=[],n=[],s=1,o=0;o<t.length;o++)r=t[o],b[r]?s=a(s,b[r]):y[r]&&(s*=y[r].scalar,y[r].numerator&&i.push(y[r].numerator),y[r].denominator&&n.push(y[r].denominator));for(var l=0;l<e.length;l++)r=e[l],b[r]?s/=b[r]:y[r]&&(s/=y[r].scalar,y[r].numerator&&n.push(y[r].numerator),y[r].denominator&&i.push(y[r].denominator));return j({scalar:s,numerator:i=i.reduce((function(t,e){return t.concat(e)}),[]),denominator:n=n.reduce((function(t,e){return t.concat(e)}),[])})}function dt(t,e,r,i){function n(t){return t!==g}t=t.filter(n),r=r.filter(n),e=e.filter(n),i=i.filter(n);var s={};function o(t,e){for(var r,i,n,o=0;o<t.length;o++)if(b[t[o]]?(r=t[o+1],i=t[o],n=b[i],o++):(r=t[o],i=null,n=1),r&&r!==g)if(s[r]){s[r][0]+=e;var a=s[r][2]?b[s[r][2]]:1;s[r][1===e?3:4]*=l(n,a)}else s[r]=[e,r,i,1,1]}o(t,1),o(e,-1),o(r,1),o(i,-1);var a=[],h=[],c=1;for(var u in s)if(s.hasOwnProperty(u)){var f,d=s[u];if(d[0]>0)for(f=0;f<d[0];f++)a.push(null===d[2]?d[1]:[d[2],d[1]]);else if(d[0]<0)for(f=0;f<-d[0];f++)h.push(null===d[2]?d[1]:[d[2],d[1]]);c*=l(d[3],d[4])}return 0===a.length&&(a=p),0===h.length&&(h=p),[a=a.reduce((function(t,e){return t.concat(e)}),[]),h=h.reduce((function(t,e){return t.concat(e)}),[]),c]}function mt(){}function gt(t,e){return(t+" "+e).trim()}j.parse=K,j.getUnits=S,j.getAliases=I,j.mulSafe=a,j.divSafe=l,j.getKinds=et,j.swiftConverter=ct,j.Error=u,o(j.prototype,{add:function(e){if(t(e)&&(e=j(e)),this.isCompatible(e)||f(this.units(),e.units()),this.isTemperature()&&e.isTemperature())throw new u("Cannot add two temperatures");return this.isTemperature()?nt(this,e):e.isTemperature()?nt(e,this):j({scalar:this.scalar+e.to(this).scalar,numerator:this.numerator,denominator:this.denominator})},sub:function(e){if(t(e)&&(e=j(e)),this.isCompatible(e)||f(this.units(),e.units()),this.isTemperature()&&e.isTemperature())return rt(this,e);if(this.isTemperature())return it(this,e);if(e.isTemperature())throw new u("Cannot subtract a temperature from a differential degree unit");return j({scalar:this.scalar-e.to(this).scalar,numerator:this.numerator,denominator:this.denominator})},mul:function(e){if(r(e))return j({scalar:a(this.scalar,e),numerator:this.numerator,denominator:this.denominator});if(t(e)&&(e=j(e)),(this.isTemperature()||e.isTemperature())&&!this.isUnitless()&&!e.isUnitless())throw new u("Cannot multiply by temperatures");var i=this,n=e;i.isCompatible(n)&&400!==i.signature&&(n=n.to(i));var s=dt(i.numerator,i.denominator,n.numerator,n.denominator);return j({scalar:a(i.scalar,n.scalar,s[2]),numerator:s[0],denominator:s[1]})},div:function(e){if(r(e)){if(0===e)throw new u("Divide by zero");return j({scalar:this.scalar/e,numerator:this.numerator,denominator:this.denominator})}if(t(e)&&(e=j(e)),0===e.scalar)throw new u("Divide by zero");if(e.isTemperature())throw new u("Cannot divide with temperatures");if(this.isTemperature()&&!e.isUnitless())throw new u("Cannot divide with temperatures");var i=this,n=e;i.isCompatible(n)&&400!==i.signature&&(n=n.to(i));var s=dt(i.numerator,i.denominator,n.denominator,n.numerator);return j({scalar:a(i.scalar,s[2])/n.scalar,numerator:s[0],denominator:s[1]})},inverse:function(){if(this.isTemperature())throw new u("Cannot divide with temperatures");if(0===this.scalar)throw new u("Divide by zero");return j({scalar:1/this.scalar,numerator:this.denominator,denominator:this.numerator})}}),o(j.prototype,{eq:function(t){return 0===this.compareTo(t)},lt:function(t){return-1===this.compareTo(t)},lte:function(t){return this.eq(t)||this.lt(t)},gt:function(t){return 1===this.compareTo(t)},gte:function(t){return this.eq(t)||this.gt(t)},compareTo:function(e){return t(e)?this.compareTo(j(e)):(this.isCompatible(e)||f(this.units(),e.units()),this.baseScalar<e.baseScalar?-1:this.baseScalar===e.baseScalar?0:this.baseScalar>e.baseScalar?1:void 0)},same:function(t){return this.scalar===t.scalar&&this.units()===t.units()}}),o(j.prototype,{isUnitless:function(){return[this.numerator,this.denominator].every((function(t){return s(t,p)}))},isCompatible:function(e){return t(e)?this.isCompatible(j(e)):!!q(e)&&void 0!==e.signature&&this.signature===e.signature},isInverse:function(t){return this.inverse().isCompatible(t)},isBase:function(){return void 0!==this._isBase?this._isBase:this.isDegrees()&&this.numerator[0].match(/<(kelvin|temp-K)>/)?(this._isBase=!0,this._isBase):(this.numerator.concat(this.denominator).forEach((function(t){t!==g&&-1===m.indexOf(t)&&(this._isBase=!1)}),this),!1===this._isBase||(this._isBase=!0),this._isBase)}}),mt.prototype.get=function(t){return arguments.length>1&&(t=Array.apply(null,arguments)),t.reduce((function(e,r,i){if(e){var n=e[r];return i===t.length-1?n?n.data:void 0:n}}),this)},mt.prototype.set=function(t,e){return arguments.length>2&&(t=Array.prototype.slice.call(arguments,0,-1),e=arguments[arguments.length-1]),t.reduce((function(r,i,n){var s=r[i];return void 0===s&&(s=r[i]={}),n===t.length-1?(s.data=e,e):s}),this)},j.formatter=gt,o(j.prototype,{units:function(){if(void 0!==this._units)return this._units;var t=s(this.numerator,p),e=s(this.denominator,p);if(t&&e)return this._units="",this._units;var r=wt(this.numerator),i=wt(this.denominator);return this._units=r+(e?"":"/"+i),this._units},toString:function(e,i){var n;if(r(e))n=this.units(),i=e;else if(t(e))n=e;else if(q(e))return this.toPrec(e).toString(i);var s=this.to(n);return s=((void 0!==i?h(s.scalar,i):s.scalar)+" "+s.units()).trim()},format:function(t,e){1===arguments.length&&"function"==typeof t&&(e=t,t=void 0),e=e||j.formatter;var r=this.to(t);return e.call(this,r.scalar,r.units())}});var pt=new mt;function wt(t){var e=pt.get(t);return e||(e=s(t,p)?"1":_t(bt(t)).join("*"),pt.set(t,e),e)}function bt(t){for(var e,r,i=[],n=0;n<t.length;n++)e=t[n],r=t[n+1],b[e]?(i.push(x[e]+x[r]),n++):i.push(x[e]);return i}function _t(t){return t.reduce((function(t,e){var r=t[e];return r||t.push(r=t[e]=[e,0]),r[1]++,t}),[]).map((function(t){return t[0]+(t[1]>1?t[1]:"")}))}return j.version="1.7.6",j}()}(quantities);var Qty=quantities.exports;function deepValue(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split(".");for(let e of r){if(void 0===t[e])return;t=t[e]}return t}var orientation={exports:{}},twoProduct_1=twoProduct$1,SPLITTER=+(Math.pow(2,27)+1);function twoProduct$1(t,e,r){var i=t*e,n=SPLITTER*t,s=n-(n-t),o=t-s,a=SPLITTER*e,l=a-(a-e),h=e-l,c=o*h-(i-s*l-o*l-s*h);return r?(r[0]=c,r[1]=i,r):[c,i]}var robustSum=linearExpansionSum;function scalarScalar$1(t,e){var r=t+e,i=r-t,n=t-(r-i)+(e-i);return n?[n,r]:[r]}function linearExpansionSum(t,e){var r=0|t.length,i=0|e.length;if(1===r&&1===i)return scalarScalar$1(t[0],e[0]);var n,s,o=new Array(r+i),a=0,l=0,h=0,c=Math.abs,u=t[l],f=c(u),d=e[h],m=c(d);f<m?(s=u,(l+=1)<r&&(f=c(u=t[l]))):(s=d,(h+=1)<i&&(m=c(d=e[h]))),l<r&&f<m||h>=i?(n=u,(l+=1)<r&&(f=c(u=t[l]))):(n=d,(h+=1)<i&&(m=c(d=e[h])));for(var g,p,w=n+s,b=w-n,_=s-b,y=_,M=w;l<r&&h<i;)f<m?(n=u,(l+=1)<r&&(f=c(u=t[l]))):(n=d,(h+=1)<i&&(m=c(d=e[h]))),(_=(s=y)-(b=(w=n+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g;for(;l<r;)(_=(s=y)-(b=(w=(n=u)+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g,(l+=1)<r&&(u=t[l]);for(;h<i;)(_=(s=y)-(b=(w=(n=d)+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g,(h+=1)<i&&(d=e[h]);return y&&(o[a++]=y),M&&(o[a++]=M),a||(o[a++]=0),o.length=a,o}var twoSum$1=fastTwoSum;function fastTwoSum(t,e,r){var i=t+e,n=i-t,s=e-n,o=t-(i-n);return r?(r[0]=o+s,r[1]=i,r):[o+s,i]}var twoProduct=twoProduct_1,twoSum=twoSum$1,robustScale=scaleLinearExpansion;function scaleLinearExpansion(t,e){var r=t.length;if(1===r){var i=twoProduct(t[0],e);return i[0]?i:[i[1]]}var n=new Array(2*r),s=[.1,.1],o=[.1,.1],a=0;twoProduct(t[0],e,s),s[0]&&(n[a++]=s[0]);for(var l=1;l<r;++l){twoProduct(t[l],e,o);var h=s[1];twoSum(h,o[0],s),s[0]&&(n[a++]=s[0]);var c=o[1],u=s[1],f=c+u,d=u-(f-c);s[1]=f,d&&(n[a++]=d)}return s[1]&&(n[a++]=s[1]),0===a&&(n[a++]=0),n.length=a,n}var robustDiff=robustSubtract;function scalarScalar(t,e){var r=t+e,i=r-t,n=t-(r-i)+(e-i);return n?[n,r]:[r]}function robustSubtract(t,e){var r=0|t.length,i=0|e.length;if(1===r&&1===i)return scalarScalar(t[0],-e[0]);var n,s,o=new Array(r+i),a=0,l=0,h=0,c=Math.abs,u=t[l],f=c(u),d=-e[h],m=c(d);f<m?(s=u,(l+=1)<r&&(f=c(u=t[l]))):(s=d,(h+=1)<i&&(m=c(d=-e[h]))),l<r&&f<m||h>=i?(n=u,(l+=1)<r&&(f=c(u=t[l]))):(n=d,(h+=1)<i&&(m=c(d=-e[h])));for(var g,p,w=n+s,b=w-n,_=s-b,y=_,M=w;l<r&&h<i;)f<m?(n=u,(l+=1)<r&&(f=c(u=t[l]))):(n=d,(h+=1)<i&&(m=c(d=-e[h]))),(_=(s=y)-(b=(w=n+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g;for(;l<r;)(_=(s=y)-(b=(w=(n=u)+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g,(l+=1)<r&&(u=t[l]);for(;h<i;)(_=(s=y)-(b=(w=(n=d)+s)-n))&&(o[a++]=_),y=M-((g=M+w)-(p=g-M))+(w-p),M=g,(h+=1)<i&&(d=-e[h]);return y&&(o[a++]=y),M&&(o[a++]=M),a||(o[a++]=0),o.length=a,o}!function(t){var e=twoProduct_1,r=robustSum,i=robustScale,n=robustDiff;function s(t,e,r,i){return function(r,n,s){var o=t(t(e(n[1],s[0]),e(-s[1],n[0])),t(e(r[1],n[0]),e(-n[1],r[0]))),a=t(e(r[1],s[0]),e(-s[1],r[0])),l=i(o,a);return l[l.length-1]}}function o(t,e,r,i){return function(n,s,o,a){var l=t(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),s[2]),t(r(t(e(s[1],a[0]),e(-a[1],s[0])),-o[2]),r(t(e(s[1],o[0]),e(-o[1],s[0])),a[2]))),t(r(t(e(s[1],a[0]),e(-a[1],s[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),a[2])))),h=t(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-o[2]),r(t(e(n[1],o[0]),e(-o[1],n[0])),a[2]))),t(r(t(e(s[1],o[0]),e(-o[1],s[0])),n[2]),t(r(t(e(n[1],o[0]),e(-o[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),o[2])))),c=i(l,h);return c[c.length-1]}}function a(t,e,r,i){return function(n,s,o,a,l){var h=t(t(t(r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),o[2]),t(r(t(e(o[1],l[0]),e(-l[1],o[0])),-a[2]),r(t(e(o[1],a[0]),e(-a[1],o[0])),l[2]))),s[3]),t(r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),s[2]),t(r(t(e(s[1],l[0]),e(-l[1],s[0])),-a[2]),r(t(e(s[1],a[0]),e(-a[1],s[0])),l[2]))),-o[3]),r(t(r(t(e(o[1],l[0]),e(-l[1],o[0])),s[2]),t(r(t(e(s[1],l[0]),e(-l[1],s[0])),-o[2]),r(t(e(s[1],o[0]),e(-o[1],s[0])),l[2]))),a[3]))),t(r(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),s[2]),t(r(t(e(s[1],a[0]),e(-a[1],s[0])),-o[2]),r(t(e(s[1],o[0]),e(-o[1],s[0])),a[2]))),-l[3]),t(r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),s[2]),t(r(t(e(s[1],l[0]),e(-l[1],s[0])),-a[2]),r(t(e(s[1],a[0]),e(-a[1],s[0])),l[2]))),n[3]),r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-a[2]),r(t(e(n[1],a[0]),e(-a[1],n[0])),l[2]))),-s[3])))),t(t(r(t(r(t(e(s[1],l[0]),e(-l[1],s[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),l[2]))),a[3]),t(r(t(r(t(e(s[1],a[0]),e(-a[1],s[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),a[2]))),-l[3]),r(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),s[2]),t(r(t(e(s[1],a[0]),e(-a[1],s[0])),-o[2]),r(t(e(s[1],o[0]),e(-o[1],s[0])),a[2]))),n[3]))),t(r(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-o[2]),r(t(e(n[1],o[0]),e(-o[1],n[0])),a[2]))),-s[3]),t(r(t(r(t(e(s[1],a[0]),e(-a[1],s[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),a[2]))),o[3]),r(t(r(t(e(s[1],o[0]),e(-o[1],s[0])),n[2]),t(r(t(e(n[1],o[0]),e(-o[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),o[2]))),-a[3]))))),c=t(t(t(r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),o[2]),t(r(t(e(o[1],l[0]),e(-l[1],o[0])),-a[2]),r(t(e(o[1],a[0]),e(-a[1],o[0])),l[2]))),n[3]),r(t(r(t(e(a[1],l[0]),e(-l[1],a[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-a[2]),r(t(e(n[1],a[0]),e(-a[1],n[0])),l[2]))),-o[3])),t(r(t(r(t(e(o[1],l[0]),e(-l[1],o[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-o[2]),r(t(e(n[1],o[0]),e(-o[1],n[0])),l[2]))),a[3]),r(t(r(t(e(o[1],a[0]),e(-a[1],o[0])),n[2]),t(r(t(e(n[1],a[0]),e(-a[1],n[0])),-o[2]),r(t(e(n[1],o[0]),e(-o[1],n[0])),a[2]))),-l[3]))),t(t(r(t(r(t(e(o[1],l[0]),e(-l[1],o[0])),s[2]),t(r(t(e(s[1],l[0]),e(-l[1],s[0])),-o[2]),r(t(e(s[1],o[0]),e(-o[1],s[0])),l[2]))),n[3]),r(t(r(t(e(o[1],l[0]),e(-l[1],o[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-o[2]),r(t(e(n[1],o[0]),e(-o[1],n[0])),l[2]))),-s[3])),t(r(t(r(t(e(s[1],l[0]),e(-l[1],s[0])),n[2]),t(r(t(e(n[1],l[0]),e(-l[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),l[2]))),o[3]),r(t(r(t(e(s[1],o[0]),e(-o[1],s[0])),n[2]),t(r(t(e(n[1],o[0]),e(-o[1],n[0])),-s[2]),r(t(e(n[1],s[0]),e(-s[1],n[0])),o[2]))),-l[3])))),u=i(h,c);return u[u.length-1]}}function l(t){return(3===t?s:4===t?o:a)(r,e,i,n)}var h=l(3),c=l(4),u=[function(){return 0},function(){return 0},function(t,e){return e[0]-t[0]},function(t,e,r){var i,n=(t[1]-r[1])*(e[0]-r[0]),s=(t[0]-r[0])*(e[1]-r[1]),o=n-s;if(n>0){if(s<=0)return o;i=n+s}else{if(!(n<0))return o;if(s>=0)return o;i=-(n+s)}var a=33306690738754716e-32*i;return o>=a||o<=-a?o:h(t,e,r)},function(t,e,r,i){var n=t[0]-i[0],s=e[0]-i[0],o=r[0]-i[0],a=t[1]-i[1],l=e[1]-i[1],h=r[1]-i[1],u=t[2]-i[2],f=e[2]-i[2],d=r[2]-i[2],m=s*h,g=o*l,p=o*a,w=n*h,b=n*l,_=s*a,y=u*(m-g)+f*(p-w)+d*(b-_),M=7771561172376103e-31*((Math.abs(m)+Math.abs(g))*Math.abs(u)+(Math.abs(p)+Math.abs(w))*Math.abs(f)+(Math.abs(b)+Math.abs(_))*Math.abs(d));return y>M||-y>M?y:c(t,e,r,i)}];function f(t){var e=u[t.length];return e||(e=u[t.length]=l(t.length)),e.apply(void 0,t)}function d(t,e,r,i,n,s,o){return function(e,r,a,l,h){switch(arguments.length){case 0:case 1:return 0;case 2:return i(e,r);case 3:return n(e,r,a);case 4:return s(e,r,a,l);case 5:return o(e,r,a,l,h)}for(var c=new Array(arguments.length),u=0;u<arguments.length;++u)c[u]=arguments[u];return t(c)}}!function(){for(;u.length<=5;)u.push(l(u.length));t.exports=d.apply(void 0,[f].concat(u));for(var e=0;e<=5;++e)t.exports[e]=u[e]}()}(orientation);var robustPnp=robustPointInPolygon,orient=orientation.exports;function robustPointInPolygon(t,e){for(var r=e[0],i=e[1],n=t.length,s=1,o=n,a=0,l=n-1;a<o;l=a++){var h=t[a],c=t[l],u=h[1],f=c[1];if(f<u){if(f<i&&i<u){if(0===(d=orient(h,c,e)))return 0;s^=0<d|0}else if(i===u){if(u<t[(a+1)%n][1]){if(0===(d=orient(h,c,e)))return 0;s^=0<d|0}}}else if(u<f){if(u<i&&i<f){if(0===(d=orient(h,c,e)))return 0;s^=d<0|0}else if(i===u){if(t[(a+1)%n][1]<u){var d;if(0===(d=orient(h,c,e)))return 0;s^=d<0|0}}}else if(i===u){var m=Math.min(h[0],c[0]),g=Math.max(h[0],c[0]);if(0===a){for(;l>0;){var p=(l+n-1)%n;if((_=t[p])[1]!==i)break;var w=_[0];m=Math.min(m,w),g=Math.max(g,w),l=p}if(0===l)return m<=r&&r<=g?0:1;o=l+1}for(var b=t[(l+n-1)%n][1];a+1<o;){var _;if((_=t[a+1])[1]!==i)break;w=_[0];m=Math.min(m,w),g=Math.max(g,w),a+=1}if(m<=r&&r<=g)return 0;var y=t[(a+1)%n][1];r<m&&b<i!=y<i&&(s^=1)}}return 2*s-1}var robustPointInPolygon$1=robustPnp;function feretDiameters(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{originalPoints:e=monotoneChainConvexHull.call(this)}=t;if(0===e.length)return{min:0,max:0,minLine:[],maxLine:[],aspectRatio:1};if(1===e.length)return{min:1,max:1,minLine:[e[0],e[0]],maxLine:[e[0],e[0]],aspectRatio:1};const r=new Array(e.length);let i=1/0,n=0,s=[];for(let t=0;t<e.length;t++){let o=getAngle(e[t],e[(t+1)%e.length]);rotate(-o,e,r);let a=0,l=[];for(let i=0;i<e.length;i++){let e=Math.abs(r[t][1]-r[i][1]);e>a&&(a=e,l=[],l.push([r[i][0],r[t][1]],[r[i][0],r[i][1]]))}a<i&&(i=a,n=o,s=l)}rotate(n,s,s);let o=0,a=[],l=0;for(let t=0;t<e.length-1;t++)for(let r=t+1;r<e.length;r++){let i=(e[t][0]-e[r][0])**2+(e[t][1]-e[r][1])**2;i>l&&(l=i,o=Math.sqrt(i),a=[e[t],e[r]])}return{min:i,minLine:s,max:o,maxLine:a,aspectRatio:i/o}}function getAngle(t,e){let r=normalize(difference(e,t)),i=Math.acos(r[0]);return r[1]<0?-i:i}class Roi{constructor(t,e){this.map=t,this.id=e,this.minX=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.meanX=0,this.meanY=0,this.surface=0,this.computed={}}getMask(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{scale:e=1,kind:r=""}=t;let i;switch(r){case"contour":i=this.contourMask;break;case"box":i=this.boxMask;break;case"filled":i=this.filledMask;break;case"center":i=this.centerMask;break;case"mbr":i=this.mbrFilledMask;break;case"hull":i=this.convexHullFilledMask;break;case"hullContour":i=this.convexHullMask;break;case"mbrContour":i=this.mbrMask;break;case"feret":i=this.feretMask;break;default:i=this.mask}return e<1&&(i=i.resize({factor:e}),i.parent=this.mask.parent,i.position[0]+=this.minX,i.position[1]+=this.minY),i}get mean(){throw new Error("Roi mean not implemented yet")}get center(){return this.computed.center||(this.computed.center=[this.width/2>>0,this.height/2>>0]),this.computed.center}get ratio(){return this.width/this.height}get width(){return this.maxX-this.minX+1}get height(){return this.maxY-this.minY+1}_computExternalIDs(){let t=this.borderIDs,e=this.borderLengths;this.computed.externalIDs=[],this.computed.externalLengths=[];let r=this.internalIDs;for(let i=0;i<t.length;i++)r.includes(t[i])||(this.computed.externalIDs.push(t[i]),this.computed.externalLengths.push(e[i]))}get externalIDs(){return this.computed.externalIDs||this._computExternalIDs(),this.computed.externalIDs}get externalLengths(){return this.computed.externalLengths||this._computExternalIDs(),this.computed.externalLengths}_computeBorderIDs(){let t=getBorders(this);this.computed.borderIDs=t.ids,this.computed.borderLengths=t.lengths}get borderIDs(){return this.computed.borderIDs||this._computeBorderIDs(),this.computed.borderIDs}get borderLengths(){return this.computed.borderLengths||this._computeBorderIDs(),this.computed.borderLengths}get boxIDs(){return this.computed.boxIDs||(this.computed.boxIDs=getBoxIDs(this)),this.computed.boxIDs}get internalIDs(){return this.computed.internalIDs||(this.computed.internalIDs=getInternalIDs(this)),this.computed.internalIDs}get box(){return this.computed.box||(this.computed.box=getBox(this)),this.computed.box}get external(){return this.computed.external||(this.computed.external=getExternal(this)),this.computed.external}get holesInfo(){return this.computed.holesInfo||(this.computed.holesInfo=getHolesInfo(this)),this.computed.holesInfo}get border(){return this.computed.border||(this.computed.border=getBorder(this)),this.computed.border}get contourMask(){if(!this.computed.contourMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let e=0;e<this.width;e++)for(let r=0;r<this.height;r++)this.map.data[e+this.minX+(r+this.minY)*this.map.width]===this.id&&(e>0&&e<this.width-1&&r>0&&r<this.height-1&&this.map.data[e-1+this.minX+(r+this.minY)*this.map.width]===this.id&&this.map.data[e+1+this.minX+(r+this.minY)*this.map.width]===this.id&&this.map.data[e+this.minX+(r-1+this.minY)*this.map.width]===this.id&&this.map.data[e+this.minX+(r+1+this.minY)*this.map.width]===this.id||t.setBitXY(e,r));this.computed.contourMask=t}return this.computed.contourMask}get boxMask(){if(!this.computed.boxMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let e=0;e<this.width;e++)t.setBitXY(e,0),t.setBitXY(e,this.height-1);for(let e=0;e<this.height;e++)t.setBitXY(0,e),t.setBitXY(this.width-1,e);this.computed.boxMask=t}return this.computed.boxMask}get mask(){if(!this.computed.mask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let e=0;e<this.width;e++)for(let r=0;r<this.height;r++)this.map.data[e+this.minX+(r+this.minY)*this.map.width]===this.id&&t.setBitXY(e,r);this.computed.mask=t}return this.computed.mask}get filledMask(){if(!this.computed.filledMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let e=0;e<this.width;e++)for(let r=0;r<this.height;r++){let i=e+this.minX+(r+this.minY)*this.map.width;this.internalIDs.includes(this.map.data[i])&&t.setBitXY(e,r)}this.computed.filledMask=t}return this.computed.filledMask}get centerMask(){if(!this.computed.centerMask){let t=new Shape({kind:"smallCross"}).getMask();t.parent=this.map.parent,t.position=[this.minX+this.center[0]-1,this.minY+this.center[1]-1],this.computed.centerMask=t}return this.computed.centerMask}get convexHull(){if(!this.computed.convexHull){const t=[];for(let e=0;e<this.width;e++)for(let r=0;r<this.height;r++)this.map.data[e+this.minX+(r+this.minY)*this.map.width]===this.id&&(e>0&&e<this.width-1&&r>0&&r<this.height-1&&this.map.data[e-1+this.minX+(r+this.minY)*this.map.width]===this.id&&this.map.data[e+1+this.minX+(r+this.minY)*this.map.width]===this.id&&this.map.data[e+this.minX+(r-1+this.minY)*this.map.width]===this.id&&this.map.data[e+this.minX+(r+1+this.minY)*this.map.width]===this.id||(t.push([e,r]),t.push([e+1,r]),t.push([e,r+1]),t.push([e+1,r+1])));const e=monotoneChainConvexHull$1(t);this.computed.convexHull={polyline:e,surface:surface(e),perimeter:perimeter(e)}}return this.computed.convexHull}get convexHullMask(){if(!this.computed.convexHullMask){const t=this.convexHull,e=new Image(this.width+1,this.height+1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});e.paintPolyline(t.polyline,{closed:!0}),this.computed.convexHullMask=e}return this.computed.convexHullMask}get convexHullFilledMask(){if(!this.computed.convexHullFilledMask){const t=this.convexHull,e=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)1!==robustPointInPolygon$1(t.polyline,[r,i])&&e.setBitXY(r,i);this.computed.convexHullFilledMask=e}return this.computed.convexHullFilledMask}get mbr(){if(!this.computed.mbr){let t=minimalBoundingRectangle({originalPoints:this.convexHull.polyline});if(0===t.length)this.computed.mbr={width:0,height:0,surface:0,perimeter:0,rectangle:t};else{let e=t[0],r=t[1],i=t[2],n=Math.sqrt((e[0]-r[0])**2+(e[1]-r[1])**2),s=Math.sqrt((i[0]-r[0])**2+(i[1]-r[1])**2);this.computed.mbr={width:n,height:s,elongation:1-n/s,aspectRatio:n/s,surface:n*s,perimeter:2*(n+s),rectangle:t}}}return this.computed.mbr}get fillRatio(){return this.surface/(this.surface+this.holesInfo.surface)}get feretDiameters(){return this.computed.feretDiameters||(this.computed.feretDiameters=feretDiameters({originalPoints:this.convexHull.polyline})),this.computed.feretDiameters}get eqpc(){return this.computed.eqpc||(this.computed.eqpc=2*Math.sqrt(this.surface/Math.PI)),this.computed.eqpc}get perimeterInfo(){return this.computed.perimeterInfo||(this.computed.perimeterInfo=getPerimeterInfo(this)),this.computed.perimeterInfo}get perimeter(){let t=this.perimeterInfo,e=2-Math.sqrt(2);return t.one+2*t.two+3*t.three+4*t.four-e*(t.two+2*t.three+t.four)}get ped(){return this.computed.ped||(this.computed.ped=this.perimeter/Math.PI),this.computed.ped}get feretMask(){if(!this.computed.feretMask){const t=new Image(this.width+1,this.height+1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});t.paintPolyline(this.feretDiameters.minLine),t.paintPolyline(this.feretDiameters.maxLine),this.computed.feretMask=t}return this.computed.feretMask}get mbrMask(){if(!this.computed.mbrMask){let t=round(this.mbr.rectangle);if(t.length>0){const e=minMax(t),r=new Image(e[1][0]-e[0][0]+1,e[1][1]-e[0][1]+1,{kind:BINARY,position:[this.minX+e[0][0],this.minY+e[0][1]],parent:this.map.parent});t=moveToZeroZero(t),r.paintPolyline(t,{closed:!0}),this.computed.mbrMask=r}else this.computed.mbrMask=new Image(1,1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent})}return this.computed.mbrMask}get mbrFilledMask(){if(!this.computed.mbrFilledMask){const t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent}),e=this.mask.minimalBoundingRectangle();for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)1!==robustPointInPolygon$1(e,[r,i])&&t.setBitXY(r,i);this.computed.mbrFilledMask=t}return this.computed.mbrFilledMask}get points(){if(!this.computed.points){let t=[];for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=(e+this.minY)*this.map.width+r+this.minX;this.map.data[i]===this.id&&t.push([r,e])}this.computed.points=t}return this.computed.points}get maxLengthPoints(){if(!this.computed.maxLengthPoints){let t,e=0;const r=this.points;for(let i=0;i<r.length;i++)for(let n=i+1;n<r.length;n++){let s=Math.pow(r[i][0]-r[n][0],2)+Math.pow(r[i][1]-r[n][1],2);s>=e&&(e=s,t=[r[i],r[n]])}this.computed.maxLengthPoints=t}return this.computed.maxLengthPoints}get maxLength(){if(!this.computed.maxLength){let t=Math.sqrt(Math.pow(this.maxLengthPoints[0][0]-this.maxLengthPoints[1][0],2)+Math.pow(this.maxLengthPoints[0][1]-this.maxLengthPoints[1][1],2));this.computed.maxLength=t}return this.computed.maxLength}get roundness(){return 4*this.surface/(Math.PI*this.feretDiameters.max**2)}get sphericity(){return 2*Math.sqrt(this.surface*Math.PI)/this.perimeter}get solidity(){return this.surface/this.convexHull.surface}get angle(){if(!this.computed.angle){let t=this.maxLengthPoints,e=180*-Math.atan2(t[0][1]-t[1][1],t[0][0]-t[1][0])/Math.PI;this.computed.angle=e}return this.computed.angle}toJSON(){return{id:this.id,minX:this.minX,maxX:this.maxX,minY:this.minY,maxY:this.maxY,meanX:this.meanX,meanY:this.meanY,height:this.height,width:this.width,surface:this.surface,mbrWidth:this.mbr.width,mbrHeight:this.mbr.height,mbrSurface:this.mbr.surface,eqpc:this.eqpc,ped:this.ped,feretDiameterMin:this.feretDiameters.min,feretDiameterMax:this.feretDiameters.max,aspectRatio:this.feretDiameters.aspectRatio,fillRatio:this.fillRatio,sphericity:this.sphericity,roundness:this.roundness,solidity:this.solidity,perimeter:this.perimeter}}}function getBorders(t){let e=t.map,r=e.data,i=new Set,n=new Map,s=new Set,o=[1,0,-1,0],a=[0,1,0,-1];for(let l=t.minX;l<=t.maxX;l++)for(let h=t.minY;h<=t.maxY;h++){if(r[l+h*e.width]===t.id)for(let c=0;c<4;c++){let u=l+o[c],f=h+a[c];if(u>=0&&f>=0&&u<e.width&&f<e.height){let o=u+f*e.width;if(r[o]!==t.id&&!s.has(o)){s.add(o),i.add(r[o]);let t=n.get(r[o]);t?n.set(r[o],++t):n.set(r[o],1)}}}}let l=Array.from(i),h=l.map((function(t){return n.get(t)}));return{ids:l,lengths:h}}function getBoxIDs(t){let e=new Set,r=t.map,i=r.data;for(let n of[0,t.height-1])for(let s=0;s<t.width;s++){let o=(n+t.minY)*r.width+s+t.minX;if(s-t.minX>0&&i[o]===t.id&&i[o-1]!==t.id){let t=i[o-1];e.add(t)}if(r.width-s-t.minX>1&&i[o]===t.id&&i[o+1]!==t.id){let t=i[o+1];e.add(t)}}for(let n of[0,t.width-1])for(let s=0;s<t.height;s++){let o=(s+t.minY)*r.width+n+t.minX;if(s-t.minY>0&&i[o]===t.id&&i[o-r.width]!==t.id){let t=i[o-r.width];e.add(t)}if(r.height-s-t.minY>1&&i[o]===t.id&&i[o+r.width]!==t.id){let t=i[o+r.width];e.add(t)}}return Array.from(e)}function getBox(t){let e=0,r=t.map,i=r.data,n=[0];t.height>1&&(n[1]=t.height-1);for(let s of n)for(let n=1;n<t.width-1;n++){i[(s+t.minY)*r.width+n+t.minX]===t.id&&e++}let s=[0];t.width>1&&(s[1]=t.width-1);for(let n of s)for(let s=0;s<t.height;s++){i[(s+t.minY)*r.width+n+t.minX]===t.id&&e++}return e}function getBorder(t){let e=0,r=t.map,i=r.data;for(let n=1;n<t.width-1;n++)for(let s=1;s<t.height-1;s++){let o=(s+t.minY)*r.width+n+t.minX;i[o]===t.id&&(i[o-1]===t.id&&i[o+1]===t.id&&i[o-r.width]===t.id&&i[o+r.width]===t.id||e++)}return e+t.box}function getPerimeterInfo(t){let e=t.map,r=e.data,i=0,n=0,s=0,o=0;for(let a=0;a<t.width;a++)for(let l=0;l<t.height;l++){let h=(l+t.minY)*e.width+a+t.minX;if(r[h]===t.id){let c=0;switch((0===a||t.externalIDs.includes(r[h-1]))&&c++,(a===t.width-1||t.externalIDs.includes(r[h+1]))&&c++,(0===l||t.externalIDs.includes(r[h-e.width]))&&c++,(l===t.height-1||t.externalIDs.includes(r[h+e.width]))&&c++,c){case 1:i++;break;case 2:n++;break;case 3:s++;break;case 4:o++}}}return{one:i,two:n,three:s,four:o}}function getExternal(t){let e=0,r=t.map,i=r.data;for(let n=1;n<t.width-1;n++)for(let s=1;s<t.height-1;s++){let o=(s+t.minY)*r.width+n+t.minX;i[o]===t.id&&(t.externalIDs.includes(i[o-1])||t.externalIDs.includes(i[o+1])||t.externalIDs.includes(i[o-r.width])||t.externalIDs.includes(i[o+r.width]))&&e++}return e+t.box}function getHolesInfo(t){let e=0,r=t.map.width,i=t.map.data;for(let n=1;n<t.width-1;n++)for(let s=1;s<t.height-1;s++){let o=(s+t.minY)*r+n+t.minX;t.internalIDs.includes(i[o])&&i[o]!==t.id&&e++}return{number:t.internalIDs.length-1,surface:e}}function getInternalIDs(t){let e=[t.id],r=t.map,i=r.data;if(t.height>2)for(let n=0;n<t.width;n++){let s=t.minY*r.width+n+t.minX;if(e.includes(i[s])){let n=i[s+r.width];e.includes(n)||t.boxIDs.includes(n)||e.push(n)}}let n=new Array(4);for(let s=1;s<t.width-1;s++)for(let o=1;o<t.height-1;o++){let a=(o+t.minY)*r.width+s+t.minX;if(e.includes(i[a])){n[0]=i[a-1],n[1]=i[a+1],n[2]=i[a-r.width],n[3]=i[a+r.width];for(let r=0;r<4;r++){let i=n[r];e.includes(i)||t.boxIDs.includes(i)||e.push(i)}}}return e}class RoiLayer{constructor(t,e){this.roiMap=t,this.options=e,this.roi=this.createRoi()}createRoi(){let t=this.roiMap.data,e={};this.roiMap.positive=0,this.roiMap.negative=0;for(let r=0;r<t.length;r++)t[r]&&!e[t[r]]&&(e[t[r]]=!0,t[r]>0?this.roiMap.positive++:this.roiMap.negative++);let r={};for(let t in e)r[t]=new Roi(this.roiMap,1*t);let i=this.roiMap.width,n=this.roiMap.height;for(let e=0;e<n;e++)for(let n=0;n<i;n++){let s=e*i+n;if(0!==t[s]){const i=r[t[s]];n<i.minX&&(i.minX=n),n>i.maxX&&(i.maxX=n),e<i.minY&&(i.minY=e),e>i.maxY&&(i.maxY=e),i.meanX+=n,i.meanY+=e,i.surface++}}let s=[];for(let t in e)r[t].meanX/=r[t].surface,r[t].meanY/=r[t].surface,s.push(r[t]);return s}}function commonBorderLength(t){let e=t.data,r=[1,0,-1,0],i=[0,1,0,-1],n=t.minMax,s=-n.min,o=n.max+s,a=[];for(let t=0;t<=o;t++)a.push(Object.create(null));for(let n=0;n<t.width;n++)for(let o=0;o<t.height;o++){let l=e[n+o*t.width];if(0!==l){let h=Object.create(null),c=!1;for(let u=0;u<4;u++){let f=n+r[u],d=o+i[u];if(f>=0&&d>=0&&f<t.width&&d<t.height){let r=e[f+d*t.width];l!==r&&(c=!0,0!==r&&void 0===h[r]&&(h[r]=!0,a[r+s][l]?a[r+s][l]++:a[r+s][l]=1))}else c=!0}c&&(a[l+s][l]?a[l+s][l]++:a[l+s][l]=1)}}let l={};for(let t=0;t<a.length;t++)Object.keys(a[t]).length>0&&(l[t-s]=a[t]);return l}function mergeRoi(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{algorithm:e="commonBorderLength",minCommonBorderLength:r=5,maxCommonBorderLength:i=100,minCommonBorderRatio:n=.3,maxCommonBorderRatio:s=1}=t;let o=function(t,e,n){return t[n]>=r&&t[n]<=i};"function"==typeof e&&(o=e),"commonborderratio"===e.toLowerCase()&&(o=function(t,e,r){let i=Math.min(t[r]/t[e],1);return i>=n&&i<=s});const a=this,l=a.commonBorderLength;let h={},c={};for(let t of Object.keys(l)){let e=l[t],r=Object.keys(e);for(let i of r)if(i!==t&&o(e,t,i)){let e=i;c[i]&&(e=c[i]);let r=t;if(c[t]&&(r=c[t]),Number(e)!==r){let t=Math.min(e,r),i=Math.max(e,r);if(h[t]||(h[t]={}),h[t][i]=!0,c[i]=t,h[i]){for(let e of Object.keys(h[i]))h[t][e]=!0,c[e]=t;delete h[i]}}}}let u=a.minMax,f=-u.min,d=u.max+f,m=new Array(d+1).fill(0);for(let t of Object.keys(c))m[Number(t)+f]=c[t];let g=a.data;for(let t=0;t<g.length;t++){let e=g[t];if(0!==e){let r=m[e+f];0!==r&&(g[t]=r)}}return a.computed={},a}class RoiMap{constructor(t,e){this.parent=t,this.width=t.width,this.height=t.height,this.data=e,this.negative=0,this.positive=0}get total(){return this.negative+this.positive}get minMax(){let t=Number.MAX_SAFE_INTEGER,e=Number.MIN_SAFE_INTEGER;for(let r=0;r<this.data.length;r++)this.data[r]<t&&(t=this.data[r]),this.data[r]>e&&(e=this.data[r]);return{min:t,max:e}}get commonBorderLength(){return commonBorderLength(this)}mergeRoi(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return mergeRoi.call(this,t)}mergeRois(t){const e=t[0],r=t.slice(1);for(let t=0;t<this.data.length;t++)r.includes(this.data[t])&&(this.data[t]=e)}rowsInfo(){let t=new Array(this.height),e=0;for(let r=0;r<this.data.length;r+=this.width){let i={row:e,positivePixel:0,negativePixel:0,zeroPixel:0,positiveRoi:0,negativeRoi:0,medianChange:0};t[e++]=i;let n={},s={},o=[],a=this.data[r],l=0;for(let t=r;t<r+this.width;t++){let e=this.data[t];a!==e&&(a=e,o.push(l),l=0),l++,e>0?(i.positivePixel++,n[e]||(n[e]=!0)):e<0?(i.negativePixel++,s[e]||(s[e]=!0)):i.zeroPixel++}o.push(l),i.medianChange=o.sort(((t,e)=>t-e))[Math.floor(o.length/2)],i.positiveRoiIDs=Object.keys(n),i.negativeRoiIDs=Object.keys(s),i.positiveRoi=i.positiveRoiIDs.length,i.negativeRoi=i.negativeRoiIDs.length}return t}colsInfo(){let t=new Array(this.width),e=0;for(let r=0;r<this.width;r++){let i={col:e,positivePixel:0,negativePixel:0,zeroPixel:0,positiveRoi:0,negativeRoi:0,medianChange:0};t[e++]=i;let n={},s={},o=[],a=this.data[r],l=0;for(let t=r;t<r+this.data.length;t+=this.width){let e=this.data[t];a!==e&&(a=e,o.push(l),l=0),l++,e>0?(i.positivePixel++,n[e]||(n[e]=!0)):e<0?(i.negativePixel++,s[e]||(s[e]=!0)):i.zeroPixel++}o.push(l),i.medianChange=o.sort(((t,e)=>t-e))[Math.floor(o.length/2)],i.positiveRoiIDs=Object.keys(n),i.negativeRoiIDs=Object.keys(s),i.positiveRoi=i.positiveRoiIDs.length,i.negativeRoi=i.negativeRoiIDs.length}return t}}function fromMask(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{allowCorners:r=!1}=e,i=65535;let n=new Int16Array(t.size),s=0,o=0,a=new Uint16Array(i+1),l=new Uint16Array(i+1);for(let e=0;e<t.width;e++)for(let r=0;r<t.height;r++)0===n[r*t.width+e]&&h(e,r);function h(e,h){let c=0,u=0,f=t.getBitXY(e,h),d=f?++s:--o;if(s>32767||o<-32768)throw new Error("Too many regions of interest");for(a[0]=e,l[0]=h;c<=u;){let e=a[c&i],s=l[c&i];if(n[s*t.width+e]=d,e>0&&0===n[s*t.width+e-1]&&t.getBitXY(e-1,s)===f&&(u++,a[u&i]=e-1,l[u&i]=s,n[s*t.width+e-1]=-32768),s>0&&0===n[(s-1)*t.width+e]&&t.getBitXY(e,s-1)===f&&(u++,a[u&i]=e,l[u&i]=s-1,n[(s-1)*t.width+e]=-32768),e<t.width-1&&0===n[s*t.width+e+1]&&t.getBitXY(e+1,s)===f&&(u++,a[u&i]=e+1,l[u&i]=s,n[s*t.width+e+1]=-32768),s<t.height-1&&0===n[(s+1)*t.width+e]&&t.getBitXY(e,s+1)===f&&(u++,a[u&i]=e,l[u&i]=s+1,n[(s+1)*t.width+e]=-32768),r&&(e>0&&s>0&&0===n[(s-1)*t.width+e-1]&&t.getBitXY(e-1,s-1)===f&&(u++,a[u&i]=e-1,l[u&i]=s-1,n[(s-1)*t.width+e-1]=-32768),e<t.width-1&&s>0&&0===n[(s-1)*t.width+e+1]&&t.getBitXY(e+1,s-1)===f&&(u++,a[u&i]=e+1,l[u&i]=s-1,n[(s-1)*t.width+e+1]=-32768),e>0&&s<t.height-1&&0===n[(s+1)*t.width+e-1]&&t.getBitXY(e-1,s+1)===f&&(u++,a[u&i]=e-1,l[u&i]=s+1,n[(s+1)*t.width+e-1]=-32768),e<t.width-1&&s<t.height-1&&0===n[(s+1)*t.width+e+1]&&t.getBitXY(e+1,s+1)===f&&(u++,a[u&i]=e+1,l[u&i]=s+1,n[(s+1)*t.width+e+1]=-32768)),c++,u-c>i)throw new Error("analyseMask can not finish, the array to manage internal data is not big enough.You could improve mask by changing MAX_ARRAY")}}return new RoiMap(t,n)}class DisjointSet{constructor(){this.nodes=new Map}add(t){var e=this.nodes.get(t);return e||(e=new DisjointSetNode(t),this.nodes.set(t,e)),e}union(t,e){const r=this.find(t),i=this.find(e);r!==i&&(r.rank<i.rank?r.parent=i:r.rank>i.rank?i.parent=r:(i.parent=r,r.rank++))}find(t){for(var e=t;null!==e.parent;)e=e.parent;for(var r=t;null!==r.parent;){var i=r;r=r.parent,i.parent=e}return e}connected(t,e){return this.find(t)===this.find(e)}}var DisjointSet_1=DisjointSet;function DisjointSetNode(t){this.value=t,this.parent=null,this.rank=0}var DisjointSet$1=DisjointSet_1;const direction4X=[-1,0],direction4Y=[0,-1],neighbours4=[null,null],direction8X=[-1,-1,0,1],direction8Y=[0,-1,-1,-1],neighbours8=[null,null,null,null];function fromMaskConnectedComponentLabelingAlgorithm(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{allowCorners:r=!1}=e;let i,n,s,o=4;if(r&&(o=8),8===o)i=direction8X,n=direction8Y,s=neighbours8;else{if(4!==o)throw new RangeError(`unsupported neighbours count: ${o}`);i=direction4X,n=direction4Y,s=neighbours4}const a=t.size,l=t.width,h=t.height,c=new Array(a),u=new Uint32Array(a),f=new DisjointSet$1;let d=1;for(let e=0;e<h;e++)for(let r=0;r<l;r++){const o=r+e*l;if(t.getBit(o)){let t=null;for(let o=0;o<s.length;o++){const a=r+i[o],u=e+n[o];if(a>=0&&u>=0&&a<l&&u<h){let e=c[a+u*l];e?(s[o]=e,(!t||s[o].value<t.value)&&(t=s[o])):s[o]=null}}if(t){c[o]=t;for(let e=0;e<s.length;e++)s[e]&&s[e]!==t&&f.union(t,s[e])}else c[o]=f.add(d++)}}for(let e=0;e<h;e++)for(let r=0;r<l;r++){const i=r+e*l;t.getBit(i)&&(u[i]=f.find(c[i]).value)}return new RoiMap(t,u)}function fromMaxima(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{allowCorner:e=!0,onlyTop:r=!1,invert:i=!1}=t,n=this;n.checkProcessable("fromMaxima",{components:[1]});const s=1,o=2;let a=0,l=0,h=new Int16Array(n.size),c=new Int8Array(n.size),u=new Float32Array(n.size),f=1048575,d=new Uint16Array(f+1),m=new Uint16Array(f+1),g=0,p=0,w=new Uint16Array(f+1),b=new Uint16Array(f+1),_=0,y=0;for(M(n);g<p;){v(d[g&f],m[g&f],o),g++}return new RoiMap(n,h);function M(t){let{maxima:r=!0}=t;for(let t=1;t<n.height-1;t++)for(let i=1;i<n.width-1;i++){let s=i+t*n.width;if(0===c[s]){let o=r?n.data[s]:-n.data[i+t*n.width];if(n.data[t*n.width+i-1]>o)continue;if(n.data[t*n.width+i+1]>o)continue;if(n.data[(t-1)*n.width+i]>o)continue;if(n.data[(t+1)*n.width+i]>o)continue;if(e){if(n.data[(t-1)*n.width+i-1]>o)continue;if(n.data[(t-1)*n.width+i+1]>o)continue;if(n.data[(t+1)*n.width+i-1]>o)continue;if(n.data[(t+1)*n.width+i+1]>o)continue}h[s]=r?++a:--l,x(i,t)||(r?--a:++l)}}}function x(t,e){let r=p;_=0,y=1,w[0]=t,b[0]=e;let i=!0;for(;_<y;){i&=v(w[_&f],b[_&f],s),_++}if(!i){for(let t=0;t<y;t++){let e=w[t&f],r=b[t&f]*n.width+e;h[r]=0}p=r}return i}function v(t,e,i){let a=h[e*n.width+t],l=n.data[e*n.width+t];for(let g=e-1;g<=e+1;g++)for(let e=t-1;e<=t+1;e++){let t=g*n.width+e;if(0===c[t])switch(c[t]=1,u[t]=n.data[t]-l,i){case s:if(0===u[t]){if(0===e||0===g||e===n.width-1||g===n.height-1)return!1;h[t]=a,w[y&f]=e,b[y&f]=g,y++}else{if(u[t]>0)return!1;r||(h[t]=a,d[p&f]=e,m[p&f]=g,p++)}break;case o:u[t]<=0&&(h[t]=a,d[p&f]=e,m[p&f]=g,p++);break;default:throw new Error("unreachable")}}return!0}}function fromPoints(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=new Shape(e),i=new Int16Array(this.size),n=0,s=r.getPoints();for(let e=0;e<t.length;e++){n++;let r=t[e][0],o=t[e][1];for(let t=0;t<s.length;t++){let e=s[t][0],a=s[t][1];r+e>=0&&o+a>=0&&r+e<this.width&&o+a<this.height&&(i[r+e+(o+a)*this.width]=n)}}return new RoiMap(this,i)}var priorityQueue={exports:{}};!function(t,e){t.exports=function t(e,r,i){function n(o,a){if(!r[o]){if(!e[o]){var l="function"==typeof commonjsRequire&&commonjsRequire;if(!a&&l)return l(o,!0);if(s)return s(o,!0);var h=new Error("Cannot find module '"+o+"'");throw h.code="MODULE_NOT_FOUND",h}var c=r[o]={exports:{}};e[o][0].call(c.exports,(function(t){var r=e[o][1][t];return n(r||t)}),c,c.exports,t,e,r,i)}return r[o].exports}for(var s="function"==typeof commonjsRequire&&commonjsRequire,o=0;o<i.length;o++)n(i[o]);return n}({1:[function(t,e,r){var i,n,s,o,a,l=function(t,e){for(var r in e)h.call(e,r)&&(t[r]=e[r]);function i(){this.constructor=t}return i.prototype=e.prototype,t.prototype=new i,t.__super__=e.prototype,t},h={}.hasOwnProperty;i=t("./PriorityQueue/AbstractPriorityQueue"),n=t("./PriorityQueue/ArrayStrategy"),o=t("./PriorityQueue/BinaryHeapStrategy"),s=t("./PriorityQueue/BHeapStrategy"),(a=function(t){function e(t){t||(t={}),t.strategy||(t.strategy=o),t.comparator||(t.comparator=function(t,e){return(t||0)-(e||0)}),e.__super__.constructor.call(this,t)}return l(e,t),e}(i)).ArrayStrategy=n,a.BinaryHeapStrategy=o,a.BHeapStrategy=s,e.exports=a},{"./PriorityQueue/AbstractPriorityQueue":2,"./PriorityQueue/ArrayStrategy":3,"./PriorityQueue/BHeapStrategy":4,"./PriorityQueue/BinaryHeapStrategy":5}],2:[function(t,e,r){e.exports=function(){function t(t){var e;if(null==(null!=t?t.strategy:void 0))throw"Must pass options.strategy, a strategy";if(null==(null!=t?t.comparator:void 0))throw"Must pass options.comparator, a comparator";this.priv=new t.strategy(t),this.length=(null!=t&&null!=(e=t.initialValues)?e.length:void 0)||0}return t.prototype.queue=function(t){this.length++,this.priv.queue(t)},t.prototype.dequeue=function(t){if(!this.length)throw"Empty queue";return this.length--,this.priv.dequeue()},t.prototype.peek=function(t){if(!this.length)throw"Empty queue";return this.priv.peek()},t.prototype.clear=function(){return this.length=0,this.priv.clear()},t}()},{}],3:[function(t,e,r){var i;i=function(t,e,r){var i,n,s;for(n=0,i=t.length;n<i;)r(t[s=n+i>>>1],e)>=0?n=s+1:i=s;return n},e.exports=function(){function t(t){var e;this.options=t,this.comparator=this.options.comparator,this.data=(null!=(e=this.options.initialValues)?e.slice(0):void 0)||[],this.data.sort(this.comparator).reverse()}return t.prototype.queue=function(t){var e;e=i(this.data,t,this.comparator),this.data.splice(e,0,t)},t.prototype.dequeue=function(){return this.data.pop()},t.prototype.peek=function(){return this.data[this.data.length-1]},t.prototype.clear=function(){this.data.length=0},t}()},{}],4:[function(t,e,r){e.exports=function(){function t(t){var e,r,i,n,s,o,a,l;for(this.comparator=(null!=t?t.comparator:void 0)||function(t,e){return t-e},this.pageSize=(null!=t?t.pageSize:void 0)||512,this.length=0,a=0;1<<a<this.pageSize;)a+=1;if(1<<a!==this.pageSize)throw"pageSize must be a power of two";for(this._shift=a,this._emptyMemoryPageTemplate=e=[],r=0,s=this.pageSize;0<=s?r<s:r>s;0<=s?++r:--r)e.push(null);if(this._memory=[],this._mask=this.pageSize-1,t.initialValues)for(i=0,n=(o=t.initialValues).length;i<n;i++)l=o[i],this.queue(l)}return t.prototype.queue=function(t){this.length+=1,this._write(this.length,t),this._bubbleUp(this.length,t)},t.prototype.dequeue=function(){var t,e;return t=this._read(1),e=this._read(this.length),this.length-=1,this.length>0&&(this._write(1,e),this._bubbleDown(1,e)),t},t.prototype.peek=function(){return this._read(1)},t.prototype.clear=function(){this.length=0,this._memory.length=0},t.prototype._write=function(t,e){var r;for(r=t>>this._shift;r>=this._memory.length;)this._memory.push(this._emptyMemoryPageTemplate.slice(0));return this._memory[r][t&this._mask]=e},t.prototype._read=function(t){return this._memory[t>>this._shift][t&this._mask]},t.prototype._bubbleUp=function(t,e){var r,i,n,s;for(r=this.comparator;t>1&&(i=t&this._mask,t<this.pageSize||i>3?n=t&~this._mask|i>>1:i<2?(n=t-this.pageSize>>this._shift,n+=n&~(this._mask>>1),n|=this.pageSize>>1):n=t-2,!(r(s=this._read(n),e)<0));)this._write(n,e),this._write(t,s),t=n},t.prototype._bubbleDown=function(t,e){var r,i,n,s,o;for(o=this.comparator;t<this.length;)if(t>this._mask&&!(t&this._mask-1)?r=i=t+2:t&this.pageSize>>1?(r=(t&~this._mask)>>1,i=1+(r=1+(r|=t&this._mask>>1)<<this._shift)):i=(r=t+(t&this._mask))+1,r!==i&&i<=this.length)if(n=this._read(r),s=this._read(i),o(n,e)<0&&o(n,s)<=0)this._write(r,e),this._write(t,n),t=r;else{if(!(o(s,e)<0))break;this._write(i,e),this._write(t,s),t=i}else{if(!(r<=this.length))break;if(!(o(n=this._read(r),e)<0))break;this._write(r,e),this._write(t,n),t=r}},t}()},{}],5:[function(t,e,r){e.exports=function(){function t(t){var e;this.comparator=(null!=t?t.comparator:void 0)||function(t,e){return t-e},this.length=0,this.data=(null!=(e=t.initialValues)?e.slice(0):void 0)||[],this._heapify()}return t.prototype._heapify=function(){var t,e,r;if(this.data.length>0)for(t=e=1,r=this.data.length;1<=r?e<r:e>r;t=1<=r?++e:--e)this._bubbleUp(t)},t.prototype.queue=function(t){this.data.push(t),this._bubbleUp(this.data.length-1)},t.prototype.dequeue=function(){var t,e;return e=this.data[0],t=this.data.pop(),this.data.length>0&&(this.data[0]=t,this._bubbleDown(0)),e},t.prototype.peek=function(){return this.data[0]},t.prototype.clear=function(){this.length=0,this.data.length=0},t.prototype._bubbleUp=function(t){for(var e,r;t>0&&(e=t-1>>>1,this.comparator(this.data[t],this.data[e])<0);)r=this.data[e],this.data[e]=this.data[t],this.data[t]=r,t=e},t.prototype._bubbleDown=function(t){var e,r,i,n,s;for(e=this.data.length-1;n=1+(r=1+(t<<1)),i=t,r<=e&&this.comparator(this.data[r],this.data[i])<0&&(i=r),n<=e&&this.comparator(this.data[n],this.data[i])<0&&(i=n),i!==t;)s=this.data[i],this.data[i]=this.data[t],this.data[t]=s,t=i},t}()},{}]},{},[1])(1)}(priorityQueue);var PriorityQueue=priorityQueue.exports;const dxs=[1,0,-1,0,1,1,-1,-1],dys=[0,1,0,-1,1,-1,1,-1];function fromWaterShed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{points:e,mask:r,image:i,fillMaxValue:n=this.maxValue,invert:s=!1}=t,o=i||this;o.checkProcessable("fromWaterShed",{bitDepth:[8,16],components:1}),s=!s,e||(e=o.getLocalMaxima({invert:s,mask:r}));let a=s?0:1,l=new Int16Array(o.size),h=o.width,c=o.height,u=new PriorityQueue({comparator:(t,e)=>t[2]-e[2],strategy:PriorityQueue.BinaryHeapStrategy});for(let t=0;t<e.length;t++){let r=e[t][0]+e[t][1]*h;l[r]=t+1;let i=o.data[r];(s&&i<=n||!s&&i>=n)&&u.queue([e[t][0],e[t][1],i])}for(;u.length>0;){let t=u.dequeue(),e=t[0]+t[1]*h;for(let i=0;i<4;i++){let f=t[0]+dxs[i],d=t[1]+dys[i];if(f>=0&&d>=0&&f<h&&d<c){let c=f+d*h;if(!r||r.getBit(c)===a){let r=o.data[c];(s&&r<=n||!s&&r>=n)&&0===l[c]&&(l[c]=l[e],u.queue([t[0]+dxs[i],t[1]+dys[i],r]))}}}}return new RoiMap(o,l)}class RoiManager{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._image=t,this._options=e,this._options.label||(this._options.label="default"),this._layers={},this._painted=null}fromMaxima(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},this._options,t),r=fromMaxima.call(this._image,t);this._layers[e.label]=new RoiLayer(r,e)}fromPoints(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},this._options,e),i=fromPoints.call(this._image,t,e);return this._layers[r.label]=new RoiLayer(i,r),this}putMap(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=new RoiMap(this._image,t),i=Object.assign({},this._options,e);return this._layers[i.label]=new RoiLayer(r,i),this}fromWaterShed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},this._options,t),r=fromWaterShed.call(this._image,t);this._layers[e.label]=new RoiLayer(r,e)}fromMask(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},this._options,e),i=fromMask.call(this._image,t,e);return this._layers[r.label]=new RoiLayer(i,r),this}fromMaskConnectedComponentLabelingAlgorithm(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},this._options,e),i=fromMaskConnectedComponentLabelingAlgorithm.call(this._image,t,e);return this._layers[r.label]=new RoiLayer(i,r),this}getMap(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},this._options,t);return this._assertLayerWithLabel(e.label),this._layers[e.label].roiMap}rowsInfo(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.getMap(t).rowsInfo()}colsInfo(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.getMap(t).rowsInfo()}getRoiIds(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.getRois(t);if(e){let t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e[r].id;return t}throw new Error("ROIs not found")}getRois(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{label:e=this._options.label,positive:r=!0,negative:i=!0,minSurface:n=0,maxSurface:s=Number.POSITIVE_INFINITY,minWidth:o=0,maxWidth:a=Number.POSITIVE_INFINITY,minHeight:l=0,maxHeight:h=Number.POSITIVE_INFINITY,minRatio:c=0,maxRatio:u=Number.POSITIVE_INFINITY}=t;if(!this._layers[e])throw new Error(`this Roi layer (${e}) does not exist`);const f=this._layers[e].roi,d=[];for(const t of f)(t.id<0&&i||t.id>0&&r)&&t.surface>=n&&t.surface<=s&&t.width>=o&&t.width<=a&&t.height>=l&&t.height<=h&&t.ratio>=c&&t.ratio<=u&&d.push(t);return d}getRoi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{label:r=this._options.label}=e;if(!this._layers[r])throw new Error(`this Roi layer (${r}) does not exist`);const i=this._layers[r].roi.find((e=>e.id===t));if(!i)throw new Error(`found no Roi with id ${t}`);return i}getMasks(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.getRois(t),r=new Array(e.length);for(let i=0;i<e.length;i++)r[i]=e[i].getMask(t);return r}getAnalysisMasks(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{analysisProperty:e}=t;let r=`${e}Mask`,i=this.getRois(t);return 0!==i.length&&i[0][r]?i.map((t=>t[r])):[]}getData(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},this._options,t);return this._assertLayerWithLabel(e.label),this._layers[e.label].roiMap.data}paint(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{labelProperty:e,analysisProperty:r}=t;this._painted||(this._painted=this._image.rgba8());let i=this.getMasks(t);if(e){const r=this.getRois(t);t.labels=r.map((t=>deepValue(t,e)));const i=Math.max(...t.labels);let n=!1,s=!1;if(e.includes("surface")?n=!0:/(?:perimeter|min|max|external|width|height|length)/.test(e)&&(s=!0),isFinite(i)){let e="";if("pixel"!==t.unit&&t.pixelSize&&(s||n)){e=n?`${t.unit}^2`:t.unit;let r=n?"m^2":"m",i=n?t.pixelSize**2:t.pixelSize;const s=Qty.swiftConverter(r,e);t.labels=t.labels.map((t=>s(i*t)))}t.labels=i>50?t.labels.map((t=>Math.round(t)+e)):i>10?t.labels.map((t=>t.toFixed(1)+e)):t.labels.map((t=>t.toFixed(2)+e))}t.labelsPosition=r.map((t=>[t.meanX,t.meanY]))}if(this._painted.paintMasks(i,t),r){let e=this.getAnalysisMasks(t);this._painted.paintMasks(e,{color:t.analysisColor,alpha:t.analysisAlpha})}return this._painted}getMask(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=new Image(this._image.width,this._image.height,{kind:"BINARY"}),r=this.getMasks(t);for(let t=0;t<r.length;t++){let i=r[t];for(let t=0;t<i.width;t++)for(let r=0;r<i.height;r++)i.getBitXY(t,r)&&e.setBitXY(t+i.position[0],r+i.position[1])}return e}resetPainted(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{image:e}=t;this._painted=e?this.image.rgba8():this._image.rgba8()}mergeRoi(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=this.getMap(t);return e.mergeRoi(t),this.putMap(e.data,t),this}mergeRois(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Array.isArray(t)||t.some((t=>!Number.isInteger(t))))throw new Error("Roi ids must be an array of integers");if(t.length<2)throw new Error("Roi ids must have at least two elements");if(new Set(t).size!==t.length)throw new Error("Roi ids must be all different");t.forEach((t=>this.getRoi(t)));const r=this.getMap(e);return r.mergeRois(t),this.putMap(r.data,e),this}findCorrespondingRoi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.getRois(e),i=[];for(let e=0;e<r.length;e++){let n=r[e],s=correspondingRoisInformation(n.minX,n.minY,n.points,t,Math.sign(n.id));i.push(s)}return i}_assertLayerWithLabel(t){if(!this._layers[t])throw new Error(`no layer with label ${t}`)}}function correspondingRoisInformation(t,e,r,i,n){let s={id:[],surface:[],roiSurfaceCovered:[],same:0,opposite:0,total:0};for(let n=0;n<r.length;n++){let o=r[n],a=o[0]+t+(o[1]+e)*i.width,l=i.data[a];(l>0||l<0)&&(s.id.includes(l)?s.surface[s.id.indexOf(l)]+=1:(s.id.push(l),s.surface.push(1)))}for(let t=0;t<s.id.length;t++){Math.sign(s.id[t])===n?s.same+=s.surface[t]:s.opposite+=s.surface[t],s.roiSurfaceCovered[t]=s.surface[t]/r.length}return s.total=s.opposite+s.same,s}const objectToString=Object.prototype.toString;class Image{constructor(t,e,r,i){if(1===arguments.length?(i=t,({width:t,height:e,data:r}=i)):r&&!r.length&&(i=r,({data:r}=i)),void 0===t&&(t=1),void 0===e&&(e=1),void 0===i&&(i={}),"object"!=typeof i||null===i)throw new TypeError("options must be an object");if(!Number.isInteger(t)||t<=0)throw new RangeError("width must be a positive integer");if(!Number.isInteger(e)||e<=0)throw new RangeError("height must be a positive integer");const{kind:n=RGBA}=i;if("string"!=typeof n)throw new TypeError("kind must be a string");const s=getKind(n),o=Object.assign({},i);for(const t in s)void 0===o[t]&&(o[t]=s[t]);verifyKindDefinition(o);const{components:a,bitDepth:l,colorModel:h}=o,c=o.alpha+0,u=t*e,f=a+c,d=32===l?Number.MAX_VALUE:2**l-1;if(void 0===r)r=createPixelArray(u,a,c,f,l,d);else{const t=getTheoreticalPixelArraySize(u,f,l);if(r.length!==t)throw new RangeError(`incorrect data size: ${r.length}. Should be ${t}`)}this.width=t,this.height=e,this.data=r,this.size=u,this.components=a,this.alpha=c,this.bitDepth=l,this.maxValue=d,this.colorModel=h,this.channels=f,this.meta=i.meta||{},Object.defineProperty(this,"parent",{enumerable:!1,writable:!0,configurable:!0,value:i.parent||null}),this.position=i.position||[0,0],this.computed=null,this.sizes=[this.width,this.height],this.multiplierX=this.channels,this.multiplierY=this.channels*this.width,this.isClamped=this.bitDepth<32,this.borderSizes=[0,0]}get[Symbol.toStringTag](){return"IJSImage"}static isImage(t){return"[object IJSImage]"===objectToString.call(t)}static fromCanvas(t){const e=t.getContext("2d").getImageData(0,0,t.width,t.height);return new Image(e.width,e.height,e.data)}static createFrom(t,e){const r=getImageParameters(t);return Object.assign(r,{parent:t,position:[0,0]},e),new Image(r)}getRoiManager(t){return new RoiManager(this,t)}clone(){const t=this.data.slice();return new Image(this.width,this.height,t,this)}apply(t){for(let e=0;e<this.height;e++)for(let r=0;r<this.width;r++){let i=(e*this.width+r)*this.channels;t.call(this,i)}}}function laplacianOfGaussian(t,e,r){let i,n,s,o,a=new Array(e);r||(r=100),r*=-1;let l=(e-1)/2,h=2*t*t;for(i=0;i<e;i++)for(a[i]=new Array(e),o=(i-l)*(i-l),n=0;n<e;n++)s=(n-l)*(n-l),a[i][n]=Math.round(r*(1-(s+o)/h)*Math.exp(-(s+o)/h));return a}setValueMethods(Image),setBitMethods(Image),setExportMethods(Image),Image.prototype.checkProcessable=checkProcessable,Image.prototype.getRGBAData=getRGBAData,Image.load=load,Image.extendMethod=extendMethod,Image.extendProperty=extendProperty,extend$1(Image);var kernel=Object.freeze({__proto__:null,laplacianOfGaussian:laplacianOfGaussian,DISCRETE_LAPLACE_4:DISCRETE_LAPLACE_4,DISCRETE_LAPLACE_8:DISCRETE_LAPLACE_8,SOBEL_X:SOBEL_X,SOBEL_Y:SOBEL_Y,SCHARR_X:SCHARR_X,SCHARR_Y:SCHARR_Y,SECOND_DERIVATIVE:SECOND_DERIVATIVE,SECOND_DERIVATIVE_INV:SECOND_DERIVATIVE_INV}),workerTemplate$1={},worker$2=function(){function t(){this._listeners={}}self.window=self,t.prototype.on=function(t,e){if(this._listeners[t])throw new RangeError("there is already a listener for "+t);if("function"!=typeof e)throw new TypeError("callback argument must be a function");this._listeners[t]=e},t.prototype._send=function(t,e,r){void 0===r?r=[]:Array.isArray(r)||(r=[r]),self.postMessage({id:t,data:e},r)},t.prototype._trigger=function(t,e){if(!this._listeners[t])throw new Error("event "+t+" is not defined");this._listeners[t].apply(null,e)};var e=new t;self.onmessage=function(t){switch(t.data.action){case"exec":t.data.args.unshift((function(r,i){e._send(t.data.id,r,i)})),e._trigger(t.data.event,t.data.args);break;case"ping":e._send(t.data.id,"pong");break;default:throw new Error("unexpected action: "+t.data.action)}}},workerStr=worker$2.toString().split('"CODE";');workerTemplate$1.newWorkerURL=function(t,e){var r=new Blob(["(",workerStr[0],"importScripts.apply(self, "+JSON.stringify(e)+");\n","(",t,")();",workerStr[1],")();"],{type:"application/javascript"});return URL.createObjectURL(r)};var workerTemplate=workerTemplate$1,CORES=navigator.hardwareConcurrency||1;function WorkerManager(t,e){if("string"!=typeof t&&"function"!=typeof t)throw new TypeError("func argument must be a function");if(void 0===e&&(e={}),"object"!=typeof e||null===e)throw new TypeError("options argument must be an object");this._workerCode=t.toString(),void 0===e.maxWorkers||"auto"===e.maxWorkers?this._numWorkers=Math.min(CORES-1,1):e.maxWorkers>0?this._numWorkers=Math.min(e.maxWorkers,CORES):this._numWorkers=CORES,this._workers=new Map,this._timeout=e.timeout||0,this._terminateOnError=!!e.terminateOnError;var r=e.deps;"string"==typeof r&&(r=[r]),Array.isArray(r)||(r=void 0),this._id=0,this._terminated=!1,this._working=0,this._waiting=[],this._init(r)}WorkerManager.prototype._init=function(t){for(var e=workerTemplate.newWorkerURL(this._workerCode,t),r=0;r<this._numWorkers;r++){var i=new Worker(e);i.onmessage=this._onmessage.bind(this,i),i.onerror=this._onerror.bind(this,i),i.running=!1,i.id=r,this._workers.set(i,null)}URL.revokeObjectURL(e)},WorkerManager.prototype._onerror=function(t,e){if(!this._terminated){this._working--,t.running=!1;var r=this._workers.get(t);r&&r[1](e.message),this._workers.set(t,null),this._terminateOnError?this.terminate():this._exec()}},WorkerManager.prototype._onmessage=function(t,e){if(!this._terminated){this._working--,t.running=!1;var r=this._workers.get(t);r&&r[0](e.data.data),this._workers.set(t,null),this._exec()}},WorkerManager.prototype._exec=function(){for(var t of this._workers.keys()){if(this._working===this._numWorkers||0===this._waiting.length)return;if(!t.running)for(var e=0;e<this._waiting.length;e++){var r=this._waiting[e];if("number"!=typeof r[4]||r[4]===t.id){this._waiting.splice(e,1),t.postMessage({action:"exec",event:r[0],args:r[1]},r[2]),t.running=!0,t.time=Date.now(),this._workers.set(t,r[3]),this._working++;break}}}},WorkerManager.prototype.terminate=function(){if(!this._terminated){for(var t of this._workers)t[0].terminate(),t[1]&&t[1][1](new Error("Terminated"));this._workers.clear(),this._waiting=[],this._working=0,this._terminated=!0}},WorkerManager.prototype.postAll=function(t,e){if(this._terminated)throw new Error("Cannot post (terminated)");var r=[];for(var i of this._workers.keys())r.push(this.post(t,e,[],i.id));return Promise.all(r)},WorkerManager.prototype.post=function(t,e,r,i){void 0===e&&(e=[]),void 0===r&&(r=[]),Array.isArray(e)||(e=[e]),Array.isArray(r)||(r=[r]);var n=this;return new Promise((function(s,o){if(n._terminated)throw new Error("Cannot post (terminated)");n._waiting.push([t,e,r,[s,o],i]),n._exec()}))};var src=WorkerManager,WorkerManager$1=src;const defaultOptions={regression:{kernelType:"polynomial",kernelOptions:{degree:2,constant:1}},threshold:.02,roi:{minSurface:100,positive:!1},sampling:20,include:[]};function run(t,e,r){e=Object.assign({},defaultOptions,e);const i=this.manager;return Array.isArray(t)?Promise.all(t.map((function(t){const n=runOnce(i,t,e);return"function"==typeof r&&n.then(r),n}))):runOnce(i,t,e)}function runOnce(t,e,r){return t.post("data",[e,r]).then((function(t){for(let e in t)t[e]=new Image(t[e]);return t}))}function work(){worker.on("data",(function(t,e,r){e=new IJS(e);const i={},n=[],s=e.grey(),o=s.sobelFilter();d("sobel",o);const a=o.level().mask({threshold:r.threshold});d("mask",a);const l=o.getRoiManager();l.fromMask(a);const h=l.getMask(r.roi);d("realMask",h);const c=s.getPixelsGrid({sampling:r.sampling,mask:h}),u=e.getBackground(c.xyS,c.zS,r.regression);d("background",u);const f=e.subtract(u);function d(t,e){r.include.includes(t)&&(i[t]=e,n.push(e.data.buffer))}i.result=f,n.push(f.data.buffer),t(i,n)}))}const background={run:run,work:work};var background$1=background;function extend(t){t.extendMethod("background",background$1)}class Worker$1{constructor(){this._url=null,this._deps=[null]}checkUrl(){if(null===this._url)throw new Error("image worker must be initialized with an URL")}get url(){return this._url}set url(t){if("string"!=typeof t)throw new TypeError("worker URL must be a string");this._url=t,this._deps[0]=t}static extendMethod(t,e){let r,i,n={};function s(){r||(this.checkUrl(),i=this.url,r=new WorkerManager$1(e.work,{deps:i}),n.manager=r);for(var t=arguments.length,s=new Array(t),o=0;o<t;o++)s[o]=arguments[o];return e.run.call(n,...s)}s.reset=function(){r&&(r.terminate(),r=new WorkerManager$1(e.work,{deps:i}),n.manager=r)},Worker$1.prototype[t]=s}}extend(Worker$1);var worker$1=new Worker$1;const Static={grey:names$1,threshold:names};exports.Image=Image,exports.Kernel=kernel,exports.Shape=Shape,exports.Stack=Stack,exports.Static=Static,exports.Worker=worker$1,exports.default=Image,Object.defineProperty(exports,"__esModule",{value:!0})}));
//# sourceMappingURL=image-js.min.js.map